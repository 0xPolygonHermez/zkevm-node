// Code generated by mockery v2.32.0. DO NOT EDIT.

package l2_sync_etrog

import (
	pgx "github.com/jackc/pgx/v4"
	mock "github.com/stretchr/testify/mock"
)

// SynchronizerInterfaceMock is an autogenerated mock type for the SynchronizerInterface type
type SynchronizerInterfaceMock struct {
	mock.Mock
}

// CheckFlushID provides a mock function with given fields: dbTx
func (_m *SynchronizerInterfaceMock) CheckFlushID(dbTx pgx.Tx) error {
	ret := _m.Called(dbTx)

	var r0 error
	if rf, ok := ret.Get(0).(func(pgx.Tx) error); ok {
		r0 = rf(dbTx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PendingFlushID provides a mock function with given fields: flushID, proverID
func (_m *SynchronizerInterfaceMock) PendingFlushID(flushID uint64, proverID string) {
	_m.Called(flushID, proverID)
}

// NewSynchronizerInterfaceMock creates a new instance of SynchronizerInterfaceMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSynchronizerInterfaceMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *SynchronizerInterfaceMock {
	mock := &SynchronizerInterfaceMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
