// Code generated by mockery v2.32.0. DO NOT EDIT.

package synchronizer

import mock "github.com/stretchr/testify/mock"

// l1RollupProducerInterfaceMock is an autogenerated mock type for the l1RollupProducerInterfaceMock type
type l1RollupProducerInterfaceMock struct {
	mock.Mock
}

// reset provides a mock function with given fields: startingBlockNumber
func (_m *l1RollupProducerInterfaceMock) reset(startingBlockNumber uint64) {
	_m.Called(startingBlockNumber)
}

// start provides a mock function with given fields: startingBlockNumber
func (_m *l1RollupProducerInterfaceMock) start(startingBlockNumber uint64) error {
	ret := _m.Called(startingBlockNumber)

	var r0 error
	if rf, ok := ret.Get(0).(func(uint64) error); ok {
		r0 = rf(startingBlockNumber)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// stop provides a mock function with given fields:
func (_m *l1RollupProducerInterfaceMock) stop() {
	_m.Called()
}

// newL1RollupProducerInterfaceMock creates a new instance of l1RollupProducerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newL1RollupProducerInterfaceMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *l1RollupProducerInterfaceMock {
	mock := &l1RollupProducerInterfaceMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
