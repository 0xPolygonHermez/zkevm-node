// Code generated by mockery. DO NOT EDIT.

package mock_syncinterfaces

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// SyncPreRollupSyncer is an autogenerated mock type for the SyncPreRollupSyncer type
type SyncPreRollupSyncer struct {
	mock.Mock
}

type SyncPreRollupSyncer_Expecter struct {
	mock *mock.Mock
}

func (_m *SyncPreRollupSyncer) EXPECT() *SyncPreRollupSyncer_Expecter {
	return &SyncPreRollupSyncer_Expecter{mock: &_m.Mock}
}

// SynchronizePreGenesisRollupEvents provides a mock function with given fields: ctx
func (_m *SyncPreRollupSyncer) SynchronizePreGenesisRollupEvents(ctx context.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for SynchronizePreGenesisRollupEvents")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SyncPreRollupSyncer_SynchronizePreGenesisRollupEvents_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SynchronizePreGenesisRollupEvents'
type SyncPreRollupSyncer_SynchronizePreGenesisRollupEvents_Call struct {
	*mock.Call
}

// SynchronizePreGenesisRollupEvents is a helper method to define mock.On call
//   - ctx context.Context
func (_e *SyncPreRollupSyncer_Expecter) SynchronizePreGenesisRollupEvents(ctx interface{}) *SyncPreRollupSyncer_SynchronizePreGenesisRollupEvents_Call {
	return &SyncPreRollupSyncer_SynchronizePreGenesisRollupEvents_Call{Call: _e.mock.On("SynchronizePreGenesisRollupEvents", ctx)}
}

func (_c *SyncPreRollupSyncer_SynchronizePreGenesisRollupEvents_Call) Run(run func(ctx context.Context)) *SyncPreRollupSyncer_SynchronizePreGenesisRollupEvents_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *SyncPreRollupSyncer_SynchronizePreGenesisRollupEvents_Call) Return(_a0 error) *SyncPreRollupSyncer_SynchronizePreGenesisRollupEvents_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *SyncPreRollupSyncer_SynchronizePreGenesisRollupEvents_Call) RunAndReturn(run func(context.Context) error) *SyncPreRollupSyncer_SynchronizePreGenesisRollupEvents_Call {
	_c.Call.Return(run)
	return _c
}

// NewSyncPreRollupSyncer creates a new instance of SyncPreRollupSyncer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSyncPreRollupSyncer(t interface {
	mock.TestingT
	Cleanup(func())
}) *SyncPreRollupSyncer {
	mock := &SyncPreRollupSyncer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
