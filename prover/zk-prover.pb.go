// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: proto/zk-prover.proto

package prover

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type State_Status int32

const (
	State_IDLE     State_Status = 0
	State_ERROR    State_Status = 1
	State_PENDING  State_Status = 2
	State_FINISHED State_Status = 3
)

// Enum value maps for State_Status.
var (
	State_Status_name = map[int32]string{
		0: "IDLE",
		1: "ERROR",
		2: "PENDING",
		3: "FINISHED",
	}
	State_Status_value = map[string]int32{
		"IDLE":     0,
		"ERROR":    1,
		"PENDING":  2,
		"FINISHED": 3,
	}
)

func (x State_Status) Enum() *State_Status {
	p := new(State_Status)
	*p = x
	return p
}

func (x State_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_zk_prover_proto_enumTypes[0].Descriptor()
}

func (State_Status) Type() protoreflect.EnumType {
	return &file_proto_zk_prover_proto_enumTypes[0]
}

func (x State_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State_Status.Descriptor instead.
func (State_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{1, 0}
}

type NoParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoParams) Reset() {
	*x = NoParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoParams) ProtoMessage() {}

func (x *NoParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoParams.ProtoReflect.Descriptor instead.
func (*NoParams) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{0}
}

type State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status State_Status `protobuf:"varint,1,opt,name=status,proto3,enum=zkprover.State_Status" json:"status,omitempty"`
	Proof  *Proof       `protobuf:"bytes,2,opt,name=proof,proto3" json:"proof,omitempty"`
}

func (x *State) Reset() {
	*x = State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{1}
}

func (x *State) GetStatus() State_Status {
	if x != nil {
		return x.Status
	}
	return State_IDLE
}

func (x *State) GetProof() *Proof {
	if x != nil {
		return x.Proof
	}
	return nil
}

type ProofX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proof []string `protobuf:"bytes,1,rep,name=proof,proto3" json:"proof,omitempty"`
}

func (x *ProofX) Reset() {
	*x = ProofX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProofX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProofX) ProtoMessage() {}

func (x *ProofX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProofX.ProtoReflect.Descriptor instead.
func (*ProofX) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{2}
}

func (x *ProofX) GetProof() []string {
	if x != nil {
		return x.Proof
	}
	return nil
}

type PublicInputs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentStateRoot            []byte `protobuf:"bytes,1,opt,name=currentStateRoot,proto3" json:"currentStateRoot,omitempty"`
	CurrentLocalExitRoot        []byte `protobuf:"bytes,2,opt,name=currentLocalExitRoot,proto3" json:"currentLocalExitRoot,omitempty"`
	NewStateRoot                []byte `protobuf:"bytes,3,opt,name=newStateRoot,proto3" json:"newStateRoot,omitempty"`
	NewLocalExitRoot            []byte `protobuf:"bytes,4,opt,name=newLocalExitRoot,proto3" json:"newLocalExitRoot,omitempty"`
	SequencerAddress            string `protobuf:"bytes,5,opt,name=sequencerAddress,proto3" json:"sequencerAddress,omitempty"`
	L2TxsDataLastGlobalExitRoot []byte `protobuf:"bytes,6,opt,name=l2TxsDataLastGlobalExitRoot,proto3" json:"l2TxsDataLastGlobalExitRoot,omitempty"`
	ChainId                     uint64 `protobuf:"varint,7,opt,name=chainId,proto3" json:"chainId,omitempty"`
}

func (x *PublicInputs) Reset() {
	*x = PublicInputs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicInputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicInputs) ProtoMessage() {}

func (x *PublicInputs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicInputs.ProtoReflect.Descriptor instead.
func (*PublicInputs) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{3}
}

func (x *PublicInputs) GetCurrentStateRoot() []byte {
	if x != nil {
		return x.CurrentStateRoot
	}
	return nil
}

func (x *PublicInputs) GetCurrentLocalExitRoot() []byte {
	if x != nil {
		return x.CurrentLocalExitRoot
	}
	return nil
}

func (x *PublicInputs) GetNewStateRoot() []byte {
	if x != nil {
		return x.NewStateRoot
	}
	return nil
}

func (x *PublicInputs) GetNewLocalExitRoot() []byte {
	if x != nil {
		return x.NewLocalExitRoot
	}
	return nil
}

func (x *PublicInputs) GetSequencerAddress() string {
	if x != nil {
		return x.SequencerAddress
	}
	return ""
}

func (x *PublicInputs) GetL2TxsDataLastGlobalExitRoot() []byte {
	if x != nil {
		return x.L2TxsDataLastGlobalExitRoot
	}
	return nil
}

func (x *PublicInputs) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

type Proof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProofA       []string      `protobuf:"bytes,1,rep,name=proofA,proto3" json:"proofA,omitempty"`
	ProofB       []*ProofX     `protobuf:"bytes,2,rep,name=proofB,proto3" json:"proofB,omitempty"`
	ProofC       []string      `protobuf:"bytes,3,rep,name=proofC,proto3" json:"proofC,omitempty"`
	PublicInputs *PublicInputs `protobuf:"bytes,4,opt,name=publicInputs,proto3" json:"publicInputs,omitempty"`
}

func (x *Proof) Reset() {
	*x = Proof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Proof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proof) ProtoMessage() {}

func (x *Proof) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proof.ProtoReflect.Descriptor instead.
func (*Proof) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{4}
}

func (x *Proof) GetProofA() []string {
	if x != nil {
		return x.ProofA
	}
	return nil
}

func (x *Proof) GetProofB() []*ProofX {
	if x != nil {
		return x.ProofB
	}
	return nil
}

func (x *Proof) GetProofC() []string {
	if x != nil {
		return x.ProofC
	}
	return nil
}

func (x *Proof) GetPublicInputs() *PublicInputs {
	if x != nil {
		return x.PublicInputs
	}
	return nil
}

type Batch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message            string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	CurrentStateRoot   []byte `protobuf:"bytes,2,opt,name=currentStateRoot,proto3" json:"currentStateRoot,omitempty"`
	NewStateRoot       []byte `protobuf:"bytes,3,opt,name=newStateRoot,proto3" json:"newStateRoot,omitempty"`
	L2Txs              []byte `protobuf:"bytes,4,opt,name=l2Txs,proto3" json:"l2Txs,omitempty"`
	LastGlobalExitRoot []byte `protobuf:"bytes,5,opt,name=lastGlobalExitRoot,proto3" json:"lastGlobalExitRoot,omitempty"`
	SequencerAddress   string `protobuf:"bytes,6,opt,name=sequencerAddress,proto3" json:"sequencerAddress,omitempty"`
	ChainId            uint64 `protobuf:"varint,7,opt,name=chainId,proto3" json:"chainId,omitempty"`
}

func (x *Batch) Reset() {
	*x = Batch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Batch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Batch) ProtoMessage() {}

func (x *Batch) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Batch.ProtoReflect.Descriptor instead.
func (*Batch) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{5}
}

func (x *Batch) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Batch) GetCurrentStateRoot() []byte {
	if x != nil {
		return x.CurrentStateRoot
	}
	return nil
}

func (x *Batch) GetNewStateRoot() []byte {
	if x != nil {
		return x.NewStateRoot
	}
	return nil
}

func (x *Batch) GetL2Txs() []byte {
	if x != nil {
		return x.L2Txs
	}
	return nil
}

func (x *Batch) GetLastGlobalExitRoot() []byte {
	if x != nil {
		return x.LastGlobalExitRoot
	}
	return nil
}

func (x *Batch) GetSequencerAddress() string {
	if x != nil {
		return x.SequencerAddress
	}
	return ""
}

func (x *Batch) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

var File_proto_zk_prover_proto protoreflect.FileDescriptor

var file_proto_zk_prover_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x7a, 0x6b, 0x2d, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x72, 0x22, 0x0a, 0x0a, 0x08, 0x4e, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x98, 0x01,
	0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x38,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x44, 0x4c, 0x45,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x49,
	0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x03, 0x22, 0x1e, 0x0a, 0x06, 0x50, 0x72, 0x6f, 0x6f,
	0x66, 0x58, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0xc6, 0x02, 0x0a, 0x0c, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x14, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x45, 0x78, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x77,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0c, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x2a, 0x0a,
	0x10, 0x6e, 0x65, 0x77, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x69, 0x74, 0x52, 0x6f, 0x6f,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x6e, 0x65, 0x77, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x45, 0x78, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x40, 0x0a, 0x1b, 0x6c, 0x32, 0x54, 0x78, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x61, 0x73, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x78, 0x69, 0x74,
	0x52, 0x6f, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1b, 0x6c, 0x32, 0x54, 0x78,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x61, 0x73, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45,
	0x78, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x22, 0x9d, 0x01, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x41, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f,
	0x6f, 0x66, 0x41, 0x12, 0x28, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x42, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x58, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x42, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x43, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x43, 0x12, 0x3a, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x7a, 0x6b,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x73, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x73, 0x22, 0xfd, 0x01, 0x0a, 0x05, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x32, 0x54, 0x78, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6c, 0x32, 0x54, 0x78, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x6c,
	0x61, 0x73, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x78, 0x69, 0x74, 0x52, 0x6f, 0x6f,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x45, 0x78, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x32, 0xd6, 0x01, 0x0a, 0x08, 0x5a, 0x4b, 0x50, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x32,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x2e, 0x7a, 0x6b,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x0f, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x00, 0x12, 0x32, 0x0a, 0x08, 0x47, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x0f,
	0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x1a,
	0x0f, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x2f, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x12, 0x12, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x0f, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6f, 0x66, 0x12, 0x12, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x4e,
	0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x0f, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x00, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_zk_prover_proto_rawDescOnce sync.Once
	file_proto_zk_prover_proto_rawDescData = file_proto_zk_prover_proto_rawDesc
)

func file_proto_zk_prover_proto_rawDescGZIP() []byte {
	file_proto_zk_prover_proto_rawDescOnce.Do(func() {
		file_proto_zk_prover_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_zk_prover_proto_rawDescData)
	})
	return file_proto_zk_prover_proto_rawDescData
}

var file_proto_zk_prover_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_zk_prover_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_zk_prover_proto_goTypes = []interface{}{
	(State_Status)(0),    // 0: zkprover.State.Status
	(*NoParams)(nil),     // 1: zkprover.NoParams
	(*State)(nil),        // 2: zkprover.State
	(*ProofX)(nil),       // 3: zkprover.ProofX
	(*PublicInputs)(nil), // 4: zkprover.PublicInputs
	(*Proof)(nil),        // 5: zkprover.Proof
	(*Batch)(nil),        // 6: zkprover.Batch
}
var file_proto_zk_prover_proto_depIdxs = []int32{
	0, // 0: zkprover.State.status:type_name -> zkprover.State.Status
	5, // 1: zkprover.State.proof:type_name -> zkprover.Proof
	3, // 2: zkprover.Proof.proofB:type_name -> zkprover.ProofX
	4, // 3: zkprover.Proof.publicInputs:type_name -> zkprover.PublicInputs
	1, // 4: zkprover.ZKProver.GetStatus:input_type -> zkprover.NoParams
	6, // 5: zkprover.ZKProver.GenProof:input_type -> zkprover.Batch
	1, // 6: zkprover.ZKProver.Cancel:input_type -> zkprover.NoParams
	1, // 7: zkprover.ZKProver.GetProof:input_type -> zkprover.NoParams
	2, // 8: zkprover.ZKProver.GetStatus:output_type -> zkprover.State
	5, // 9: zkprover.ZKProver.GenProof:output_type -> zkprover.Proof
	2, // 10: zkprover.ZKProver.Cancel:output_type -> zkprover.State
	5, // 11: zkprover.ZKProver.GetProof:output_type -> zkprover.Proof
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_zk_prover_proto_init() }
func file_proto_zk_prover_proto_init() {
	if File_proto_zk_prover_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_zk_prover_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zk_prover_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zk_prover_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProofX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zk_prover_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicInputs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zk_prover_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Proof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zk_prover_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Batch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_zk_prover_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_zk_prover_proto_goTypes,
		DependencyIndexes: file_proto_zk_prover_proto_depIdxs,
		EnumInfos:         file_proto_zk_prover_proto_enumTypes,
		MessageInfos:      file_proto_zk_prover_proto_msgTypes,
	}.Build()
	File_proto_zk_prover_proto = out.File
	file_proto_zk_prover_proto_rawDesc = nil
	file_proto_zk_prover_proto_goTypes = nil
	file_proto_zk_prover_proto_depIdxs = nil
}
