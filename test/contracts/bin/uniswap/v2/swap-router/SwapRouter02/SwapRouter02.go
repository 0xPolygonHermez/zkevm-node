// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package SwapRouter02

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// IApproveAndCallIncreaseLiquidityParams is an auto generated low-level Go binding around an user-defined struct.
type IApproveAndCallIncreaseLiquidityParams struct {
	Token0     common.Address
	Token1     common.Address
	TokenId    *big.Int
	Amount0Min *big.Int
	Amount1Min *big.Int
}

// IApproveAndCallMintParams is an auto generated low-level Go binding around an user-defined struct.
type IApproveAndCallMintParams struct {
	Token0     common.Address
	Token1     common.Address
	Fee        *big.Int
	TickLower  *big.Int
	TickUpper  *big.Int
	Amount0Min *big.Int
	Amount1Min *big.Int
	Recipient  common.Address
}

// SwapRouter02MetaData contains all meta data concerning the SwapRouter02 contract.
var SwapRouter02MetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factoryV2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factoryV3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_positionManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH9\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"approveMax\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"approveMaxMinusOne\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"approveZeroThenMax\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"approveZeroThenMaxMinusOne\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"callPositionManager\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryV2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getApprovalType\",\"outputs\":[{\"internalType\":\"enumIApproveAndCall.ApprovalType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"}],\"internalType\":\"structIApproveAndCall.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"structIApproveAndCall.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"previousBlockhash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowed\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowedIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeBips\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"sweepTokenWithFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeBips\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"sweepTokenWithFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeBips\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9WithFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeBips\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9WithFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"wrapETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
	Bin: "0x6101006040523480156200001257600080fd5b50604051620033c7380380620033c7833981016040819052620000359162000081565b6001600160601b0319606094851b811660805291841b821660a05291831b811660c052911b1660e052620000dd565b80516001600160a01b03811681146200007c57600080fd5b919050565b6000806000806080858703121562000097578384fd5b620000a28562000064565b9350620000b26020860162000064565b9250620000c26040860162000064565b9150620000d26060860162000064565b905092959194509250565b60805160601c60a05160601c60c05160601c60e05160601c61325362000174600039806101f752806106875280610cd55280610dc05280610e5a5280610f60528061104b5280611c225280611c685280611cdc525080611445525080610f2052806113035280611488528061209c52508061077252806108355280610a945280610efc5280611e075280611f6e52506132536000f3fe6080604052600436106101e75760003560e01c80639b2c0a3711610102578063d4ef38de11610095578063e90a182f11610064578063e90a182f146104c4578063f100b205146104d7578063f2d5d56b146104ea578063f3995c67146104fd57610257565b8063d4ef38de1461045e578063dee00f3514610471578063df2ab5bb1461049e578063e0e189a0146104b157610257565b8063b3a2af13116100d1578063b3a2af1314610410578063c2e3140a14610423578063c45a015514610436578063cab372ce1461044b57610257565b80639b2c0a37146103c4578063a4a78f0c146103d7578063ab3fdd50146103ea578063ac9650d8146103fd57610257565b806349404b7c1161017a5780635ae401dc116101495780635ae401dc14610374578063639d71a91461038757806368e0d4e11461039a578063791b98bc146103af57610257565b806349404b7c14610319578063496169971461032c5780634aa4a4fc1461033f578063571ac8b01461036157610257565b80633068c554116101b65780633068c554146102c057806342712a67146102d35780634659a494146102f3578063472b43f31461030657610257565b806311ed56c91461025c57806312210e8a146102855780631c58db4f1461028d5780631f0464d1146102a057610257565b3661025757336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610255576040805162461bcd60e51b81526020600482015260096024820152684e6f7420574554483960b81b604482015290519081900360640190fd5b005b600080fd5b61026f61026a366004612bcf565b610510565b60405161027c9190612e88565b60405180910390f35b610255610673565b61025561029b366004612c52565b610685565b6102b36102ae366004612a70565b6106fc565b60405161027c9190612e28565b6102556102ce36600461296d565b610758565b6102e66102e1366004612d12565b61076b565b60405161027c9190612ffa565b6102556103013660046129b2565b61091a565b6102e6610314366004612d12565b6109b4565b610255610327366004612c82565b610cd1565b61025561033a366004612c52565b610e4b565b34801561034b57600080fd5b50610354610e58565b60405161027c9190612de1565b61025561036f366004612892565b610e7c565b6102b3610382366004612a70565b610e91565b610255610395366004612892565b610ee6565b3480156103a657600080fd5b50610354610efa565b3480156103bb57600080fd5b50610354610f1e565b6102556103d2366004612cad565b610f42565b6102556103e53660046129b2565b61110c565b6102556103f8366004612892565b61119d565b6102b361040b366004612a10565b6111bd565b61026f61041e366004612aba565b6112fd565b6102556104313660046129b2565b6113b4565b34801561044257600080fd5b50610354611443565b610255610459366004612892565b6111b1565b61025561046c366004612ce7565b611467565b34801561047d57600080fd5b5061049161048c3660046128b3565b611473565b60405161027c9190612e9b565b6102556104ac3660046128dc565b61159b565b6102556104bf366004612917565b611673565b6102556104d23660046128b3565b61179a565b61026f6104e5366004612bbe565b6117a9565b6102556104f83660046128b3565b61182b565b61025561050b3660046129b2565b611837565b60408051610160810190915260609061066b90634418b22b60e11b908061053a6020870187612892565b6001600160a01b0316815260200185602001602081019061055b9190612892565b6001600160a01b031681526020016105796060870160408801612c2f565b62ffffff1681526020016105936080870160608801612b33565b60020b81526020016105ab60a0870160808801612b33565b60020b81526020908101906105cb906105c690880188612892565b6118a9565b81526020016105e68660200160208101906105c69190612892565b815260a0860135602082015260c08601356040820152606001610610610100870160e08801612892565b6001600160a01b031681526020016000198152506040516024016106349190612f4c565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526112fd565b90505b919050565b4715610683576106833347611928565b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156106e057600080fd5b505af11580156106f4573d6000803e3d6000fd5b505050505050565b60608380600143034014610743576040805162461bcd60e51b8152602060048201526009602482015268084d8dec6d6d0c2e6d60bb1b604482015290519081900360640190fd5b61074d84846111bd565b91505b509392505050565b6107658484338585611673565b50505050565b60006107cb7f000000000000000000000000000000000000000000000000000000000000000087868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611a1b92505050565b6000815181106107d757fe5b602002602001015190508481111561080a5760405162461bcd60e51b815260040161080190612eaf565b60405180910390fd5b6108a38484600081811061081a57fe5b905060200201602081019061082f9190612892565b3361089d7f00000000000000000000000000000000000000000000000000000000000000008888600081811061086157fe5b90506020020160208101906108769190612892565b8989600181811061088357fe5b90506020020160208101906108989190612892565b611b60565b84611c20565b6001600160a01b038216600114156108bd573391506108d3565b6001600160a01b038216600214156108d3573091505b610911848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250869250611db0915050565b95945050505050565b604080516323f2ebc360e21b815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e4810183905290516001600160a01b03881691638fcbaf0c9161010480830192600092919082900301818387803b15801561099457600080fd5b505af11580156109a8573d6000803e3d6000fd5b50505050505050505050565b60008086610a5d5750600184846000816109ca57fe5b90506020020160208101906109df9190612892565b6001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610a0a9190612de1565b60206040518083038186803b158015610a2257600080fd5b505afa158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a9190612c6a565b96505b610ae885856000818110610a6d57fe5b9050602002016020810190610a829190612892565b82610a8d5733610a8f565b305b610ae27f000000000000000000000000000000000000000000000000000000000000000089896000818110610ac057fe5b9050602002016020810190610ad59190612892565b8a8a600181811061088357fe5b8a611c20565b6001600160a01b03831660011415610b0257339250610b18565b6001600160a01b03831660021415610b18573092505b600085856000198101818110610b2a57fe5b9050602002016020810190610b3f9190612892565b6001600160a01b03166370a08231856040518263ffffffff1660e01b8152600401610b6a9190612de1565b60206040518083038186803b158015610b8257600080fd5b505afa158015610b96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bba9190612c6a565b9050610bfa868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250889250611db0915050565b610ca48187876000198101818110610c0e57fe5b9050602002016020810190610c239190612892565b6001600160a01b03166370a08231876040518263ffffffff1660e01b8152600401610c4e9190612de1565b60206040518083038186803b158015610c6657600080fd5b505afa158015610c7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9e9190612c6a565b90612033565b925086831015610cc65760405162461bcd60e51b815260040161080190612edb565b505095945050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610d4057600080fd5b505afa158015610d54573d6000803e3d6000fd5b505050506040513d6020811015610d6a57600080fd5b5051905082811015610db8576040805162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e7420574554483960701b604482015290519081900360640190fd5b8015610e46577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610e2457600080fd5b505af1158015610e38573d6000803e3d6000fd5b50505050610e468282611928565b505050565b610e558133610cd1565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b610e8881600019612083565b610e5557600080fd5b60608380610e9d612177565b1115610743576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b610ef1816000612083565b610e7c57600080fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600082118015610f53575060648211155b610f5c57600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610fcb57600080fd5b505afa158015610fdf573d6000803e3d6000fd5b505050506040513d6020811015610ff557600080fd5b5051905084811015611043576040805162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e7420574554483960701b604482015290519081900360640190fd5b8015611105577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156110af57600080fd5b505af11580156110c3573d6000803e3d6000fd5b5050505060006127106110df858461217b90919063ffffffff16565b816110e657fe5b04905080156110f9576110f98382611928565b6106f485828403611928565b5050505050565b60408051636eb1769f60e11b81523360048201523060248201529051600019916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b15801561115d57600080fd5b505afa158015611171573d6000803e3d6000fd5b505050506040513d602081101561118757600080fd5b505110156106f4576106f486868686868661091a565b6111a8816000612083565b6111b157600080fd5b610e8881600119612083565b60608167ffffffffffffffff811180156111d657600080fd5b5060405190808252806020026020018201604052801561120a57816020015b60608152602001906001900390816111f55790505b50905060005b828110156112f6576000803086868581811061122857fe5b905060200281019061123a9190613030565b604051611248929190612db5565b600060405180830381855af49150503d8060008114611283576040519150601f19603f3d011682016040523d82523d6000602084013e611288565b606091505b5091509150816112d4576044815110156112a157600080fd5b600481019050808060200190518101906112bb9190612b54565b60405162461bcd60e51b81526004016108019190612e88565b808484815181106112e157fe5b60209081029190910101525050600101611210565b5092915050565b606060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836040516113399190612dc5565b6000604051808303816000865af19150503d8060008114611376576040519150601f19603f3d011682016040523d82523d6000602084013e61137b565b606091505b5092509050806113ae5760448251101561139457600080fd5b600482019150818060200190518101906112bb9190612b54565b50919050565b60408051636eb1769f60e11b8152336004820152306024820152905186916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b15801561140357600080fd5b505afa158015611417573d6000803e3d6000fd5b505050506040513d602081101561142d57600080fd5b505110156106f4576106f4868686868686611837565b7f000000000000000000000000000000000000000000000000000000000000000081565b610e4683338484610f42565b600081836001600160a01b031663dd62ed3e307f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016114c4929190612df5565b60206040518083038186803b1580156114dc57600080fd5b505afa1580156114f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115149190612c6a565b1061152157506000611595565b61152d83600019612083565b1561153a57506001611595565b61154683600119612083565b1561155357506002611595565b61155e836000612083565b61156757600080fd5b61157383600019612083565b1561158057506003611595565b61158c83600119612083565b15610257575060045b92915050565b6000836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156115ea57600080fd5b505afa1580156115fe573d6000803e3d6000fd5b505050506040513d602081101561161457600080fd5b5051905082811015611662576040805162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a103a37b5b2b760711b604482015290519081900360640190fd5b8015610765576107658483836121de565b600082118015611684575060648211155b61168d57600080fd5b6000856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156116dc57600080fd5b505afa1580156116f0573d6000803e3d6000fd5b505050506040513d602081101561170657600080fd5b5051905084811015611754576040805162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a103a37b5b2b760711b604482015290519081900360640190fd5b80156106f4576000612710611769838661217b565b8161177057fe5b0490508015611784576117848784836121de565b61179187868385036121de565b50505050505050565b6117a582823361159b565b5050565b606061066b63219f5d1760e01b6040518060c00160405280856040013581526020016117e18660000160208101906105c69190612892565b81526020016117fc8660200160208101906105c69190612892565b815260200185606001358152602001856080013581526020016000198152506040516024016106349190612f08565b6117a58233308461232a565b6040805163d505accf60e01b8152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c4810183905290516001600160a01b0388169163d505accf9160e480830192600092919082900301818387803b15801561099457600080fd5b6040516370a0823160e01b81526000906001600160a01b038316906370a08231906118d8903090600401612de1565b60206040518083038186803b1580156118f057600080fd5b505afa158015611904573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066b9190612c6a565b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b602083106119745780518252601f199092019160209182019101611955565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146119d6576040519150601f19603f3d011682016040523d82523d6000602084013e6119db565b606091505b5050905080610e465760405162461bcd60e51b81526004018080602001828103825260348152602001806131456034913960400191505060405180910390fd5b6060600282511015611a74576040805162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a20494e56414c49445f504154480000604482015290519081900360640190fd5b815167ffffffffffffffff81118015611a8c57600080fd5b50604051908082528060200260200182016040528015611ab6578160200160208202803683370190505b5090508281600183510381518110611aca57fe5b60209081029190910101528151600019015b801561075057600080611b1987866001860381518110611af857fe5b6020026020010151878681518110611b0c57fe5b602002602001015161247e565b91509150611b3b848481518110611b2c57fe5b60200260200101518383612545565b846001850381518110611b4a57fe5b6020908102919091010152505060001901611adc565b6000806000611b6f858561261d565b604080516bffffffffffffffffffffffff19606094851b811660208084019190915293851b81166034830152825160288184030181526048830184528051908501206001600160f81b031960688401529a90941b9093166069840152607d8301989098527f19b587dda797627276d67f4eafe536168367ef648efce5d9b1efa205edfeb4f1609d808401919091528851808403909101815260bd909201909752805196019590952095945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316148015611c615750804710155b15611d83577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015611cc157600080fd5b505af1158015611cd5573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015611d5157600080fd5b505af1158015611d65573d6000803e3d6000fd5b505050506040513d6020811015611d7b57600080fd5b506107659050565b6001600160a01b038316301415611da457611d9f8483836121de565b610765565b6107658484848461232a565b60005b6001835103811015610e4657600080848381518110611dce57fe5b6020026020010151858460010181518110611de557fe5b6020026020010151915091506000611dfd838361261d565b5090506000611e2d7f00000000000000000000000000000000000000000000000000000000000000008585611b60565b9050600080600080846001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015611e6e57600080fd5b505afa158015611e82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ea69190612be1565b506001600160701b031691506001600160701b03169150600080876001600160a01b03168a6001600160a01b031614611ee0578284611ee3565b83835b91509150611f17828b6001600160a01b03166370a082318a6040518263ffffffff1660e01b8152600401610c4e9190612de1565b9550611f248683836126fb565b945050505050600080856001600160a01b0316886001600160a01b031614611f4e57826000611f52565b6000835b91509150600060028c51038a10611f69578a611faa565b611faa7f0000000000000000000000000000000000000000000000000000000000000000898e8d60020181518110611f9d57fe5b6020026020010151611b60565b6040805160008152602081019182905263022c0d9f60e01b9091529091506001600160a01b0387169063022c0d9f90611fec9086908690869060248101613003565b600060405180830381600087803b15801561200657600080fd5b505af115801561201a573d6000803e3d6000fd5b50506001909b019a50611db39950505050505050505050565b80820382811115611595576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6000806000846001600160a01b031663095ea7b360e01b7f0000000000000000000000000000000000000000000000000000000000000000866040516024016120cd929190612e0f565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161210b9190612dc5565b6000604051808303816000865af19150503d8060008114612148576040519150601f19603f3d011682016040523d82523d6000602084013e61214d565b606091505b50915091508180156109115750805115806109115750808060200190518101906109119190612a50565b4290565b60008115806121965750508082028282828161219357fe5b04145b611595576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b6020831061225a5780518252601f19909201916020918201910161223b565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146122bc576040519150601f19603f3d011682016040523d82523d6000602084013e6122c1565b606091505b50915091508180156122ef5750805115806122ef57508080602001905160208110156122ec57600080fd5b50515b6111055760405162461bcd60e51b815260040180806020018281038252602d8152602001806131c6602d913960400191505060405180910390fd5b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b178152925182516000948594938a169392918291908083835b602083106123ae5780518252601f19909201916020918201910161238f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612410576040519150601f19603f3d011682016040523d82523d6000602084013e612415565b606091505b5091509150818015612443575080511580612443575080806020019051602081101561244057600080fd5b50515b6106f45760405162461bcd60e51b81526004018080602001828103825260318152602001806131146031913960400191505060405180910390fd5b600080600061248d858561261d565b50905060008061249e888888611b60565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156124d657600080fd5b505afa1580156124ea573d6000803e3d6000fd5b505050506040513d606081101561250057600080fd5b5080516020909101516001600160701b0391821693501690506001600160a01b0387811690841614612533578082612536565b81815b90999098509650505050505050565b60008084116125855760405162461bcd60e51b815260040180806020018281038252602c8152602001806130e8602c913960400191505060405180910390fd5b6000831180156125955750600082115b6125d05760405162461bcd60e51b815260040180806020018281038252602881526020018061319e6028913960400191505060405180910390fd5b60006125e86103e86125e2868861217b565b9061217b565b905060006125fc6103e56125e28689612033565b9050612613600182848161260c57fe5b04906127d3565b9695505050505050565b600080826001600160a01b0316846001600160a01b031614156126715760405162461bcd60e51b81526004018080602001828103825260258152602001806131796025913960400191505060405180910390fd5b826001600160a01b0316846001600160a01b031610612691578284612694565b83835b90925090506001600160a01b0382166126f4576040805162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f414444524553530000604482015290519081900360640190fd5b9250929050565b600080841161273b5760405162461bcd60e51b815260040180806020018281038252602b8152602001806131f3602b913960400191505060405180910390fd5b60008311801561274b5750600082115b6127865760405162461bcd60e51b815260040180806020018281038252602881526020018061319e6028913960400191505060405180910390fd5b6000612794856103e561217b565b905060006127a2828561217b565b905060006127bc836127b6886103e861217b565b906127d3565b90508082816127c757fe5b04979650505050505050565b80820182811015611595576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fd5b80356001600160a01b038116811461066e57600080fd5b60008083601f84011261284a578081fd5b50813567ffffffffffffffff811115612861578182fd5b60208301915083602080830285010111156126f457600080fd5b80516001600160701b038116811461066e57600080fd5b6000602082840312156128a3578081fd5b6128ac82612822565b9392505050565b600080604083850312156128c5578081fd5b6128ce83612822565b946020939093013593505050565b6000806000606084860312156128f0578081fd5b6128f984612822565b92506020840135915061290e60408501612822565b90509250925092565b600080600080600060a0868803121561292e578081fd5b61293786612822565b94506020860135935061294c60408701612822565b92506060860135915061296160808701612822565b90509295509295909350565b60008060008060808587031215612982578384fd5b61298b85612822565b935060208501359250604085013591506129a760608601612822565b905092959194509250565b60008060008060008060c087890312156129ca578081fd5b6129d387612822565b95506020870135945060408701359350606087013560ff811681146129f6578182fd5b9598949750929560808101359460a0909101359350915050565b60008060208385031215612a22578182fd5b823567ffffffffffffffff811115612a38578283fd5b612a4485828601612839565b90969095509350505050565b600060208284031215612a61578081fd5b815180151581146128ac578182fd5b600080600060408486031215612a84578081fd5b83359250602084013567ffffffffffffffff811115612aa1578182fd5b612aad86828701612839565b9497909650939450505050565b600060208284031215612acb578081fd5b813567ffffffffffffffff811115612ae1578182fd5b8201601f81018413612af1578182fd5b8035612b04612aff82613099565b613075565b818152856020838501011115612b18578384fd5b81602084016020830137908101602001929092525092915050565b600060208284031215612b44578081fd5b81358060020b81146128ac578182fd5b600060208284031215612b65578081fd5b815167ffffffffffffffff811115612b7b578182fd5b8201601f81018413612b8b578182fd5b8051612b99612aff82613099565b818152856020838501011115612bad578384fd5b6109118260208301602086016130bb565b600060a082840312156113ae578081fd5b600061010082840312156113ae578081fd5b600080600060608486031215612bf5578081fd5b612bfe8461287b565b9250612c0c6020850161287b565b9150604084015163ffffffff81168114612c24578182fd5b809150509250925092565b600060208284031215612c40578081fd5b813562ffffff811681146128ac578182fd5b600060208284031215612c63578081fd5b5035919050565b600060208284031215612c7b578081fd5b5051919050565b60008060408385031215612c94578182fd5b82359150612ca460208401612822565b90509250929050565b60008060008060808587031215612cc2578182fd5b84359350612cd260208601612822565b9250604085013591506129a760608601612822565b600080600060608486031215612cfb578081fd5b833592506020840135915061290e60408501612822565b600080600080600060808688031215612d29578283fd5b8535945060208601359350604086013567ffffffffffffffff811115612d4d578384fd5b612d5988828901612839565b9094509250612961905060608701612822565b6001600160a01b03169052565b60008151808452612d918160208601602086016130bb565b601f01601f19169290920160200192915050565b60020b9052565b62ffffff169052565b6000828483379101908152919050565b60008251612dd78184602087016130bb565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015612e7b57603f19888603018452612e69858351612d79565b94509285019290850190600101612e4d565b5092979650505050505050565b6000602082526128ac6020830184612d79565b6020810160058310612ea957fe5b91905290565b602080825260129082015271151bdbc81b5d58da081c995c5d595cdd195960721b604082015260600190565b602080825260139082015272151bdbc81b1a5d1d1b19481c9958d95a5d9959606a1b604082015260600190565b600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b600061016082019050612f60828451612d6c565b6020830151612f726020840182612d6c565b506040830151612f856040840182612dac565b506060830151612f986060840182612da5565b506080830151612fab6080840182612da5565b5060a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151612fe982850182612d6c565b505061014092830151919092015290565b90815260200190565b600085825284602083015260018060a01b0384166040830152608060608301526126136080830184612d79565b6000808335601e19843603018112613046578283fd5b83018035915067ffffffffffffffff821115613060578283fd5b6020019150368190038213156126f457600080fd5b60405181810167ffffffffffffffff8111828210171561309157fe5b604052919050565b600067ffffffffffffffff8211156130ad57fe5b50601f01601f191660200190565b60005b838110156130d65781810151838201526020016130be565b83811115610765575050600091015256fe556e697377617056324c6962726172793a20494e53554646494349454e545f4f55545055545f414d4f554e545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65645472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c6564556e697377617056324c6962726172793a204944454e544943414c5f414444524553534553556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954595472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e54a2646970667358221220487cb84996fad0bb6c0489307c041f4200720ebd65f44a43c7e26e4fbd6fe5ab64736f6c63430007060033",
}

// SwapRouter02ABI is the input ABI used to generate the binding from.
// Deprecated: Use SwapRouter02MetaData.ABI instead.
var SwapRouter02ABI = SwapRouter02MetaData.ABI

// SwapRouter02Bin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use SwapRouter02MetaData.Bin instead.
var SwapRouter02Bin = SwapRouter02MetaData.Bin

// DeploySwapRouter02 deploys a new Ethereum contract, binding an instance of SwapRouter02 to it.
func DeploySwapRouter02(auth *bind.TransactOpts, backend bind.ContractBackend, _factoryV2 common.Address, factoryV3 common.Address, _positionManager common.Address, _WETH9 common.Address) (common.Address, *types.Transaction, *SwapRouter02, error) {
	parsed, err := SwapRouter02MetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(SwapRouter02Bin), backend, _factoryV2, factoryV3, _positionManager, _WETH9)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &SwapRouter02{SwapRouter02Caller: SwapRouter02Caller{contract: contract}, SwapRouter02Transactor: SwapRouter02Transactor{contract: contract}, SwapRouter02Filterer: SwapRouter02Filterer{contract: contract}}, nil
}

// SwapRouter02 is an auto generated Go binding around an Ethereum contract.
type SwapRouter02 struct {
	SwapRouter02Caller     // Read-only binding to the contract
	SwapRouter02Transactor // Write-only binding to the contract
	SwapRouter02Filterer   // Log filterer for contract events
}

// SwapRouter02Caller is an auto generated read-only Go binding around an Ethereum contract.
type SwapRouter02Caller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwapRouter02Transactor is an auto generated write-only Go binding around an Ethereum contract.
type SwapRouter02Transactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwapRouter02Filterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SwapRouter02Filterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwapRouter02Session is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SwapRouter02Session struct {
	Contract     *SwapRouter02     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SwapRouter02CallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SwapRouter02CallerSession struct {
	Contract *SwapRouter02Caller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// SwapRouter02TransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SwapRouter02TransactorSession struct {
	Contract     *SwapRouter02Transactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// SwapRouter02Raw is an auto generated low-level Go binding around an Ethereum contract.
type SwapRouter02Raw struct {
	Contract *SwapRouter02 // Generic contract binding to access the raw methods on
}

// SwapRouter02CallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SwapRouter02CallerRaw struct {
	Contract *SwapRouter02Caller // Generic read-only contract binding to access the raw methods on
}

// SwapRouter02TransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SwapRouter02TransactorRaw struct {
	Contract *SwapRouter02Transactor // Generic write-only contract binding to access the raw methods on
}

// NewSwapRouter02 creates a new instance of SwapRouter02, bound to a specific deployed contract.
func NewSwapRouter02(address common.Address, backend bind.ContractBackend) (*SwapRouter02, error) {
	contract, err := bindSwapRouter02(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &SwapRouter02{SwapRouter02Caller: SwapRouter02Caller{contract: contract}, SwapRouter02Transactor: SwapRouter02Transactor{contract: contract}, SwapRouter02Filterer: SwapRouter02Filterer{contract: contract}}, nil
}

// NewSwapRouter02Caller creates a new read-only instance of SwapRouter02, bound to a specific deployed contract.
func NewSwapRouter02Caller(address common.Address, caller bind.ContractCaller) (*SwapRouter02Caller, error) {
	contract, err := bindSwapRouter02(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SwapRouter02Caller{contract: contract}, nil
}

// NewSwapRouter02Transactor creates a new write-only instance of SwapRouter02, bound to a specific deployed contract.
func NewSwapRouter02Transactor(address common.Address, transactor bind.ContractTransactor) (*SwapRouter02Transactor, error) {
	contract, err := bindSwapRouter02(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SwapRouter02Transactor{contract: contract}, nil
}

// NewSwapRouter02Filterer creates a new log filterer instance of SwapRouter02, bound to a specific deployed contract.
func NewSwapRouter02Filterer(address common.Address, filterer bind.ContractFilterer) (*SwapRouter02Filterer, error) {
	contract, err := bindSwapRouter02(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SwapRouter02Filterer{contract: contract}, nil
}

// bindSwapRouter02 binds a generic wrapper to an already deployed contract.
func bindSwapRouter02(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SwapRouter02ABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SwapRouter02 *SwapRouter02Raw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SwapRouter02.Contract.SwapRouter02Caller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SwapRouter02 *SwapRouter02Raw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SwapRouter02Transactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SwapRouter02 *SwapRouter02Raw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SwapRouter02Transactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SwapRouter02 *SwapRouter02CallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SwapRouter02.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SwapRouter02 *SwapRouter02TransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SwapRouter02.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SwapRouter02 *SwapRouter02TransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SwapRouter02.Contract.contract.Transact(opts, method, params...)
}

// WETH9 is a free data retrieval call binding the contract method 0x4aa4a4fc.
//
// Solidity: function WETH9() view returns(address)
func (_SwapRouter02 *SwapRouter02Caller) WETH9(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _SwapRouter02.contract.Call(opts, &out, "WETH9")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// WETH9 is a free data retrieval call binding the contract method 0x4aa4a4fc.
//
// Solidity: function WETH9() view returns(address)
func (_SwapRouter02 *SwapRouter02Session) WETH9() (common.Address, error) {
	return _SwapRouter02.Contract.WETH9(&_SwapRouter02.CallOpts)
}

// WETH9 is a free data retrieval call binding the contract method 0x4aa4a4fc.
//
// Solidity: function WETH9() view returns(address)
func (_SwapRouter02 *SwapRouter02CallerSession) WETH9() (common.Address, error) {
	return _SwapRouter02.Contract.WETH9(&_SwapRouter02.CallOpts)
}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_SwapRouter02 *SwapRouter02Caller) Factory(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _SwapRouter02.contract.Call(opts, &out, "factory")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_SwapRouter02 *SwapRouter02Session) Factory() (common.Address, error) {
	return _SwapRouter02.Contract.Factory(&_SwapRouter02.CallOpts)
}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_SwapRouter02 *SwapRouter02CallerSession) Factory() (common.Address, error) {
	return _SwapRouter02.Contract.Factory(&_SwapRouter02.CallOpts)
}

// FactoryV2 is a free data retrieval call binding the contract method 0x68e0d4e1.
//
// Solidity: function factoryV2() view returns(address)
func (_SwapRouter02 *SwapRouter02Caller) FactoryV2(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _SwapRouter02.contract.Call(opts, &out, "factoryV2")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// FactoryV2 is a free data retrieval call binding the contract method 0x68e0d4e1.
//
// Solidity: function factoryV2() view returns(address)
func (_SwapRouter02 *SwapRouter02Session) FactoryV2() (common.Address, error) {
	return _SwapRouter02.Contract.FactoryV2(&_SwapRouter02.CallOpts)
}

// FactoryV2 is a free data retrieval call binding the contract method 0x68e0d4e1.
//
// Solidity: function factoryV2() view returns(address)
func (_SwapRouter02 *SwapRouter02CallerSession) FactoryV2() (common.Address, error) {
	return _SwapRouter02.Contract.FactoryV2(&_SwapRouter02.CallOpts)
}

// PositionManager is a free data retrieval call binding the contract method 0x791b98bc.
//
// Solidity: function positionManager() view returns(address)
func (_SwapRouter02 *SwapRouter02Caller) PositionManager(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _SwapRouter02.contract.Call(opts, &out, "positionManager")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PositionManager is a free data retrieval call binding the contract method 0x791b98bc.
//
// Solidity: function positionManager() view returns(address)
func (_SwapRouter02 *SwapRouter02Session) PositionManager() (common.Address, error) {
	return _SwapRouter02.Contract.PositionManager(&_SwapRouter02.CallOpts)
}

// PositionManager is a free data retrieval call binding the contract method 0x791b98bc.
//
// Solidity: function positionManager() view returns(address)
func (_SwapRouter02 *SwapRouter02CallerSession) PositionManager() (common.Address, error) {
	return _SwapRouter02.Contract.PositionManager(&_SwapRouter02.CallOpts)
}

// ApproveMax is a paid mutator transaction binding the contract method 0x571ac8b0.
//
// Solidity: function approveMax(address token) payable returns()
func (_SwapRouter02 *SwapRouter02Transactor) ApproveMax(opts *bind.TransactOpts, token common.Address) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "approveMax", token)
}

// ApproveMax is a paid mutator transaction binding the contract method 0x571ac8b0.
//
// Solidity: function approveMax(address token) payable returns()
func (_SwapRouter02 *SwapRouter02Session) ApproveMax(token common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.ApproveMax(&_SwapRouter02.TransactOpts, token)
}

// ApproveMax is a paid mutator transaction binding the contract method 0x571ac8b0.
//
// Solidity: function approveMax(address token) payable returns()
func (_SwapRouter02 *SwapRouter02TransactorSession) ApproveMax(token common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.ApproveMax(&_SwapRouter02.TransactOpts, token)
}

// ApproveMaxMinusOne is a paid mutator transaction binding the contract method 0xcab372ce.
//
// Solidity: function approveMaxMinusOne(address token) payable returns()
func (_SwapRouter02 *SwapRouter02Transactor) ApproveMaxMinusOne(opts *bind.TransactOpts, token common.Address) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "approveMaxMinusOne", token)
}

// ApproveMaxMinusOne is a paid mutator transaction binding the contract method 0xcab372ce.
//
// Solidity: function approveMaxMinusOne(address token) payable returns()
func (_SwapRouter02 *SwapRouter02Session) ApproveMaxMinusOne(token common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.ApproveMaxMinusOne(&_SwapRouter02.TransactOpts, token)
}

// ApproveMaxMinusOne is a paid mutator transaction binding the contract method 0xcab372ce.
//
// Solidity: function approveMaxMinusOne(address token) payable returns()
func (_SwapRouter02 *SwapRouter02TransactorSession) ApproveMaxMinusOne(token common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.ApproveMaxMinusOne(&_SwapRouter02.TransactOpts, token)
}

// ApproveZeroThenMax is a paid mutator transaction binding the contract method 0x639d71a9.
//
// Solidity: function approveZeroThenMax(address token) payable returns()
func (_SwapRouter02 *SwapRouter02Transactor) ApproveZeroThenMax(opts *bind.TransactOpts, token common.Address) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "approveZeroThenMax", token)
}

// ApproveZeroThenMax is a paid mutator transaction binding the contract method 0x639d71a9.
//
// Solidity: function approveZeroThenMax(address token) payable returns()
func (_SwapRouter02 *SwapRouter02Session) ApproveZeroThenMax(token common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.ApproveZeroThenMax(&_SwapRouter02.TransactOpts, token)
}

// ApproveZeroThenMax is a paid mutator transaction binding the contract method 0x639d71a9.
//
// Solidity: function approveZeroThenMax(address token) payable returns()
func (_SwapRouter02 *SwapRouter02TransactorSession) ApproveZeroThenMax(token common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.ApproveZeroThenMax(&_SwapRouter02.TransactOpts, token)
}

// ApproveZeroThenMaxMinusOne is a paid mutator transaction binding the contract method 0xab3fdd50.
//
// Solidity: function approveZeroThenMaxMinusOne(address token) payable returns()
func (_SwapRouter02 *SwapRouter02Transactor) ApproveZeroThenMaxMinusOne(opts *bind.TransactOpts, token common.Address) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "approveZeroThenMaxMinusOne", token)
}

// ApproveZeroThenMaxMinusOne is a paid mutator transaction binding the contract method 0xab3fdd50.
//
// Solidity: function approveZeroThenMaxMinusOne(address token) payable returns()
func (_SwapRouter02 *SwapRouter02Session) ApproveZeroThenMaxMinusOne(token common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.ApproveZeroThenMaxMinusOne(&_SwapRouter02.TransactOpts, token)
}

// ApproveZeroThenMaxMinusOne is a paid mutator transaction binding the contract method 0xab3fdd50.
//
// Solidity: function approveZeroThenMaxMinusOne(address token) payable returns()
func (_SwapRouter02 *SwapRouter02TransactorSession) ApproveZeroThenMaxMinusOne(token common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.ApproveZeroThenMaxMinusOne(&_SwapRouter02.TransactOpts, token)
}

// CallPositionManager is a paid mutator transaction binding the contract method 0xb3a2af13.
//
// Solidity: function callPositionManager(bytes data) payable returns(bytes result)
func (_SwapRouter02 *SwapRouter02Transactor) CallPositionManager(opts *bind.TransactOpts, data []byte) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "callPositionManager", data)
}

// CallPositionManager is a paid mutator transaction binding the contract method 0xb3a2af13.
//
// Solidity: function callPositionManager(bytes data) payable returns(bytes result)
func (_SwapRouter02 *SwapRouter02Session) CallPositionManager(data []byte) (*types.Transaction, error) {
	return _SwapRouter02.Contract.CallPositionManager(&_SwapRouter02.TransactOpts, data)
}

// CallPositionManager is a paid mutator transaction binding the contract method 0xb3a2af13.
//
// Solidity: function callPositionManager(bytes data) payable returns(bytes result)
func (_SwapRouter02 *SwapRouter02TransactorSession) CallPositionManager(data []byte) (*types.Transaction, error) {
	return _SwapRouter02.Contract.CallPositionManager(&_SwapRouter02.TransactOpts, data)
}

// GetApprovalType is a paid mutator transaction binding the contract method 0xdee00f35.
//
// Solidity: function getApprovalType(address token, uint256 amount) returns(uint8)
func (_SwapRouter02 *SwapRouter02Transactor) GetApprovalType(opts *bind.TransactOpts, token common.Address, amount *big.Int) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "getApprovalType", token, amount)
}

// GetApprovalType is a paid mutator transaction binding the contract method 0xdee00f35.
//
// Solidity: function getApprovalType(address token, uint256 amount) returns(uint8)
func (_SwapRouter02 *SwapRouter02Session) GetApprovalType(token common.Address, amount *big.Int) (*types.Transaction, error) {
	return _SwapRouter02.Contract.GetApprovalType(&_SwapRouter02.TransactOpts, token, amount)
}

// GetApprovalType is a paid mutator transaction binding the contract method 0xdee00f35.
//
// Solidity: function getApprovalType(address token, uint256 amount) returns(uint8)
func (_SwapRouter02 *SwapRouter02TransactorSession) GetApprovalType(token common.Address, amount *big.Int) (*types.Transaction, error) {
	return _SwapRouter02.Contract.GetApprovalType(&_SwapRouter02.TransactOpts, token, amount)
}

// IncreaseLiquidity is a paid mutator transaction binding the contract method 0xf100b205.
//
// Solidity: function increaseLiquidity((address,address,uint256,uint256,uint256) params) payable returns(bytes result)
func (_SwapRouter02 *SwapRouter02Transactor) IncreaseLiquidity(opts *bind.TransactOpts, params IApproveAndCallIncreaseLiquidityParams) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "increaseLiquidity", params)
}

// IncreaseLiquidity is a paid mutator transaction binding the contract method 0xf100b205.
//
// Solidity: function increaseLiquidity((address,address,uint256,uint256,uint256) params) payable returns(bytes result)
func (_SwapRouter02 *SwapRouter02Session) IncreaseLiquidity(params IApproveAndCallIncreaseLiquidityParams) (*types.Transaction, error) {
	return _SwapRouter02.Contract.IncreaseLiquidity(&_SwapRouter02.TransactOpts, params)
}

// IncreaseLiquidity is a paid mutator transaction binding the contract method 0xf100b205.
//
// Solidity: function increaseLiquidity((address,address,uint256,uint256,uint256) params) payable returns(bytes result)
func (_SwapRouter02 *SwapRouter02TransactorSession) IncreaseLiquidity(params IApproveAndCallIncreaseLiquidityParams) (*types.Transaction, error) {
	return _SwapRouter02.Contract.IncreaseLiquidity(&_SwapRouter02.TransactOpts, params)
}

// Mint is a paid mutator transaction binding the contract method 0x11ed56c9.
//
// Solidity: function mint((address,address,uint24,int24,int24,uint256,uint256,address) params) payable returns(bytes result)
func (_SwapRouter02 *SwapRouter02Transactor) Mint(opts *bind.TransactOpts, params IApproveAndCallMintParams) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "mint", params)
}

// Mint is a paid mutator transaction binding the contract method 0x11ed56c9.
//
// Solidity: function mint((address,address,uint24,int24,int24,uint256,uint256,address) params) payable returns(bytes result)
func (_SwapRouter02 *SwapRouter02Session) Mint(params IApproveAndCallMintParams) (*types.Transaction, error) {
	return _SwapRouter02.Contract.Mint(&_SwapRouter02.TransactOpts, params)
}

// Mint is a paid mutator transaction binding the contract method 0x11ed56c9.
//
// Solidity: function mint((address,address,uint24,int24,int24,uint256,uint256,address) params) payable returns(bytes result)
func (_SwapRouter02 *SwapRouter02TransactorSession) Mint(params IApproveAndCallMintParams) (*types.Transaction, error) {
	return _SwapRouter02.Contract.Mint(&_SwapRouter02.TransactOpts, params)
}

// Multicall is a paid mutator transaction binding the contract method 0x1f0464d1.
//
// Solidity: function multicall(bytes32 previousBlockhash, bytes[] data) payable returns(bytes[])
func (_SwapRouter02 *SwapRouter02Transactor) Multicall(opts *bind.TransactOpts, previousBlockhash [32]byte, data [][]byte) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "multicall", previousBlockhash, data)
}

// Multicall is a paid mutator transaction binding the contract method 0x1f0464d1.
//
// Solidity: function multicall(bytes32 previousBlockhash, bytes[] data) payable returns(bytes[])
func (_SwapRouter02 *SwapRouter02Session) Multicall(previousBlockhash [32]byte, data [][]byte) (*types.Transaction, error) {
	return _SwapRouter02.Contract.Multicall(&_SwapRouter02.TransactOpts, previousBlockhash, data)
}

// Multicall is a paid mutator transaction binding the contract method 0x1f0464d1.
//
// Solidity: function multicall(bytes32 previousBlockhash, bytes[] data) payable returns(bytes[])
func (_SwapRouter02 *SwapRouter02TransactorSession) Multicall(previousBlockhash [32]byte, data [][]byte) (*types.Transaction, error) {
	return _SwapRouter02.Contract.Multicall(&_SwapRouter02.TransactOpts, previousBlockhash, data)
}

// Multicall0 is a paid mutator transaction binding the contract method 0x5ae401dc.
//
// Solidity: function multicall(uint256 deadline, bytes[] data) payable returns(bytes[])
func (_SwapRouter02 *SwapRouter02Transactor) Multicall0(opts *bind.TransactOpts, deadline *big.Int, data [][]byte) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "multicall0", deadline, data)
}

// Multicall0 is a paid mutator transaction binding the contract method 0x5ae401dc.
//
// Solidity: function multicall(uint256 deadline, bytes[] data) payable returns(bytes[])
func (_SwapRouter02 *SwapRouter02Session) Multicall0(deadline *big.Int, data [][]byte) (*types.Transaction, error) {
	return _SwapRouter02.Contract.Multicall0(&_SwapRouter02.TransactOpts, deadline, data)
}

// Multicall0 is a paid mutator transaction binding the contract method 0x5ae401dc.
//
// Solidity: function multicall(uint256 deadline, bytes[] data) payable returns(bytes[])
func (_SwapRouter02 *SwapRouter02TransactorSession) Multicall0(deadline *big.Int, data [][]byte) (*types.Transaction, error) {
	return _SwapRouter02.Contract.Multicall0(&_SwapRouter02.TransactOpts, deadline, data)
}

// Multicall1 is a paid mutator transaction binding the contract method 0xac9650d8.
//
// Solidity: function multicall(bytes[] data) payable returns(bytes[] results)
func (_SwapRouter02 *SwapRouter02Transactor) Multicall1(opts *bind.TransactOpts, data [][]byte) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "multicall1", data)
}

// Multicall1 is a paid mutator transaction binding the contract method 0xac9650d8.
//
// Solidity: function multicall(bytes[] data) payable returns(bytes[] results)
func (_SwapRouter02 *SwapRouter02Session) Multicall1(data [][]byte) (*types.Transaction, error) {
	return _SwapRouter02.Contract.Multicall1(&_SwapRouter02.TransactOpts, data)
}

// Multicall1 is a paid mutator transaction binding the contract method 0xac9650d8.
//
// Solidity: function multicall(bytes[] data) payable returns(bytes[] results)
func (_SwapRouter02 *SwapRouter02TransactorSession) Multicall1(data [][]byte) (*types.Transaction, error) {
	return _SwapRouter02.Contract.Multicall1(&_SwapRouter02.TransactOpts, data)
}

// Pull is a paid mutator transaction binding the contract method 0xf2d5d56b.
//
// Solidity: function pull(address token, uint256 value) payable returns()
func (_SwapRouter02 *SwapRouter02Transactor) Pull(opts *bind.TransactOpts, token common.Address, value *big.Int) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "pull", token, value)
}

// Pull is a paid mutator transaction binding the contract method 0xf2d5d56b.
//
// Solidity: function pull(address token, uint256 value) payable returns()
func (_SwapRouter02 *SwapRouter02Session) Pull(token common.Address, value *big.Int) (*types.Transaction, error) {
	return _SwapRouter02.Contract.Pull(&_SwapRouter02.TransactOpts, token, value)
}

// Pull is a paid mutator transaction binding the contract method 0xf2d5d56b.
//
// Solidity: function pull(address token, uint256 value) payable returns()
func (_SwapRouter02 *SwapRouter02TransactorSession) Pull(token common.Address, value *big.Int) (*types.Transaction, error) {
	return _SwapRouter02.Contract.Pull(&_SwapRouter02.TransactOpts, token, value)
}

// RefundETH is a paid mutator transaction binding the contract method 0x12210e8a.
//
// Solidity: function refundETH() payable returns()
func (_SwapRouter02 *SwapRouter02Transactor) RefundETH(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "refundETH")
}

// RefundETH is a paid mutator transaction binding the contract method 0x12210e8a.
//
// Solidity: function refundETH() payable returns()
func (_SwapRouter02 *SwapRouter02Session) RefundETH() (*types.Transaction, error) {
	return _SwapRouter02.Contract.RefundETH(&_SwapRouter02.TransactOpts)
}

// RefundETH is a paid mutator transaction binding the contract method 0x12210e8a.
//
// Solidity: function refundETH() payable returns()
func (_SwapRouter02 *SwapRouter02TransactorSession) RefundETH() (*types.Transaction, error) {
	return _SwapRouter02.Contract.RefundETH(&_SwapRouter02.TransactOpts)
}

// SelfPermit is a paid mutator transaction binding the contract method 0xf3995c67.
//
// Solidity: function selfPermit(address token, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) payable returns()
func (_SwapRouter02 *SwapRouter02Transactor) SelfPermit(opts *bind.TransactOpts, token common.Address, value *big.Int, deadline *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "selfPermit", token, value, deadline, v, r, s)
}

// SelfPermit is a paid mutator transaction binding the contract method 0xf3995c67.
//
// Solidity: function selfPermit(address token, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) payable returns()
func (_SwapRouter02 *SwapRouter02Session) SelfPermit(token common.Address, value *big.Int, deadline *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SelfPermit(&_SwapRouter02.TransactOpts, token, value, deadline, v, r, s)
}

// SelfPermit is a paid mutator transaction binding the contract method 0xf3995c67.
//
// Solidity: function selfPermit(address token, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) payable returns()
func (_SwapRouter02 *SwapRouter02TransactorSession) SelfPermit(token common.Address, value *big.Int, deadline *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SelfPermit(&_SwapRouter02.TransactOpts, token, value, deadline, v, r, s)
}

// SelfPermitAllowed is a paid mutator transaction binding the contract method 0x4659a494.
//
// Solidity: function selfPermitAllowed(address token, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) payable returns()
func (_SwapRouter02 *SwapRouter02Transactor) SelfPermitAllowed(opts *bind.TransactOpts, token common.Address, nonce *big.Int, expiry *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "selfPermitAllowed", token, nonce, expiry, v, r, s)
}

// SelfPermitAllowed is a paid mutator transaction binding the contract method 0x4659a494.
//
// Solidity: function selfPermitAllowed(address token, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) payable returns()
func (_SwapRouter02 *SwapRouter02Session) SelfPermitAllowed(token common.Address, nonce *big.Int, expiry *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SelfPermitAllowed(&_SwapRouter02.TransactOpts, token, nonce, expiry, v, r, s)
}

// SelfPermitAllowed is a paid mutator transaction binding the contract method 0x4659a494.
//
// Solidity: function selfPermitAllowed(address token, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) payable returns()
func (_SwapRouter02 *SwapRouter02TransactorSession) SelfPermitAllowed(token common.Address, nonce *big.Int, expiry *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SelfPermitAllowed(&_SwapRouter02.TransactOpts, token, nonce, expiry, v, r, s)
}

// SelfPermitAllowedIfNecessary is a paid mutator transaction binding the contract method 0xa4a78f0c.
//
// Solidity: function selfPermitAllowedIfNecessary(address token, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) payable returns()
func (_SwapRouter02 *SwapRouter02Transactor) SelfPermitAllowedIfNecessary(opts *bind.TransactOpts, token common.Address, nonce *big.Int, expiry *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "selfPermitAllowedIfNecessary", token, nonce, expiry, v, r, s)
}

// SelfPermitAllowedIfNecessary is a paid mutator transaction binding the contract method 0xa4a78f0c.
//
// Solidity: function selfPermitAllowedIfNecessary(address token, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) payable returns()
func (_SwapRouter02 *SwapRouter02Session) SelfPermitAllowedIfNecessary(token common.Address, nonce *big.Int, expiry *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SelfPermitAllowedIfNecessary(&_SwapRouter02.TransactOpts, token, nonce, expiry, v, r, s)
}

// SelfPermitAllowedIfNecessary is a paid mutator transaction binding the contract method 0xa4a78f0c.
//
// Solidity: function selfPermitAllowedIfNecessary(address token, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) payable returns()
func (_SwapRouter02 *SwapRouter02TransactorSession) SelfPermitAllowedIfNecessary(token common.Address, nonce *big.Int, expiry *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SelfPermitAllowedIfNecessary(&_SwapRouter02.TransactOpts, token, nonce, expiry, v, r, s)
}

// SelfPermitIfNecessary is a paid mutator transaction binding the contract method 0xc2e3140a.
//
// Solidity: function selfPermitIfNecessary(address token, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) payable returns()
func (_SwapRouter02 *SwapRouter02Transactor) SelfPermitIfNecessary(opts *bind.TransactOpts, token common.Address, value *big.Int, deadline *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "selfPermitIfNecessary", token, value, deadline, v, r, s)
}

// SelfPermitIfNecessary is a paid mutator transaction binding the contract method 0xc2e3140a.
//
// Solidity: function selfPermitIfNecessary(address token, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) payable returns()
func (_SwapRouter02 *SwapRouter02Session) SelfPermitIfNecessary(token common.Address, value *big.Int, deadline *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SelfPermitIfNecessary(&_SwapRouter02.TransactOpts, token, value, deadline, v, r, s)
}

// SelfPermitIfNecessary is a paid mutator transaction binding the contract method 0xc2e3140a.
//
// Solidity: function selfPermitIfNecessary(address token, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) payable returns()
func (_SwapRouter02 *SwapRouter02TransactorSession) SelfPermitIfNecessary(token common.Address, value *big.Int, deadline *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SelfPermitIfNecessary(&_SwapRouter02.TransactOpts, token, value, deadline, v, r, s)
}

// SwapExactTokensForTokens is a paid mutator transaction binding the contract method 0x472b43f3.
//
// Solidity: function swapExactTokensForTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to) payable returns(uint256 amountOut)
func (_SwapRouter02 *SwapRouter02Transactor) SwapExactTokensForTokens(opts *bind.TransactOpts, amountIn *big.Int, amountOutMin *big.Int, path []common.Address, to common.Address) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "swapExactTokensForTokens", amountIn, amountOutMin, path, to)
}

// SwapExactTokensForTokens is a paid mutator transaction binding the contract method 0x472b43f3.
//
// Solidity: function swapExactTokensForTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to) payable returns(uint256 amountOut)
func (_SwapRouter02 *SwapRouter02Session) SwapExactTokensForTokens(amountIn *big.Int, amountOutMin *big.Int, path []common.Address, to common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SwapExactTokensForTokens(&_SwapRouter02.TransactOpts, amountIn, amountOutMin, path, to)
}

// SwapExactTokensForTokens is a paid mutator transaction binding the contract method 0x472b43f3.
//
// Solidity: function swapExactTokensForTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to) payable returns(uint256 amountOut)
func (_SwapRouter02 *SwapRouter02TransactorSession) SwapExactTokensForTokens(amountIn *big.Int, amountOutMin *big.Int, path []common.Address, to common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SwapExactTokensForTokens(&_SwapRouter02.TransactOpts, amountIn, amountOutMin, path, to)
}

// SwapTokensForExactTokens is a paid mutator transaction binding the contract method 0x42712a67.
//
// Solidity: function swapTokensForExactTokens(uint256 amountOut, uint256 amountInMax, address[] path, address to) payable returns(uint256 amountIn)
func (_SwapRouter02 *SwapRouter02Transactor) SwapTokensForExactTokens(opts *bind.TransactOpts, amountOut *big.Int, amountInMax *big.Int, path []common.Address, to common.Address) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "swapTokensForExactTokens", amountOut, amountInMax, path, to)
}

// SwapTokensForExactTokens is a paid mutator transaction binding the contract method 0x42712a67.
//
// Solidity: function swapTokensForExactTokens(uint256 amountOut, uint256 amountInMax, address[] path, address to) payable returns(uint256 amountIn)
func (_SwapRouter02 *SwapRouter02Session) SwapTokensForExactTokens(amountOut *big.Int, amountInMax *big.Int, path []common.Address, to common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SwapTokensForExactTokens(&_SwapRouter02.TransactOpts, amountOut, amountInMax, path, to)
}

// SwapTokensForExactTokens is a paid mutator transaction binding the contract method 0x42712a67.
//
// Solidity: function swapTokensForExactTokens(uint256 amountOut, uint256 amountInMax, address[] path, address to) payable returns(uint256 amountIn)
func (_SwapRouter02 *SwapRouter02TransactorSession) SwapTokensForExactTokens(amountOut *big.Int, amountInMax *big.Int, path []common.Address, to common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SwapTokensForExactTokens(&_SwapRouter02.TransactOpts, amountOut, amountInMax, path, to)
}

// SweepToken is a paid mutator transaction binding the contract method 0xdf2ab5bb.
//
// Solidity: function sweepToken(address token, uint256 amountMinimum, address recipient) payable returns()
func (_SwapRouter02 *SwapRouter02Transactor) SweepToken(opts *bind.TransactOpts, token common.Address, amountMinimum *big.Int, recipient common.Address) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "sweepToken", token, amountMinimum, recipient)
}

// SweepToken is a paid mutator transaction binding the contract method 0xdf2ab5bb.
//
// Solidity: function sweepToken(address token, uint256 amountMinimum, address recipient) payable returns()
func (_SwapRouter02 *SwapRouter02Session) SweepToken(token common.Address, amountMinimum *big.Int, recipient common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SweepToken(&_SwapRouter02.TransactOpts, token, amountMinimum, recipient)
}

// SweepToken is a paid mutator transaction binding the contract method 0xdf2ab5bb.
//
// Solidity: function sweepToken(address token, uint256 amountMinimum, address recipient) payable returns()
func (_SwapRouter02 *SwapRouter02TransactorSession) SweepToken(token common.Address, amountMinimum *big.Int, recipient common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SweepToken(&_SwapRouter02.TransactOpts, token, amountMinimum, recipient)
}

// SweepToken0 is a paid mutator transaction binding the contract method 0xe90a182f.
//
// Solidity: function sweepToken(address token, uint256 amountMinimum) payable returns()
func (_SwapRouter02 *SwapRouter02Transactor) SweepToken0(opts *bind.TransactOpts, token common.Address, amountMinimum *big.Int) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "sweepToken0", token, amountMinimum)
}

// SweepToken0 is a paid mutator transaction binding the contract method 0xe90a182f.
//
// Solidity: function sweepToken(address token, uint256 amountMinimum) payable returns()
func (_SwapRouter02 *SwapRouter02Session) SweepToken0(token common.Address, amountMinimum *big.Int) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SweepToken0(&_SwapRouter02.TransactOpts, token, amountMinimum)
}

// SweepToken0 is a paid mutator transaction binding the contract method 0xe90a182f.
//
// Solidity: function sweepToken(address token, uint256 amountMinimum) payable returns()
func (_SwapRouter02 *SwapRouter02TransactorSession) SweepToken0(token common.Address, amountMinimum *big.Int) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SweepToken0(&_SwapRouter02.TransactOpts, token, amountMinimum)
}

// SweepTokenWithFee is a paid mutator transaction binding the contract method 0x3068c554.
//
// Solidity: function sweepTokenWithFee(address token, uint256 amountMinimum, uint256 feeBips, address feeRecipient) payable returns()
func (_SwapRouter02 *SwapRouter02Transactor) SweepTokenWithFee(opts *bind.TransactOpts, token common.Address, amountMinimum *big.Int, feeBips *big.Int, feeRecipient common.Address) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "sweepTokenWithFee", token, amountMinimum, feeBips, feeRecipient)
}

// SweepTokenWithFee is a paid mutator transaction binding the contract method 0x3068c554.
//
// Solidity: function sweepTokenWithFee(address token, uint256 amountMinimum, uint256 feeBips, address feeRecipient) payable returns()
func (_SwapRouter02 *SwapRouter02Session) SweepTokenWithFee(token common.Address, amountMinimum *big.Int, feeBips *big.Int, feeRecipient common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SweepTokenWithFee(&_SwapRouter02.TransactOpts, token, amountMinimum, feeBips, feeRecipient)
}

// SweepTokenWithFee is a paid mutator transaction binding the contract method 0x3068c554.
//
// Solidity: function sweepTokenWithFee(address token, uint256 amountMinimum, uint256 feeBips, address feeRecipient) payable returns()
func (_SwapRouter02 *SwapRouter02TransactorSession) SweepTokenWithFee(token common.Address, amountMinimum *big.Int, feeBips *big.Int, feeRecipient common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SweepTokenWithFee(&_SwapRouter02.TransactOpts, token, amountMinimum, feeBips, feeRecipient)
}

// SweepTokenWithFee0 is a paid mutator transaction binding the contract method 0xe0e189a0.
//
// Solidity: function sweepTokenWithFee(address token, uint256 amountMinimum, address recipient, uint256 feeBips, address feeRecipient) payable returns()
func (_SwapRouter02 *SwapRouter02Transactor) SweepTokenWithFee0(opts *bind.TransactOpts, token common.Address, amountMinimum *big.Int, recipient common.Address, feeBips *big.Int, feeRecipient common.Address) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "sweepTokenWithFee0", token, amountMinimum, recipient, feeBips, feeRecipient)
}

// SweepTokenWithFee0 is a paid mutator transaction binding the contract method 0xe0e189a0.
//
// Solidity: function sweepTokenWithFee(address token, uint256 amountMinimum, address recipient, uint256 feeBips, address feeRecipient) payable returns()
func (_SwapRouter02 *SwapRouter02Session) SweepTokenWithFee0(token common.Address, amountMinimum *big.Int, recipient common.Address, feeBips *big.Int, feeRecipient common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SweepTokenWithFee0(&_SwapRouter02.TransactOpts, token, amountMinimum, recipient, feeBips, feeRecipient)
}

// SweepTokenWithFee0 is a paid mutator transaction binding the contract method 0xe0e189a0.
//
// Solidity: function sweepTokenWithFee(address token, uint256 amountMinimum, address recipient, uint256 feeBips, address feeRecipient) payable returns()
func (_SwapRouter02 *SwapRouter02TransactorSession) SweepTokenWithFee0(token common.Address, amountMinimum *big.Int, recipient common.Address, feeBips *big.Int, feeRecipient common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.SweepTokenWithFee0(&_SwapRouter02.TransactOpts, token, amountMinimum, recipient, feeBips, feeRecipient)
}

// UnwrapWETH9 is a paid mutator transaction binding the contract method 0x49404b7c.
//
// Solidity: function unwrapWETH9(uint256 amountMinimum, address recipient) payable returns()
func (_SwapRouter02 *SwapRouter02Transactor) UnwrapWETH9(opts *bind.TransactOpts, amountMinimum *big.Int, recipient common.Address) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "unwrapWETH9", amountMinimum, recipient)
}

// UnwrapWETH9 is a paid mutator transaction binding the contract method 0x49404b7c.
//
// Solidity: function unwrapWETH9(uint256 amountMinimum, address recipient) payable returns()
func (_SwapRouter02 *SwapRouter02Session) UnwrapWETH9(amountMinimum *big.Int, recipient common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.UnwrapWETH9(&_SwapRouter02.TransactOpts, amountMinimum, recipient)
}

// UnwrapWETH9 is a paid mutator transaction binding the contract method 0x49404b7c.
//
// Solidity: function unwrapWETH9(uint256 amountMinimum, address recipient) payable returns()
func (_SwapRouter02 *SwapRouter02TransactorSession) UnwrapWETH9(amountMinimum *big.Int, recipient common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.UnwrapWETH9(&_SwapRouter02.TransactOpts, amountMinimum, recipient)
}

// UnwrapWETH90 is a paid mutator transaction binding the contract method 0x49616997.
//
// Solidity: function unwrapWETH9(uint256 amountMinimum) payable returns()
func (_SwapRouter02 *SwapRouter02Transactor) UnwrapWETH90(opts *bind.TransactOpts, amountMinimum *big.Int) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "unwrapWETH90", amountMinimum)
}

// UnwrapWETH90 is a paid mutator transaction binding the contract method 0x49616997.
//
// Solidity: function unwrapWETH9(uint256 amountMinimum) payable returns()
func (_SwapRouter02 *SwapRouter02Session) UnwrapWETH90(amountMinimum *big.Int) (*types.Transaction, error) {
	return _SwapRouter02.Contract.UnwrapWETH90(&_SwapRouter02.TransactOpts, amountMinimum)
}

// UnwrapWETH90 is a paid mutator transaction binding the contract method 0x49616997.
//
// Solidity: function unwrapWETH9(uint256 amountMinimum) payable returns()
func (_SwapRouter02 *SwapRouter02TransactorSession) UnwrapWETH90(amountMinimum *big.Int) (*types.Transaction, error) {
	return _SwapRouter02.Contract.UnwrapWETH90(&_SwapRouter02.TransactOpts, amountMinimum)
}

// UnwrapWETH9WithFee is a paid mutator transaction binding the contract method 0x9b2c0a37.
//
// Solidity: function unwrapWETH9WithFee(uint256 amountMinimum, address recipient, uint256 feeBips, address feeRecipient) payable returns()
func (_SwapRouter02 *SwapRouter02Transactor) UnwrapWETH9WithFee(opts *bind.TransactOpts, amountMinimum *big.Int, recipient common.Address, feeBips *big.Int, feeRecipient common.Address) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "unwrapWETH9WithFee", amountMinimum, recipient, feeBips, feeRecipient)
}

// UnwrapWETH9WithFee is a paid mutator transaction binding the contract method 0x9b2c0a37.
//
// Solidity: function unwrapWETH9WithFee(uint256 amountMinimum, address recipient, uint256 feeBips, address feeRecipient) payable returns()
func (_SwapRouter02 *SwapRouter02Session) UnwrapWETH9WithFee(amountMinimum *big.Int, recipient common.Address, feeBips *big.Int, feeRecipient common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.UnwrapWETH9WithFee(&_SwapRouter02.TransactOpts, amountMinimum, recipient, feeBips, feeRecipient)
}

// UnwrapWETH9WithFee is a paid mutator transaction binding the contract method 0x9b2c0a37.
//
// Solidity: function unwrapWETH9WithFee(uint256 amountMinimum, address recipient, uint256 feeBips, address feeRecipient) payable returns()
func (_SwapRouter02 *SwapRouter02TransactorSession) UnwrapWETH9WithFee(amountMinimum *big.Int, recipient common.Address, feeBips *big.Int, feeRecipient common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.UnwrapWETH9WithFee(&_SwapRouter02.TransactOpts, amountMinimum, recipient, feeBips, feeRecipient)
}

// UnwrapWETH9WithFee0 is a paid mutator transaction binding the contract method 0xd4ef38de.
//
// Solidity: function unwrapWETH9WithFee(uint256 amountMinimum, uint256 feeBips, address feeRecipient) payable returns()
func (_SwapRouter02 *SwapRouter02Transactor) UnwrapWETH9WithFee0(opts *bind.TransactOpts, amountMinimum *big.Int, feeBips *big.Int, feeRecipient common.Address) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "unwrapWETH9WithFee0", amountMinimum, feeBips, feeRecipient)
}

// UnwrapWETH9WithFee0 is a paid mutator transaction binding the contract method 0xd4ef38de.
//
// Solidity: function unwrapWETH9WithFee(uint256 amountMinimum, uint256 feeBips, address feeRecipient) payable returns()
func (_SwapRouter02 *SwapRouter02Session) UnwrapWETH9WithFee0(amountMinimum *big.Int, feeBips *big.Int, feeRecipient common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.UnwrapWETH9WithFee0(&_SwapRouter02.TransactOpts, amountMinimum, feeBips, feeRecipient)
}

// UnwrapWETH9WithFee0 is a paid mutator transaction binding the contract method 0xd4ef38de.
//
// Solidity: function unwrapWETH9WithFee(uint256 amountMinimum, uint256 feeBips, address feeRecipient) payable returns()
func (_SwapRouter02 *SwapRouter02TransactorSession) UnwrapWETH9WithFee0(amountMinimum *big.Int, feeBips *big.Int, feeRecipient common.Address) (*types.Transaction, error) {
	return _SwapRouter02.Contract.UnwrapWETH9WithFee0(&_SwapRouter02.TransactOpts, amountMinimum, feeBips, feeRecipient)
}

// WrapETH is a paid mutator transaction binding the contract method 0x1c58db4f.
//
// Solidity: function wrapETH(uint256 value) payable returns()
func (_SwapRouter02 *SwapRouter02Transactor) WrapETH(opts *bind.TransactOpts, value *big.Int) (*types.Transaction, error) {
	return _SwapRouter02.contract.Transact(opts, "wrapETH", value)
}

// WrapETH is a paid mutator transaction binding the contract method 0x1c58db4f.
//
// Solidity: function wrapETH(uint256 value) payable returns()
func (_SwapRouter02 *SwapRouter02Session) WrapETH(value *big.Int) (*types.Transaction, error) {
	return _SwapRouter02.Contract.WrapETH(&_SwapRouter02.TransactOpts, value)
}

// WrapETH is a paid mutator transaction binding the contract method 0x1c58db4f.
//
// Solidity: function wrapETH(uint256 value) payable returns()
func (_SwapRouter02 *SwapRouter02TransactorSession) WrapETH(value *big.Int) (*types.Transaction, error) {
	return _SwapRouter02.Contract.WrapETH(&_SwapRouter02.TransactOpts, value)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_SwapRouter02 *SwapRouter02Transactor) Receive(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SwapRouter02.contract.RawTransact(opts, nil) // calldata is disallowed for receive function
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_SwapRouter02 *SwapRouter02Session) Receive() (*types.Transaction, error) {
	return _SwapRouter02.Contract.Receive(&_SwapRouter02.TransactOpts)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_SwapRouter02 *SwapRouter02TransactorSession) Receive() (*types.Transaction, error) {
	return _SwapRouter02.Contract.Receive(&_SwapRouter02.TransactOpts)
}
