// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: proto/zk-prover.proto

package proverclient

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResGetStatus_StatusProver int32

const (
	ResGetStatus_BOOTING   ResGetStatus_StatusProver = 0
	ResGetStatus_COMPUTING ResGetStatus_StatusProver = 1
	ResGetStatus_IDLE      ResGetStatus_StatusProver = 2
	ResGetStatus_HALT      ResGetStatus_StatusProver = 3
)

// Enum value maps for ResGetStatus_StatusProver.
var (
	ResGetStatus_StatusProver_name = map[int32]string{
		0: "BOOTING",
		1: "COMPUTING",
		2: "IDLE",
		3: "HALT",
	}
	ResGetStatus_StatusProver_value = map[string]int32{
		"BOOTING":   0,
		"COMPUTING": 1,
		"IDLE":      2,
		"HALT":      3,
	}
)

func (x ResGetStatus_StatusProver) Enum() *ResGetStatus_StatusProver {
	p := new(ResGetStatus_StatusProver)
	*p = x
	return p
}

func (x ResGetStatus_StatusProver) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResGetStatus_StatusProver) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_zk_prover_proto_enumTypes[0].Descriptor()
}

func (ResGetStatus_StatusProver) Type() protoreflect.EnumType {
	return &file_proto_zk_prover_proto_enumTypes[0]
}

func (x ResGetStatus_StatusProver) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResGetStatus_StatusProver.Descriptor instead.
func (ResGetStatus_StatusProver) EnumDescriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{4, 0}
}

type ResGenProof_ResultGenProof int32

const (
	ResGenProof_OK             ResGenProof_ResultGenProof = 0
	ResGenProof_ERROR          ResGenProof_ResultGenProof = 1
	ResGenProof_INTERNAL_ERROR ResGenProof_ResultGenProof = 2
)

// Enum value maps for ResGenProof_ResultGenProof.
var (
	ResGenProof_ResultGenProof_name = map[int32]string{
		0: "OK",
		1: "ERROR",
		2: "INTERNAL_ERROR",
	}
	ResGenProof_ResultGenProof_value = map[string]int32{
		"OK":             0,
		"ERROR":          1,
		"INTERNAL_ERROR": 2,
	}
)

func (x ResGenProof_ResultGenProof) Enum() *ResGenProof_ResultGenProof {
	p := new(ResGenProof_ResultGenProof)
	*p = x
	return p
}

func (x ResGenProof_ResultGenProof) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResGenProof_ResultGenProof) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_zk_prover_proto_enumTypes[1].Descriptor()
}

func (ResGenProof_ResultGenProof) Type() protoreflect.EnumType {
	return &file_proto_zk_prover_proto_enumTypes[1]
}

func (x ResGenProof_ResultGenProof) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResGenProof_ResultGenProof.Descriptor instead.
func (ResGenProof_ResultGenProof) EnumDescriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{5, 0}
}

type ResCancel_ResultCancel int32

const (
	ResCancel_OK    ResCancel_ResultCancel = 0
	ResCancel_ERROR ResCancel_ResultCancel = 1
)

// Enum value maps for ResCancel_ResultCancel.
var (
	ResCancel_ResultCancel_name = map[int32]string{
		0: "OK",
		1: "ERROR",
	}
	ResCancel_ResultCancel_value = map[string]int32{
		"OK":    0,
		"ERROR": 1,
	}
)

func (x ResCancel_ResultCancel) Enum() *ResCancel_ResultCancel {
	p := new(ResCancel_ResultCancel)
	*p = x
	return p
}

func (x ResCancel_ResultCancel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResCancel_ResultCancel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_zk_prover_proto_enumTypes[2].Descriptor()
}

func (ResCancel_ResultCancel) Type() protoreflect.EnumType {
	return &file_proto_zk_prover_proto_enumTypes[2]
}

func (x ResCancel_ResultCancel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResCancel_ResultCancel.Descriptor instead.
func (ResCancel_ResultCancel) EnumDescriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{6, 0}
}

type ResGetProof_ResultGetProof int32

const (
	ResGetProof_COMPLETED_OK   ResGetProof_ResultGetProof = 0
	ResGetProof_ERROR          ResGetProof_ResultGetProof = 1
	ResGetProof_COMPLETED_ERR  ResGetProof_ResultGetProof = 2
	ResGetProof_PENDING        ResGetProof_ResultGetProof = 3
	ResGetProof_INTERNAL_ERROR ResGetProof_ResultGetProof = 4
	ResGetProof_CANCEL         ResGetProof_ResultGetProof = 5
)

// Enum value maps for ResGetProof_ResultGetProof.
var (
	ResGetProof_ResultGetProof_name = map[int32]string{
		0: "COMPLETED_OK",
		1: "ERROR",
		2: "COMPLETED_ERR",
		3: "PENDING",
		4: "INTERNAL_ERROR",
		5: "CANCEL",
	}
	ResGetProof_ResultGetProof_value = map[string]int32{
		"COMPLETED_OK":   0,
		"ERROR":          1,
		"COMPLETED_ERR":  2,
		"PENDING":        3,
		"INTERNAL_ERROR": 4,
		"CANCEL":         5,
	}
)

func (x ResGetProof_ResultGetProof) Enum() *ResGetProof_ResultGetProof {
	p := new(ResGetProof_ResultGetProof)
	*p = x
	return p
}

func (x ResGetProof_ResultGetProof) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResGetProof_ResultGetProof) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_zk_prover_proto_enumTypes[3].Descriptor()
}

func (ResGetProof_ResultGetProof) Type() protoreflect.EnumType {
	return &file_proto_zk_prover_proto_enumTypes[3]
}

func (x ResGetProof_ResultGetProof) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResGetProof_ResultGetProof.Descriptor instead.
func (ResGetProof_ResultGetProof) EnumDescriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{7, 0}
}

type ResExecute_ResultExecute int32

const (
	ResExecute_COMPLETED_OK   ResExecute_ResultExecute = 0
	ResExecute_ERROR          ResExecute_ResultExecute = 1
	ResExecute_COMPLETED_ERR  ResExecute_ResultExecute = 2
	ResExecute_INTERNAL_ERROR ResExecute_ResultExecute = 3
	ResExecute_CANCEL         ResExecute_ResultExecute = 4
)

// Enum value maps for ResExecute_ResultExecute.
var (
	ResExecute_ResultExecute_name = map[int32]string{
		0: "COMPLETED_OK",
		1: "ERROR",
		2: "COMPLETED_ERR",
		3: "INTERNAL_ERROR",
		4: "CANCEL",
	}
	ResExecute_ResultExecute_value = map[string]int32{
		"COMPLETED_OK":   0,
		"ERROR":          1,
		"COMPLETED_ERR":  2,
		"INTERNAL_ERROR": 3,
		"CANCEL":         4,
	}
)

func (x ResExecute_ResultExecute) Enum() *ResExecute_ResultExecute {
	p := new(ResExecute_ResultExecute)
	*p = x
	return p
}

func (x ResExecute_ResultExecute) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResExecute_ResultExecute) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_zk_prover_proto_enumTypes[4].Descriptor()
}

func (ResExecute_ResultExecute) Type() protoreflect.EnumType {
	return &file_proto_zk_prover_proto_enumTypes[4]
}

func (x ResExecute_ResultExecute) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResExecute_ResultExecute.Descriptor instead.
func (ResExecute_ResultExecute) EnumDescriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{8, 0}
}

type Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	V0_0_1 string `protobuf:"bytes,1,opt,name=v0_0_1,json=v001,proto3" json:"v0_0_1,omitempty"`
}

func (x *Version) Reset() {
	*x = Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{0}
}

func (x *Version) GetV0_0_1() string {
	if x != nil {
		return x.V0_0_1
	}
	return ""
}

//*
// Message input types definition
type NoParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoParams) Reset() {
	*x = NoParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoParams) ProtoMessage() {}

func (x *NoParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoParams.ProtoReflect.Descriptor instead.
func (*NoParams) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{1}
}

type RequestId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RequestId) Reset() {
	*x = RequestId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestId) ProtoMessage() {}

func (x *RequestId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestId.ProtoReflect.Descriptor instead.
func (*RequestId) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{2}
}

func (x *RequestId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ReqGetProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Timeout uint64 `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *ReqGetProof) Reset() {
	*x = ReqGetProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetProof) ProtoMessage() {}

func (x *ReqGetProof) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetProof.ProtoReflect.Descriptor instead.
func (*ReqGetProof) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{3}
}

func (x *ReqGetProof) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReqGetProof) GetTimeout() uint64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

//
// Message output responses types
type ResGetStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State                     ResGetStatus_StatusProver `protobuf:"varint,1,opt,name=state,proto3,enum=zkprover.ResGetStatus_StatusProver" json:"state,omitempty"`
	LastComputedRequestId     string                    `protobuf:"bytes,2,opt,name=last_computed_request_id,json=lastComputedRequestId,proto3" json:"last_computed_request_id,omitempty"`
	LastComputedEndTime       uint64                    `protobuf:"varint,3,opt,name=last_computed_end_time,json=lastComputedEndTime,proto3" json:"last_computed_end_time,omitempty"`
	CurrentComputingRequestId string                    `protobuf:"bytes,4,opt,name=current_computing_request_id,json=currentComputingRequestId,proto3" json:"current_computing_request_id,omitempty"`
	CurrentComputingStartTime uint64                    `protobuf:"varint,5,opt,name=current_computing_start_time,json=currentComputingStartTime,proto3" json:"current_computing_start_time,omitempty"`
	VersionProto              string                    `protobuf:"bytes,6,opt,name=version_proto,json=versionProto,proto3" json:"version_proto,omitempty"`
	VersionServer             string                    `protobuf:"bytes,7,opt,name=version_server,json=versionServer,proto3" json:"version_server,omitempty"`
	PendingRequestQueueIds    []string                  `protobuf:"bytes,8,rep,name=pending_request_queue_ids,json=pendingRequestQueueIds,proto3" json:"pending_request_queue_ids,omitempty"`
}

func (x *ResGetStatus) Reset() {
	*x = ResGetStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetStatus) ProtoMessage() {}

func (x *ResGetStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetStatus.ProtoReflect.Descriptor instead.
func (*ResGetStatus) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{4}
}

func (x *ResGetStatus) GetState() ResGetStatus_StatusProver {
	if x != nil {
		return x.State
	}
	return ResGetStatus_BOOTING
}

func (x *ResGetStatus) GetLastComputedRequestId() string {
	if x != nil {
		return x.LastComputedRequestId
	}
	return ""
}

func (x *ResGetStatus) GetLastComputedEndTime() uint64 {
	if x != nil {
		return x.LastComputedEndTime
	}
	return 0
}

func (x *ResGetStatus) GetCurrentComputingRequestId() string {
	if x != nil {
		return x.CurrentComputingRequestId
	}
	return ""
}

func (x *ResGetStatus) GetCurrentComputingStartTime() uint64 {
	if x != nil {
		return x.CurrentComputingStartTime
	}
	return 0
}

func (x *ResGetStatus) GetVersionProto() string {
	if x != nil {
		return x.VersionProto
	}
	return ""
}

func (x *ResGetStatus) GetVersionServer() string {
	if x != nil {
		return x.VersionServer
	}
	return ""
}

func (x *ResGetStatus) GetPendingRequestQueueIds() []string {
	if x != nil {
		return x.PendingRequestQueueIds
	}
	return nil
}

type ResGenProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Result ResGenProof_ResultGenProof `protobuf:"varint,2,opt,name=result,proto3,enum=zkprover.ResGenProof_ResultGenProof" json:"result,omitempty"`
}

func (x *ResGenProof) Reset() {
	*x = ResGenProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGenProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGenProof) ProtoMessage() {}

func (x *ResGenProof) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGenProof.ProtoReflect.Descriptor instead.
func (*ResGenProof) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{5}
}

func (x *ResGenProof) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResGenProof) GetResult() ResGenProof_ResultGenProof {
	if x != nil {
		return x.Result
	}
	return ResGenProof_OK
}

type ResCancel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result ResCancel_ResultCancel `protobuf:"varint,1,opt,name=result,proto3,enum=zkprover.ResCancel_ResultCancel" json:"result,omitempty"`
}

func (x *ResCancel) Reset() {
	*x = ResCancel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCancel) ProtoMessage() {}

func (x *ResCancel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCancel.ProtoReflect.Descriptor instead.
func (*ResCancel) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{6}
}

func (x *ResCancel) GetResult() ResCancel_ResultCancel {
	if x != nil {
		return x.Result
	}
	return ResCancel_OK
}

type ResGetProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Proof        *Proof                     `protobuf:"bytes,2,opt,name=proof,proto3" json:"proof,omitempty"`
	Public       *PublicInputsExtended      `protobuf:"bytes,3,opt,name=public,proto3" json:"public,omitempty"`
	Result       ResGetProof_ResultGetProof `protobuf:"varint,4,opt,name=result,proto3,enum=zkprover.ResGetProof_ResultGetProof" json:"result,omitempty"`
	ResultString string                     `protobuf:"bytes,5,opt,name=result_string,json=resultString,proto3" json:"result_string,omitempty"`
}

func (x *ResGetProof) Reset() {
	*x = ResGetProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetProof) ProtoMessage() {}

func (x *ResGetProof) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetProof.ProtoReflect.Descriptor instead.
func (*ResGetProof) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{7}
}

func (x *ResGetProof) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResGetProof) GetProof() *Proof {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *ResGetProof) GetPublic() *PublicInputsExtended {
	if x != nil {
		return x.Public
	}
	return nil
}

func (x *ResGetProof) GetResult() ResGetProof_ResultGetProof {
	if x != nil {
		return x.Result
	}
	return ResGetProof_COMPLETED_OK
}

func (x *ResGetProof) GetResultString() string {
	if x != nil {
		return x.ResultString
	}
	return ""
}

type ResExecute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         ResExecute_ResultExecute `protobuf:"varint,1,opt,name=result,proto3,enum=zkprover.ResExecute_ResultExecute" json:"result,omitempty"`
	DiffKeysValues map[string]string        `protobuf:"bytes,2,rep,name=diff_keys_values,json=diffKeysValues,proto3" json:"diff_keys_values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NewStateRoot   string                   `protobuf:"bytes,3,opt,name=new_state_root,json=newStateRoot,proto3" json:"new_state_root,omitempty"`
	Counters       *ZkCounters              `protobuf:"bytes,4,opt,name=counters,proto3" json:"counters,omitempty"`
	Receipts       []string                 `protobuf:"bytes,5,rep,name=receipts,proto3" json:"receipts,omitempty"`
	Logs           []string                 `protobuf:"bytes,6,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *ResExecute) Reset() {
	*x = ResExecute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResExecute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResExecute) ProtoMessage() {}

func (x *ResExecute) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResExecute.ProtoReflect.Descriptor instead.
func (*ResExecute) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{8}
}

func (x *ResExecute) GetResult() ResExecute_ResultExecute {
	if x != nil {
		return x.Result
	}
	return ResExecute_COMPLETED_OK
}

func (x *ResExecute) GetDiffKeysValues() map[string]string {
	if x != nil {
		return x.DiffKeysValues
	}
	return nil
}

func (x *ResExecute) GetNewStateRoot() string {
	if x != nil {
		return x.NewStateRoot
	}
	return ""
}

func (x *ResExecute) GetCounters() *ZkCounters {
	if x != nil {
		return x.Counters
	}
	return nil
}

func (x *ResExecute) GetReceipts() []string {
	if x != nil {
		return x.Receipts
	}
	return nil
}

func (x *ResExecute) GetLogs() []string {
	if x != nil {
		return x.Logs
	}
	return nil
}

type ZkCounters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ecrecover    uint32 `protobuf:"varint,1,opt,name=ecrecover,proto3" json:"ecrecover,omitempty"`
	HashPoseidon uint32 `protobuf:"varint,2,opt,name=hash_poseidon,json=hashPoseidon,proto3" json:"hash_poseidon,omitempty"`
	HashKeccak   uint32 `protobuf:"varint,3,opt,name=hash_keccak,json=hashKeccak,proto3" json:"hash_keccak,omitempty"`
	Arith        uint32 `protobuf:"varint,4,opt,name=arith,proto3" json:"arith,omitempty"`
}

func (x *ZkCounters) Reset() {
	*x = ZkCounters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZkCounters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZkCounters) ProtoMessage() {}

func (x *ZkCounters) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZkCounters.ProtoReflect.Descriptor instead.
func (*ZkCounters) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{9}
}

func (x *ZkCounters) GetEcrecover() uint32 {
	if x != nil {
		return x.Ecrecover
	}
	return 0
}

func (x *ZkCounters) GetHashPoseidon() uint32 {
	if x != nil {
		return x.HashPoseidon
	}
	return 0
}

func (x *ZkCounters) GetHashKeccak() uint32 {
	if x != nil {
		return x.HashKeccak
	}
	return 0
}

func (x *ZkCounters) GetArith() uint32 {
	if x != nil {
		return x.Arith
	}
	return 0
}

//
// Define common messages
type PublicInputs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldStateRoot     string `protobuf:"bytes,1,opt,name=old_state_root,json=oldStateRoot,proto3" json:"old_state_root,omitempty"`
	OldLocalExitRoot string `protobuf:"bytes,2,opt,name=old_local_exit_root,json=oldLocalExitRoot,proto3" json:"old_local_exit_root,omitempty"`
	NewStateRoot     string `protobuf:"bytes,3,opt,name=new_state_root,json=newStateRoot,proto3" json:"new_state_root,omitempty"`
	NewLocalExitRoot string `protobuf:"bytes,4,opt,name=new_local_exit_root,json=newLocalExitRoot,proto3" json:"new_local_exit_root,omitempty"`
	SequencerAddr    string `protobuf:"bytes,5,opt,name=sequencer_addr,json=sequencerAddr,proto3" json:"sequencer_addr,omitempty"`
	BatchHashData    string `protobuf:"bytes,6,opt,name=batch_hash_data,json=batchHashData,proto3" json:"batch_hash_data,omitempty"`
	ChainId          uint32 `protobuf:"varint,7,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	BatchNum         uint32 `protobuf:"varint,8,opt,name=batch_num,json=batchNum,proto3" json:"batch_num,omitempty"`
	BlockNum         uint32 `protobuf:"varint,9,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
	EthTimestamp     uint64 `protobuf:"varint,10,opt,name=eth_timestamp,json=ethTimestamp,proto3" json:"eth_timestamp,omitempty"`
}

func (x *PublicInputs) Reset() {
	*x = PublicInputs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicInputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicInputs) ProtoMessage() {}

func (x *PublicInputs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicInputs.ProtoReflect.Descriptor instead.
func (*PublicInputs) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{10}
}

func (x *PublicInputs) GetOldStateRoot() string {
	if x != nil {
		return x.OldStateRoot
	}
	return ""
}

func (x *PublicInputs) GetOldLocalExitRoot() string {
	if x != nil {
		return x.OldLocalExitRoot
	}
	return ""
}

func (x *PublicInputs) GetNewStateRoot() string {
	if x != nil {
		return x.NewStateRoot
	}
	return ""
}

func (x *PublicInputs) GetNewLocalExitRoot() string {
	if x != nil {
		return x.NewLocalExitRoot
	}
	return ""
}

func (x *PublicInputs) GetSequencerAddr() string {
	if x != nil {
		return x.SequencerAddr
	}
	return ""
}

func (x *PublicInputs) GetBatchHashData() string {
	if x != nil {
		return x.BatchHashData
	}
	return ""
}

func (x *PublicInputs) GetChainId() uint32 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *PublicInputs) GetBatchNum() uint32 {
	if x != nil {
		return x.BatchNum
	}
	return 0
}

func (x *PublicInputs) GetBlockNum() uint32 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

func (x *PublicInputs) GetEthTimestamp() uint64 {
	if x != nil {
		return x.EthTimestamp
	}
	return 0
}

type ProofB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proofs []string `protobuf:"bytes,1,rep,name=proofs,proto3" json:"proofs,omitempty"`
}

func (x *ProofB) Reset() {
	*x = ProofB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProofB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProofB) ProtoMessage() {}

func (x *ProofB) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProofB.ProtoReflect.Descriptor instead.
func (*ProofB) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{11}
}

func (x *ProofB) GetProofs() []string {
	if x != nil {
		return x.Proofs
	}
	return nil
}

type Proof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProofA []string  `protobuf:"bytes,1,rep,name=proofA,proto3" json:"proofA,omitempty"`
	ProofB []*ProofB `protobuf:"bytes,2,rep,name=proofB,proto3" json:"proofB,omitempty"`
	ProofC []string  `protobuf:"bytes,3,rep,name=proofC,proto3" json:"proofC,omitempty"`
}

func (x *Proof) Reset() {
	*x = Proof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Proof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proof) ProtoMessage() {}

func (x *Proof) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proof.ProtoReflect.Descriptor instead.
func (*Proof) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{12}
}

func (x *Proof) GetProofA() []string {
	if x != nil {
		return x.ProofA
	}
	return nil
}

func (x *Proof) GetProofB() []*ProofB {
	if x != nil {
		return x.ProofB
	}
	return nil
}

func (x *Proof) GetProofC() []string {
	if x != nil {
		return x.ProofC
	}
	return nil
}

type InputProver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicInputs   *PublicInputs     `protobuf:"bytes,1,opt,name=public_inputs,json=publicInputs,proto3" json:"public_inputs,omitempty"`
	GlobalExitRoot string            `protobuf:"bytes,2,opt,name=global_exit_root,json=globalExitRoot,proto3" json:"global_exit_root,omitempty"`
	Txs            []string          `protobuf:"bytes,3,rep,name=txs,proto3" json:"txs,omitempty"`
	Db             map[string]string `protobuf:"bytes,4,rep,name=db,proto3" json:"db,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *InputProver) Reset() {
	*x = InputProver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputProver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputProver) ProtoMessage() {}

func (x *InputProver) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputProver.ProtoReflect.Descriptor instead.
func (*InputProver) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{13}
}

func (x *InputProver) GetPublicInputs() *PublicInputs {
	if x != nil {
		return x.PublicInputs
	}
	return nil
}

func (x *InputProver) GetGlobalExitRoot() string {
	if x != nil {
		return x.GlobalExitRoot
	}
	return ""
}

func (x *InputProver) GetTxs() []string {
	if x != nil {
		return x.Txs
	}
	return nil
}

func (x *InputProver) GetDb() map[string]string {
	if x != nil {
		return x.Db
	}
	return nil
}

type PublicInputsExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicInputs *PublicInputs `protobuf:"bytes,1,opt,name=public_inputs,json=publicInputs,proto3" json:"public_inputs,omitempty"`
	InputHash    string        `protobuf:"bytes,2,opt,name=input_hash,json=inputHash,proto3" json:"input_hash,omitempty"`
}

func (x *PublicInputsExtended) Reset() {
	*x = PublicInputsExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zk_prover_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicInputsExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicInputsExtended) ProtoMessage() {}

func (x *PublicInputsExtended) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zk_prover_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicInputsExtended.ProtoReflect.Descriptor instead.
func (*PublicInputsExtended) Descriptor() ([]byte, []int) {
	return file_proto_zk_prover_proto_rawDescGZIP(), []int{14}
}

func (x *PublicInputsExtended) GetPublicInputs() *PublicInputs {
	if x != nil {
		return x.PublicInputs
	}
	return nil
}

func (x *PublicInputsExtended) GetInputHash() string {
	if x != nil {
		return x.InputHash
	}
	return ""
}

var File_proto_zk_prover_proto protoreflect.FileDescriptor

var file_proto_zk_prover_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x7a, 0x6b, 0x2d, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x72, 0x22, 0x1f, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x06,
	0x76, 0x30, 0x5f, 0x30, 0x5f, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76, 0x30,
	0x30, 0x31, 0x22, 0x0a, 0x0a, 0x08, 0x4e, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x1b,
	0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x0b, 0x52,
	0x65, 0x71, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x22, 0x80, 0x04, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x37, 0x0a, 0x18, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f,
	0x0a, 0x1c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x3f, 0x0a, 0x1c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x19,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x16, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x73, 0x22, 0x3e, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x50, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4f, 0x4f, 0x54, 0x49,
	0x4e, 0x47, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x49, 0x4e,
	0x47, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x08, 0x0a,
	0x04, 0x48, 0x41, 0x4c, 0x54, 0x10, 0x03, 0x22, 0x94, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x47,
	0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x47, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x37, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47,
	0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x22, 0x68,
	0x0a, 0x09, 0x52, 0x65, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x38, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x7a, 0x6b,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x21, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x22, 0xce, 0x02, 0x0a, 0x0b, 0x52, 0x65, 0x73,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12,
	0x36, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52,
	0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x3c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x6d, 0x0a, 0x0e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x10, 0x0a, 0x0c,
	0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x5f, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4d,
	0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x0a, 0x0a,
	0x06, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10, 0x05, 0x22, 0xc8, 0x03, 0x0a, 0x0a, 0x52, 0x65,
	0x73, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x52, 0x0a, 0x10, 0x64, 0x69, 0x66, 0x66, 0x5f, 0x6b, 0x65, 0x79,
	0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x4b, 0x65, 0x79, 0x73, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x64, 0x69, 0x66, 0x66, 0x4b, 0x65,
	0x79, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x30,
	0x0a, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x5a, 0x6b, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x6f, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73,
	0x1a, 0x41, 0x0a, 0x13, 0x44, 0x69, 0x66, 0x66, 0x4b, 0x65, 0x79, 0x73, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x5f, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45,
	0x44, 0x5f, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x5f, 0x45,
	0x52, 0x52, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x41, 0x4e, 0x43,
	0x45, 0x4c, 0x10, 0x04, 0x22, 0x86, 0x01, 0x0a, 0x0a, 0x5a, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x63, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x63, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x70, 0x6f, 0x73, 0x65, 0x69, 0x64,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x68, 0x50, 0x6f,
	0x73, 0x65, 0x69, 0x64, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x6b,
	0x65, 0x63, 0x63, 0x61, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x68, 0x61, 0x73,
	0x68, 0x4b, 0x65, 0x63, 0x63, 0x61, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x72, 0x69, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x72, 0x69, 0x74, 0x68, 0x22, 0x81, 0x03,
	0x0a, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x24,
	0x0a, 0x0e, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6f, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x6f, 0x6c, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x6f, 0x6c, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x69, 0x74, 0x52,
	0x6f, 0x6f, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x65, 0x77,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x6e, 0x65, 0x77,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x65, 0x77, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x45, 0x78, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x26, 0x0a, 0x0f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x74, 0x63, 0x68, 0x48,
	0x61, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x74, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x65, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0x20, 0x0a, 0x06, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x42, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f,
	0x6f, 0x66, 0x73, 0x22, 0x61, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x41, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x41, 0x12, 0x28, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x42, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x42, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x42, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x43, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x43, 0x22, 0xec, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x50, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x73, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x78,
	0x69, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x78, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x78, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x74, 0x78, 0x73, 0x12,
	0x2d, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x7a, 0x6b,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x72, 0x6f, 0x76,
	0x65, 0x72, 0x2e, 0x44, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x02, 0x64, 0x62, 0x1a, 0x35,
	0x0a, 0x07, 0x44, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x72, 0x0a, 0x14, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x3b, 0x0a,
	0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x52, 0x0c, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x61, 0x73, 0x68, 0x32, 0xb5, 0x02, 0x0a, 0x08, 0x5a, 0x4b,
	0x50, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x4e,
	0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x00, 0x12, 0x3a, 0x0a, 0x08, 0x47, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x15, 0x2e,
	0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x72,
	0x6f, 0x76, 0x65, 0x72, 0x1a, 0x15, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x73, 0x47, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x00, 0x12, 0x34, 0x0a,
	0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x13, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x1a, 0x13, 0x2e, 0x7a,
	0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12,
	0x15, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x1a, 0x15, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x00, 0x28,
	0x01, 0x30, 0x01, 0x12, 0x3c, 0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x15,
	0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50,
	0x72, 0x6f, 0x76, 0x65, 0x72, 0x1a, 0x14, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30,
	0x01, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_zk_prover_proto_rawDescOnce sync.Once
	file_proto_zk_prover_proto_rawDescData = file_proto_zk_prover_proto_rawDesc
)

func file_proto_zk_prover_proto_rawDescGZIP() []byte {
	file_proto_zk_prover_proto_rawDescOnce.Do(func() {
		file_proto_zk_prover_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_zk_prover_proto_rawDescData)
	})
	return file_proto_zk_prover_proto_rawDescData
}

var file_proto_zk_prover_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_proto_zk_prover_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_zk_prover_proto_goTypes = []interface{}{
	(ResGetStatus_StatusProver)(0),  // 0: zkprover.ResGetStatus.StatusProver
	(ResGenProof_ResultGenProof)(0), // 1: zkprover.ResGenProof.ResultGenProof
	(ResCancel_ResultCancel)(0),     // 2: zkprover.ResCancel.ResultCancel
	(ResGetProof_ResultGetProof)(0), // 3: zkprover.ResGetProof.ResultGetProof
	(ResExecute_ResultExecute)(0),   // 4: zkprover.ResExecute.ResultExecute
	(*Version)(nil),                 // 5: zkprover.Version
	(*NoParams)(nil),                // 6: zkprover.NoParams
	(*RequestId)(nil),               // 7: zkprover.RequestId
	(*ReqGetProof)(nil),             // 8: zkprover.ReqGetProof
	(*ResGetStatus)(nil),            // 9: zkprover.ResGetStatus
	(*ResGenProof)(nil),             // 10: zkprover.ResGenProof
	(*ResCancel)(nil),               // 11: zkprover.ResCancel
	(*ResGetProof)(nil),             // 12: zkprover.ResGetProof
	(*ResExecute)(nil),              // 13: zkprover.ResExecute
	(*ZkCounters)(nil),              // 14: zkprover.ZkCounters
	(*PublicInputs)(nil),            // 15: zkprover.PublicInputs
	(*ProofB)(nil),                  // 16: zkprover.ProofB
	(*Proof)(nil),                   // 17: zkprover.Proof
	(*InputProver)(nil),             // 18: zkprover.InputProver
	(*PublicInputsExtended)(nil),    // 19: zkprover.PublicInputsExtended
	nil,                             // 20: zkprover.ResExecute.DiffKeysValuesEntry
	nil,                             // 21: zkprover.InputProver.DbEntry
}
var file_proto_zk_prover_proto_depIdxs = []int32{
	0,  // 0: zkprover.ResGetStatus.state:type_name -> zkprover.ResGetStatus.StatusProver
	1,  // 1: zkprover.ResGenProof.result:type_name -> zkprover.ResGenProof.ResultGenProof
	2,  // 2: zkprover.ResCancel.result:type_name -> zkprover.ResCancel.ResultCancel
	17, // 3: zkprover.ResGetProof.proof:type_name -> zkprover.Proof
	19, // 4: zkprover.ResGetProof.public:type_name -> zkprover.PublicInputsExtended
	3,  // 5: zkprover.ResGetProof.result:type_name -> zkprover.ResGetProof.ResultGetProof
	4,  // 6: zkprover.ResExecute.result:type_name -> zkprover.ResExecute.ResultExecute
	20, // 7: zkprover.ResExecute.diff_keys_values:type_name -> zkprover.ResExecute.DiffKeysValuesEntry
	14, // 8: zkprover.ResExecute.counters:type_name -> zkprover.ZkCounters
	16, // 9: zkprover.Proof.proofB:type_name -> zkprover.ProofB
	15, // 10: zkprover.InputProver.public_inputs:type_name -> zkprover.PublicInputs
	21, // 11: zkprover.InputProver.db:type_name -> zkprover.InputProver.DbEntry
	15, // 12: zkprover.PublicInputsExtended.public_inputs:type_name -> zkprover.PublicInputs
	6,  // 13: zkprover.ZKProver.GetStatus:input_type -> zkprover.NoParams
	18, // 14: zkprover.ZKProver.GenProof:input_type -> zkprover.InputProver
	7,  // 15: zkprover.ZKProver.Cancel:input_type -> zkprover.RequestId
	8,  // 16: zkprover.ZKProver.GetProof:input_type -> zkprover.ReqGetProof
	18, // 17: zkprover.ZKProver.Execute:input_type -> zkprover.InputProver
	9,  // 18: zkprover.ZKProver.GetStatus:output_type -> zkprover.ResGetStatus
	10, // 19: zkprover.ZKProver.GenProof:output_type -> zkprover.ResGenProof
	11, // 20: zkprover.ZKProver.Cancel:output_type -> zkprover.ResCancel
	12, // 21: zkprover.ZKProver.GetProof:output_type -> zkprover.ResGetProof
	13, // 22: zkprover.ZKProver.Execute:output_type -> zkprover.ResExecute
	18, // [18:23] is the sub-list for method output_type
	13, // [13:18] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_zk_prover_proto_init() }
func file_proto_zk_prover_proto_init() {
	if File_proto_zk_prover_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_zk_prover_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zk_prover_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zk_prover_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zk_prover_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zk_prover_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zk_prover_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGenProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zk_prover_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCancel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zk_prover_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zk_prover_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResExecute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zk_prover_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZkCounters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zk_prover_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicInputs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zk_prover_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProofB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zk_prover_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Proof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zk_prover_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputProver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zk_prover_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicInputsExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_zk_prover_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_zk_prover_proto_goTypes,
		DependencyIndexes: file_proto_zk_prover_proto_depIdxs,
		EnumInfos:         file_proto_zk_prover_proto_enumTypes,
		MessageInfos:      file_proto_zk_prover_proto_msgTypes,
	}.Build()
	File_proto_zk_prover_proto = out.File
	file_proto_zk_prover_proto_rawDesc = nil
	file_proto_zk_prover_proto_goTypes = nil
	file_proto_zk_prover_proto_depIdxs = nil
}
