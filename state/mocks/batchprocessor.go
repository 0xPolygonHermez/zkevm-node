// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	common "github.com/ethereum/go-ethereum/common"
	mock "github.com/stretchr/testify/mock"

	state "github.com/hermeznetwork/hermez-core/state"

	types "github.com/ethereum/go-ethereum/core/types"
)

// BatchProcessor is an autogenerated mock type for the BatchProcessor type
type BatchProcessor struct {
	mock.Mock
}

// CheckTransaction provides a mock function with given fields: tx
func (_m *BatchProcessor) CheckTransaction(tx *types.Transaction) error {
	ret := _m.Called(tx)

	var r0 error
	if rf, ok := ret.Get(0).(func(*types.Transaction) error); ok {
		r0 = rf(tx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ProcessBatch provides a mock function with given fields: batch
func (_m *BatchProcessor) ProcessBatch(batch *state.Batch) error {
	ret := _m.Called(batch)

	var r0 error
	if rf, ok := ret.Get(0).(func(*state.Batch) error); ok {
		r0 = rf(batch)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ProcessTransaction provides a mock function with given fields: tx, sequencerAddress
func (_m *BatchProcessor) ProcessTransaction(tx *types.Transaction, sequencerAddress common.Address) error {
	ret := _m.Called(tx, sequencerAddress)

	var r0 error
	if rf, ok := ret.Get(0).(func(*types.Transaction, common.Address) error); ok {
		r0 = rf(tx, sequencerAddress)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
