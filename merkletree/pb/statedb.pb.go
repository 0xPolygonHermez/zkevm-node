// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: statedb.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResultCode_Code int32

const (
	ResultCode_CODE_UNSPECIFIED    ResultCode_Code = 0
	ResultCode_CODE_SUCCESS        ResultCode_Code = 1
	ResultCode_CODE_KEY_NOT_FOUND  ResultCode_Code = 2
	ResultCode_CODE_DB_ERROR       ResultCode_Code = 3
	ResultCode_CODE_INTERNAL_ERROR ResultCode_Code = 4
)

// Enum value maps for ResultCode_Code.
var (
	ResultCode_Code_name = map[int32]string{
		0: "CODE_UNSPECIFIED",
		1: "CODE_SUCCESS",
		2: "CODE_KEY_NOT_FOUND",
		3: "CODE_DB_ERROR",
		4: "CODE_INTERNAL_ERROR",
	}
	ResultCode_Code_value = map[string]int32{
		"CODE_UNSPECIFIED":    0,
		"CODE_SUCCESS":        1,
		"CODE_KEY_NOT_FOUND":  2,
		"CODE_DB_ERROR":       3,
		"CODE_INTERNAL_ERROR": 4,
	}
)

func (x ResultCode_Code) Enum() *ResultCode_Code {
	p := new(ResultCode_Code)
	*p = x
	return p
}

func (x ResultCode_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResultCode_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_statedb_proto_enumTypes[0].Descriptor()
}

func (ResultCode_Code) Type() protoreflect.EnumType {
	return &file_statedb_proto_enumTypes[0]
}

func (x ResultCode_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResultCode_Code.Descriptor instead.
func (ResultCode_Code) EnumDescriptor() ([]byte, []int) {
	return file_statedb_proto_rawDescGZIP(), []int{11, 0}
}

type Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	V0_0_1 string `protobuf:"bytes,1,opt,name=v0_0_1,json=v001,proto3" json:"v0_0_1,omitempty"`
}

func (x *Version) Reset() {
	*x = Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statedb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_statedb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_statedb_proto_rawDescGZIP(), []int{0}
}

func (x *Version) GetV0_0_1() string {
	if x != nil {
		return x.V0_0_1
	}
	return ""
}

//*
// @dev SetRequest
// @param {old_root} - merkle-tree root
// @param {key} - key to set
// @param {value} - scalar value to set (HEX string format)
// @param {persistent} - indicates if it should be stored in the database (true) or only in the memory cache (false)
// @param {details} - indicates if it should return all response parameters (true) or just the new root (false)
type SetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldRoot    *Fea   `protobuf:"bytes,1,opt,name=old_root,json=oldRoot,proto3" json:"old_root,omitempty"`
	Key        *Fea   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value      string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Persistent bool   `protobuf:"varint,4,opt,name=persistent,proto3" json:"persistent,omitempty"`
	Details    bool   `protobuf:"varint,5,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *SetRequest) Reset() {
	*x = SetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statedb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRequest) ProtoMessage() {}

func (x *SetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_statedb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRequest.ProtoReflect.Descriptor instead.
func (*SetRequest) Descriptor() ([]byte, []int) {
	return file_statedb_proto_rawDescGZIP(), []int{1}
}

func (x *SetRequest) GetOldRoot() *Fea {
	if x != nil {
		return x.OldRoot
	}
	return nil
}

func (x *SetRequest) GetKey() *Fea {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *SetRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SetRequest) GetPersistent() bool {
	if x != nil {
		return x.Persistent
	}
	return false
}

func (x *SetRequest) GetDetails() bool {
	if x != nil {
		return x.Details
	}
	return false
}

//*
// @dev GetRequest
// @param {root} - merkle-tree root
// @param {key} - key to look for
// @param {details} - indicates if it should return all response parameters (true) or just the new root (false)
type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root    *Fea `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Key     *Fea `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Details bool `protobuf:"varint,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statedb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_statedb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_statedb_proto_rawDescGZIP(), []int{2}
}

func (x *GetRequest) GetRoot() *Fea {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *GetRequest) GetKey() *Fea {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *GetRequest) GetDetails() bool {
	if x != nil {
		return x.Details
	}
	return false
}

//*
// @dev SetProgramRequest
// @param {key} - hash to set
// @param {data} - Program data to store
// @param {persistent} - indicates if it should be stored in the database (true) or only in the memory cache (false)
type SetProgramRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        *Fea   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Data       []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Persistent bool   `protobuf:"varint,3,opt,name=persistent,proto3" json:"persistent,omitempty"`
}

func (x *SetProgramRequest) Reset() {
	*x = SetProgramRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statedb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProgramRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProgramRequest) ProtoMessage() {}

func (x *SetProgramRequest) ProtoReflect() protoreflect.Message {
	mi := &file_statedb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProgramRequest.ProtoReflect.Descriptor instead.
func (*SetProgramRequest) Descriptor() ([]byte, []int) {
	return file_statedb_proto_rawDescGZIP(), []int{3}
}

func (x *SetProgramRequest) GetKey() *Fea {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *SetProgramRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SetProgramRequest) GetPersistent() bool {
	if x != nil {
		return x.Persistent
	}
	return false
}

//*
// @dev GetProgramRequest
// @param {key} - hash to get program data
type GetProgramRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *Fea `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetProgramRequest) Reset() {
	*x = GetProgramRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statedb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProgramRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProgramRequest) ProtoMessage() {}

func (x *GetProgramRequest) ProtoReflect() protoreflect.Message {
	mi := &file_statedb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProgramRequest.ProtoReflect.Descriptor instead.
func (*GetProgramRequest) Descriptor() ([]byte, []int) {
	return file_statedb_proto_rawDescGZIP(), []int{4}
}

func (x *GetProgramRequest) GetKey() *Fea {
	if x != nil {
		return x.Key
	}
	return nil
}

//*
// @dev SetResponse
// @param {old_root} - merkle-tree root
// @param {new_root} - merkle-tree new root
// @param {key} - key to look for
// @param {siblings} - array of siblings
// @param {ins_key} - key found
// @param {ins_value} - value found (HEX string format)
// @param {is_old0} - is new insert or delete
// @param {old_value} - old value (HEX string format)
// @param {new_value} - new value (HEX string format)
// @param {mode}
// @param {result} - result code
type SetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldRoot  *Fea                    `protobuf:"bytes,1,opt,name=old_root,json=oldRoot,proto3" json:"old_root,omitempty"`
	NewRoot  *Fea                    `protobuf:"bytes,2,opt,name=new_root,json=newRoot,proto3" json:"new_root,omitempty"`
	Key      *Fea                    `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Siblings map[uint64]*SiblingList `protobuf:"bytes,4,rep,name=siblings,proto3" json:"siblings,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	InsKey   *Fea                    `protobuf:"bytes,5,opt,name=ins_key,json=insKey,proto3" json:"ins_key,omitempty"`
	InsValue string                  `protobuf:"bytes,6,opt,name=ins_value,json=insValue,proto3" json:"ins_value,omitempty"`
	IsOld0   bool                    `protobuf:"varint,7,opt,name=is_old0,json=isOld0,proto3" json:"is_old0,omitempty"`
	OldValue string                  `protobuf:"bytes,8,opt,name=old_value,json=oldValue,proto3" json:"old_value,omitempty"`
	NewValue string                  `protobuf:"bytes,9,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
	Mode     string                  `protobuf:"bytes,10,opt,name=mode,proto3" json:"mode,omitempty"`
	Result   *ResultCode             `protobuf:"bytes,11,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SetResponse) Reset() {
	*x = SetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statedb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetResponse) ProtoMessage() {}

func (x *SetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_statedb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetResponse.ProtoReflect.Descriptor instead.
func (*SetResponse) Descriptor() ([]byte, []int) {
	return file_statedb_proto_rawDescGZIP(), []int{5}
}

func (x *SetResponse) GetOldRoot() *Fea {
	if x != nil {
		return x.OldRoot
	}
	return nil
}

func (x *SetResponse) GetNewRoot() *Fea {
	if x != nil {
		return x.NewRoot
	}
	return nil
}

func (x *SetResponse) GetKey() *Fea {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *SetResponse) GetSiblings() map[uint64]*SiblingList {
	if x != nil {
		return x.Siblings
	}
	return nil
}

func (x *SetResponse) GetInsKey() *Fea {
	if x != nil {
		return x.InsKey
	}
	return nil
}

func (x *SetResponse) GetInsValue() string {
	if x != nil {
		return x.InsValue
	}
	return ""
}

func (x *SetResponse) GetIsOld0() bool {
	if x != nil {
		return x.IsOld0
	}
	return false
}

func (x *SetResponse) GetOldValue() string {
	if x != nil {
		return x.OldValue
	}
	return ""
}

func (x *SetResponse) GetNewValue() string {
	if x != nil {
		return x.NewValue
	}
	return ""
}

func (x *SetResponse) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *SetResponse) GetResult() *ResultCode {
	if x != nil {
		return x.Result
	}
	return nil
}

//*
// @dev GetResponse
// @param {root} - merkle-tree root
// @param {key} - key to look for
// @param {siblings} - array of siblings
// @param {ins_key} - key found
// @param {ins_value} - value found (HEX string format)
// @param {is_old0} - is new insert or delete
// @param {value} - value retrieved (HEX string format)
// @param {result} - result code
type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root     *Fea                    `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Key      *Fea                    `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Siblings map[uint64]*SiblingList `protobuf:"bytes,3,rep,name=siblings,proto3" json:"siblings,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	InsKey   *Fea                    `protobuf:"bytes,4,opt,name=ins_key,json=insKey,proto3" json:"ins_key,omitempty"`
	InsValue string                  `protobuf:"bytes,5,opt,name=ins_value,json=insValue,proto3" json:"ins_value,omitempty"`
	IsOld0   bool                    `protobuf:"varint,6,opt,name=is_old0,json=isOld0,proto3" json:"is_old0,omitempty"`
	Value    string                  `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	Result   *ResultCode             `protobuf:"bytes,8,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statedb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_statedb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_statedb_proto_rawDescGZIP(), []int{6}
}

func (x *GetResponse) GetRoot() *Fea {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *GetResponse) GetKey() *Fea {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *GetResponse) GetSiblings() map[uint64]*SiblingList {
	if x != nil {
		return x.Siblings
	}
	return nil
}

func (x *GetResponse) GetInsKey() *Fea {
	if x != nil {
		return x.InsKey
	}
	return nil
}

func (x *GetResponse) GetInsValue() string {
	if x != nil {
		return x.InsValue
	}
	return ""
}

func (x *GetResponse) GetIsOld0() bool {
	if x != nil {
		return x.IsOld0
	}
	return false
}

func (x *GetResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *GetResponse) GetResult() *ResultCode {
	if x != nil {
		return x.Result
	}
	return nil
}

//*
// @dev SetProgramResponse
// @param {result} - result code
type SetProgramResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ResultCode `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SetProgramResponse) Reset() {
	*x = SetProgramResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statedb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProgramResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProgramResponse) ProtoMessage() {}

func (x *SetProgramResponse) ProtoReflect() protoreflect.Message {
	mi := &file_statedb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProgramResponse.ProtoReflect.Descriptor instead.
func (*SetProgramResponse) Descriptor() ([]byte, []int) {
	return file_statedb_proto_rawDescGZIP(), []int{7}
}

func (x *SetProgramResponse) GetResult() *ResultCode {
	if x != nil {
		return x.Result
	}
	return nil
}

//*
// @dev GetProgramResponse
// @param {data} - program data retrieved
// @param {result} - result code
type GetProgramResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   []byte      `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Result *ResultCode `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetProgramResponse) Reset() {
	*x = GetProgramResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statedb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProgramResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProgramResponse) ProtoMessage() {}

func (x *GetProgramResponse) ProtoReflect() protoreflect.Message {
	mi := &file_statedb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProgramResponse.ProtoReflect.Descriptor instead.
func (*GetProgramResponse) Descriptor() ([]byte, []int) {
	return file_statedb_proto_rawDescGZIP(), []int{8}
}

func (x *GetProgramResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetProgramResponse) GetResult() *ResultCode {
	if x != nil {
		return x.Result
	}
	return nil
}

//*
// @dev Array of 4 FE
// @param {fe0} - Field Element value for pos 0
// @param {fe1} - Field Element value for pos 1
// @param {fe2} - Field Element value for pos 2
// @param {fe3} - Field Element value for pos 3
type Fea struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fe0 uint64 `protobuf:"varint,1,opt,name=fe0,proto3" json:"fe0,omitempty"`
	Fe1 uint64 `protobuf:"varint,2,opt,name=fe1,proto3" json:"fe1,omitempty"`
	Fe2 uint64 `protobuf:"varint,3,opt,name=fe2,proto3" json:"fe2,omitempty"`
	Fe3 uint64 `protobuf:"varint,4,opt,name=fe3,proto3" json:"fe3,omitempty"`
}

func (x *Fea) Reset() {
	*x = Fea{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statedb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fea) ProtoMessage() {}

func (x *Fea) ProtoReflect() protoreflect.Message {
	mi := &file_statedb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fea.ProtoReflect.Descriptor instead.
func (*Fea) Descriptor() ([]byte, []int) {
	return file_statedb_proto_rawDescGZIP(), []int{9}
}

func (x *Fea) GetFe0() uint64 {
	if x != nil {
		return x.Fe0
	}
	return 0
}

func (x *Fea) GetFe1() uint64 {
	if x != nil {
		return x.Fe1
	}
	return 0
}

func (x *Fea) GetFe2() uint64 {
	if x != nil {
		return x.Fe2
	}
	return 0
}

func (x *Fea) GetFe3() uint64 {
	if x != nil {
		return x.Fe3
	}
	return 0
}

//*
// @dev Siblings List
// @param {sibling} - sibling
type SiblingList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sibling []uint64 `protobuf:"varint,1,rep,packed,name=sibling,proto3" json:"sibling,omitempty"`
}

func (x *SiblingList) Reset() {
	*x = SiblingList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statedb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiblingList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiblingList) ProtoMessage() {}

func (x *SiblingList) ProtoReflect() protoreflect.Message {
	mi := &file_statedb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiblingList.ProtoReflect.Descriptor instead.
func (*SiblingList) Descriptor() ([]byte, []int) {
	return file_statedb_proto_rawDescGZIP(), []int{10}
}

func (x *SiblingList) GetSibling() []uint64 {
	if x != nil {
		return x.Sibling
	}
	return nil
}

//*
// @dev Result code
// @param {code} - result code
type ResultCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code ResultCode_Code `protobuf:"varint,1,opt,name=code,proto3,enum=statedb.v1.ResultCode_Code" json:"code,omitempty"`
}

func (x *ResultCode) Reset() {
	*x = ResultCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statedb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultCode) ProtoMessage() {}

func (x *ResultCode) ProtoReflect() protoreflect.Message {
	mi := &file_statedb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultCode.ProtoReflect.Descriptor instead.
func (*ResultCode) Descriptor() ([]byte, []int) {
	return file_statedb_proto_rawDescGZIP(), []int{11}
}

func (x *ResultCode) GetCode() ResultCode_Code {
	if x != nil {
		return x.Code
	}
	return ResultCode_CODE_UNSPECIFIED
}

var File_statedb_proto protoreflect.FileDescriptor

var file_statedb_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1f, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x06, 0x76, 0x30, 0x5f, 0x30, 0x5f, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x76, 0x30, 0x30, 0x31, 0x22, 0xab, 0x01, 0x0a, 0x0a, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x5f,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x52, 0x07, 0x6f, 0x6c, 0x64,
	0x52, 0x6f, 0x6f, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x65, 0x61, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x6e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x65, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x6a, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x36, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xff, 0x03, 0x0a, 0x0b,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x6f,
	0x6c, 0x64, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x52, 0x07,
	0x6f, 0x6c, 0x64, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x72,
	0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x52,
	0x6f, 0x6f, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65,
	0x61, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x41, 0x0a, 0x08, 0x73, 0x69, 0x62, 0x6c, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x69, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x73, 0x69, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x69, 0x6e, 0x73,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x52, 0x06, 0x69, 0x6e, 0x73,
	0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6f, 0x6c, 0x64, 0x30, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x69, 0x73, 0x4f, 0x6c, 0x64, 0x30, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6c, 0x64,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x6c,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x54, 0x0a, 0x0d, 0x53, 0x69, 0x62, 0x6c, 0x69,
	0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x94, 0x03,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x52, 0x04, 0x72, 0x6f,
	0x6f, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x41, 0x0a, 0x08, 0x73, 0x69, 0x62, 0x6c, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x69, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08,
	0x73, 0x69, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x4b,
	0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6f, 0x6c, 0x64, 0x30, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x4f, 0x6c, 0x64, 0x30, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x54,
	0x0a, 0x0d, 0x53, 0x69, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69,
	0x62, 0x6c, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x44, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x58, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x4d, 0x0a, 0x03, 0x46, 0x65, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x65, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x30, 0x12, 0x10, 0x0a,
	0x03, 0x66, 0x65, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x31, 0x12,
	0x10, 0x0a, 0x03, 0x66, 0x65, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65,
	0x32, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x66, 0x65, 0x33, 0x22, 0x27, 0x0a, 0x0b, 0x53, 0x69, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x07, 0x73, 0x69, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x22, 0xb1, 0x01, 0x0a,
	0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x72, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x42, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04,
	0x32, 0xdd, 0x02, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x42, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a,
	0x03, 0x47, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x12, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x05, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x30,
	0x78, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x7a, 0x2f, 0x7a,
	0x6b, 0x65, 0x76, 0x6d, 0x2d, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65,
	0x74, 0x72, 0x65, 0x65, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_statedb_proto_rawDescOnce sync.Once
	file_statedb_proto_rawDescData = file_statedb_proto_rawDesc
)

func file_statedb_proto_rawDescGZIP() []byte {
	file_statedb_proto_rawDescOnce.Do(func() {
		file_statedb_proto_rawDescData = protoimpl.X.CompressGZIP(file_statedb_proto_rawDescData)
	})
	return file_statedb_proto_rawDescData
}

var file_statedb_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_statedb_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_statedb_proto_goTypes = []interface{}{
	(ResultCode_Code)(0),       // 0: statedb.v1.ResultCode.Code
	(*Version)(nil),            // 1: statedb.v1.Version
	(*SetRequest)(nil),         // 2: statedb.v1.SetRequest
	(*GetRequest)(nil),         // 3: statedb.v1.GetRequest
	(*SetProgramRequest)(nil),  // 4: statedb.v1.SetProgramRequest
	(*GetProgramRequest)(nil),  // 5: statedb.v1.GetProgramRequest
	(*SetResponse)(nil),        // 6: statedb.v1.SetResponse
	(*GetResponse)(nil),        // 7: statedb.v1.GetResponse
	(*SetProgramResponse)(nil), // 8: statedb.v1.SetProgramResponse
	(*GetProgramResponse)(nil), // 9: statedb.v1.GetProgramResponse
	(*Fea)(nil),                // 10: statedb.v1.Fea
	(*SiblingList)(nil),        // 11: statedb.v1.SiblingList
	(*ResultCode)(nil),         // 12: statedb.v1.ResultCode
	nil,                        // 13: statedb.v1.SetResponse.SiblingsEntry
	nil,                        // 14: statedb.v1.GetResponse.SiblingsEntry
	(*emptypb.Empty)(nil),      // 15: google.protobuf.Empty
}
var file_statedb_proto_depIdxs = []int32{
	10, // 0: statedb.v1.SetRequest.old_root:type_name -> statedb.v1.Fea
	10, // 1: statedb.v1.SetRequest.key:type_name -> statedb.v1.Fea
	10, // 2: statedb.v1.GetRequest.root:type_name -> statedb.v1.Fea
	10, // 3: statedb.v1.GetRequest.key:type_name -> statedb.v1.Fea
	10, // 4: statedb.v1.SetProgramRequest.key:type_name -> statedb.v1.Fea
	10, // 5: statedb.v1.GetProgramRequest.key:type_name -> statedb.v1.Fea
	10, // 6: statedb.v1.SetResponse.old_root:type_name -> statedb.v1.Fea
	10, // 7: statedb.v1.SetResponse.new_root:type_name -> statedb.v1.Fea
	10, // 8: statedb.v1.SetResponse.key:type_name -> statedb.v1.Fea
	13, // 9: statedb.v1.SetResponse.siblings:type_name -> statedb.v1.SetResponse.SiblingsEntry
	10, // 10: statedb.v1.SetResponse.ins_key:type_name -> statedb.v1.Fea
	12, // 11: statedb.v1.SetResponse.result:type_name -> statedb.v1.ResultCode
	10, // 12: statedb.v1.GetResponse.root:type_name -> statedb.v1.Fea
	10, // 13: statedb.v1.GetResponse.key:type_name -> statedb.v1.Fea
	14, // 14: statedb.v1.GetResponse.siblings:type_name -> statedb.v1.GetResponse.SiblingsEntry
	10, // 15: statedb.v1.GetResponse.ins_key:type_name -> statedb.v1.Fea
	12, // 16: statedb.v1.GetResponse.result:type_name -> statedb.v1.ResultCode
	12, // 17: statedb.v1.SetProgramResponse.result:type_name -> statedb.v1.ResultCode
	12, // 18: statedb.v1.GetProgramResponse.result:type_name -> statedb.v1.ResultCode
	0,  // 19: statedb.v1.ResultCode.code:type_name -> statedb.v1.ResultCode.Code
	11, // 20: statedb.v1.SetResponse.SiblingsEntry.value:type_name -> statedb.v1.SiblingList
	11, // 21: statedb.v1.GetResponse.SiblingsEntry.value:type_name -> statedb.v1.SiblingList
	2,  // 22: statedb.v1.StateDBService.Set:input_type -> statedb.v1.SetRequest
	3,  // 23: statedb.v1.StateDBService.Get:input_type -> statedb.v1.GetRequest
	4,  // 24: statedb.v1.StateDBService.SetProgram:input_type -> statedb.v1.SetProgramRequest
	5,  // 25: statedb.v1.StateDBService.GetProgram:input_type -> statedb.v1.GetProgramRequest
	15, // 26: statedb.v1.StateDBService.Flush:input_type -> google.protobuf.Empty
	6,  // 27: statedb.v1.StateDBService.Set:output_type -> statedb.v1.SetResponse
	7,  // 28: statedb.v1.StateDBService.Get:output_type -> statedb.v1.GetResponse
	8,  // 29: statedb.v1.StateDBService.SetProgram:output_type -> statedb.v1.SetProgramResponse
	9,  // 30: statedb.v1.StateDBService.GetProgram:output_type -> statedb.v1.GetProgramResponse
	15, // 31: statedb.v1.StateDBService.Flush:output_type -> google.protobuf.Empty
	27, // [27:32] is the sub-list for method output_type
	22, // [22:27] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_statedb_proto_init() }
func file_statedb_proto_init() {
	if File_statedb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_statedb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statedb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statedb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statedb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProgramRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statedb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProgramRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statedb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statedb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statedb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProgramResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statedb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProgramResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statedb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statedb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiblingList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statedb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_statedb_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_statedb_proto_goTypes,
		DependencyIndexes: file_statedb_proto_depIdxs,
		EnumInfos:         file_statedb_proto_enumTypes,
		MessageInfos:      file_statedb_proto_msgTypes,
	}.Build()
	File_statedb_proto = out.File
	file_statedb_proto_rawDesc = nil
	file_statedb_proto_goTypes = nil
	file_statedb_proto_depIdxs = nil
}
