// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package polygonzkevmbridgel2

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// Polygonzkevmbridgel2MetaData contains all meta data concerning the Polygonzkevmbridgel2 contract.
var Polygonzkevmbridgel2MetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"name\":\"AlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountDoesNotMatchMsgValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DestinationNetworkInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EtherTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GlobalExitRootInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSmtProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MerkleTreeFull\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MsgValueNotZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotValidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotValidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotValidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotValidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyEmergencyState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyNotEmergencyState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPolygonZkEVM\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenNotPermitted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"AllL2TokensPermissionSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"leafType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"originNetwork\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"originAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"destinationNetwork\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destinationAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"depositCount\",\"type\":\"uint32\"}],\"name\":\"BridgeEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"originNetwork\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"originAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destinationAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EmergencyStateActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EmergencyStateDeactivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"L2TokenPermissionSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"originNetwork\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"originTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wrappedTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"NewWrappedToken\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETHToken\",\"outputs\":[{\"internalType\":\"contractTokenWrapped\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activateEmergencyState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationNetwork\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"destinationAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forceUpdateGlobalExitRoot\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"permitData\",\"type\":\"bytes\"}],\"name\":\"bridgeAsset\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationNetwork\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"destinationAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountWETH\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"forceUpdateGlobalExitRoot\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"bridgeMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[32]\",\"name\":\"smtProof\",\"type\":\"bytes32[32]\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"mainnetExitRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"rollupExitRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"originNetwork\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"originTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"destinationNetwork\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"destinationAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"claimAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[32]\",\"name\":\"smtProof\",\"type\":\"bytes32[32]\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"mainnetExitRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"rollupExitRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"originNetwork\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"originAddress\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"destinationNetwork\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"destinationAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"claimMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claimedBitMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deactivateEmergencyState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasTokenNetwork\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDepositRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"leafType\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"originNetwork\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"originAddress\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"destinationNetwork\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"destinationAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"metadataHash\",\"type\":\"bytes32\"}],\"name\":\"getLeafValue\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"originNetwork\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"originTokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenWrappedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalExitRootManager\",\"outputs\":[{\"internalType\":\"contractIBasePolygonZkEVMGlobalExitRoot\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_networkID\",\"type\":\"uint32\"},{\"internalType\":\"contractIBasePolygonZkEVMGlobalExitRoot\",\"name\":\"_globalExitRootManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_polygonZkEVMaddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gasTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_gasTokenNetwork\",\"type\":\"uint32\"},{\"internalType\":\"contractTokenWrapped\",\"name\":\"_WETHToken\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAllL2TokensAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"isClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isEmergencyState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isTokenAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdatedDepositCount\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"networkID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"polygonZkEVMaddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"originNetwork\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"originTokenAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"precalculatedWrapperAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setAllL2TokensAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setL2TokenBridgePermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"tokenInfoToWrappedToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateGlobalExitRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"leafHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[32]\",\"name\":\"smtProof\",\"type\":\"bytes32[32]\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"verifyMerkleProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wrappedTokenToTokenInfo\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"originNetwork\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"originTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "",
}

// Polygonzkevmbridgel2ABI is the input ABI used to generate the binding from.
// Deprecated: Use Polygonzkevmbridgel2MetaData.ABI instead.
var Polygonzkevmbridgel2ABI = Polygonzkevmbridgel2MetaData.ABI

// Polygonzkevmbridgel2Bin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use Polygonzkevmbridgel2MetaData.Bin instead.
var Polygonzkevmbridgel2Bin = Polygonzkevmbridgel2MetaData.Bin

// DeployPolygonzkevmbridgel2 deploys a new Ethereum contract, binding an instance of Polygonzkevmbridgel2 to it.
func DeployPolygonzkevmbridgel2(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Polygonzkevmbridgel2, error) {
	parsed, err := Polygonzkevmbridgel2MetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(Polygonzkevmbridgel2Bin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Polygonzkevmbridgel2{Polygonzkevmbridgel2Caller: Polygonzkevmbridgel2Caller{contract: contract}, Polygonzkevmbridgel2Transactor: Polygonzkevmbridgel2Transactor{contract: contract}, Polygonzkevmbridgel2Filterer: Polygonzkevmbridgel2Filterer{contract: contract}}, nil
}

// Polygonzkevmbridgel2 is an auto generated Go binding around an Ethereum contract.
type Polygonzkevmbridgel2 struct {
	Polygonzkevmbridgel2Caller     // Read-only binding to the contract
	Polygonzkevmbridgel2Transactor // Write-only binding to the contract
	Polygonzkevmbridgel2Filterer   // Log filterer for contract events
}

// Polygonzkevmbridgel2Caller is an auto generated read-only Go binding around an Ethereum contract.
type Polygonzkevmbridgel2Caller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// Polygonzkevmbridgel2Transactor is an auto generated write-only Go binding around an Ethereum contract.
type Polygonzkevmbridgel2Transactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// Polygonzkevmbridgel2Filterer is an auto generated log filtering Go binding around an Ethereum contract events.
type Polygonzkevmbridgel2Filterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// Polygonzkevmbridgel2Session is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type Polygonzkevmbridgel2Session struct {
	Contract     *Polygonzkevmbridgel2 // Generic contract binding to set the session for
	CallOpts     bind.CallOpts         // Call options to use throughout this session
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// Polygonzkevmbridgel2CallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type Polygonzkevmbridgel2CallerSession struct {
	Contract *Polygonzkevmbridgel2Caller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts               // Call options to use throughout this session
}

// Polygonzkevmbridgel2TransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type Polygonzkevmbridgel2TransactorSession struct {
	Contract     *Polygonzkevmbridgel2Transactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts               // Transaction auth options to use throughout this session
}

// Polygonzkevmbridgel2Raw is an auto generated low-level Go binding around an Ethereum contract.
type Polygonzkevmbridgel2Raw struct {
	Contract *Polygonzkevmbridgel2 // Generic contract binding to access the raw methods on
}

// Polygonzkevmbridgel2CallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type Polygonzkevmbridgel2CallerRaw struct {
	Contract *Polygonzkevmbridgel2Caller // Generic read-only contract binding to access the raw methods on
}

// Polygonzkevmbridgel2TransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type Polygonzkevmbridgel2TransactorRaw struct {
	Contract *Polygonzkevmbridgel2Transactor // Generic write-only contract binding to access the raw methods on
}

// NewPolygonzkevmbridgel2 creates a new instance of Polygonzkevmbridgel2, bound to a specific deployed contract.
func NewPolygonzkevmbridgel2(address common.Address, backend bind.ContractBackend) (*Polygonzkevmbridgel2, error) {
	contract, err := bindPolygonzkevmbridgel2(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Polygonzkevmbridgel2{Polygonzkevmbridgel2Caller: Polygonzkevmbridgel2Caller{contract: contract}, Polygonzkevmbridgel2Transactor: Polygonzkevmbridgel2Transactor{contract: contract}, Polygonzkevmbridgel2Filterer: Polygonzkevmbridgel2Filterer{contract: contract}}, nil
}

// NewPolygonzkevmbridgel2Caller creates a new read-only instance of Polygonzkevmbridgel2, bound to a specific deployed contract.
func NewPolygonzkevmbridgel2Caller(address common.Address, caller bind.ContractCaller) (*Polygonzkevmbridgel2Caller, error) {
	contract, err := bindPolygonzkevmbridgel2(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &Polygonzkevmbridgel2Caller{contract: contract}, nil
}

// NewPolygonzkevmbridgel2Transactor creates a new write-only instance of Polygonzkevmbridgel2, bound to a specific deployed contract.
func NewPolygonzkevmbridgel2Transactor(address common.Address, transactor bind.ContractTransactor) (*Polygonzkevmbridgel2Transactor, error) {
	contract, err := bindPolygonzkevmbridgel2(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &Polygonzkevmbridgel2Transactor{contract: contract}, nil
}

// NewPolygonzkevmbridgel2Filterer creates a new log filterer instance of Polygonzkevmbridgel2, bound to a specific deployed contract.
func NewPolygonzkevmbridgel2Filterer(address common.Address, filterer bind.ContractFilterer) (*Polygonzkevmbridgel2Filterer, error) {
	contract, err := bindPolygonzkevmbridgel2(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &Polygonzkevmbridgel2Filterer{contract: contract}, nil
}

// bindPolygonzkevmbridgel2 binds a generic wrapper to an already deployed contract.
func bindPolygonzkevmbridgel2(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := Polygonzkevmbridgel2MetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Raw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Polygonzkevmbridgel2.Contract.Polygonzkevmbridgel2Caller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Raw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.Polygonzkevmbridgel2Transactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Raw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.Polygonzkevmbridgel2Transactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Polygonzkevmbridgel2.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2TransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2TransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.contract.Transact(opts, method, params...)
}

// WETHToken is a free data retrieval call binding the contract method 0x4b2f336d.
//
// Solidity: function WETHToken() view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Caller) WETHToken(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Polygonzkevmbridgel2.contract.Call(opts, &out, "WETHToken")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// WETHToken is a free data retrieval call binding the contract method 0x4b2f336d.
//
// Solidity: function WETHToken() view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) WETHToken() (common.Address, error) {
	return _Polygonzkevmbridgel2.Contract.WETHToken(&_Polygonzkevmbridgel2.CallOpts)
}

// WETHToken is a free data retrieval call binding the contract method 0x4b2f336d.
//
// Solidity: function WETHToken() view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerSession) WETHToken() (common.Address, error) {
	return _Polygonzkevmbridgel2.Contract.WETHToken(&_Polygonzkevmbridgel2.CallOpts)
}

// ClaimedBitMap is a free data retrieval call binding the contract method 0xee25560b.
//
// Solidity: function claimedBitMap(uint256 ) view returns(uint256)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Caller) ClaimedBitMap(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _Polygonzkevmbridgel2.contract.Call(opts, &out, "claimedBitMap", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ClaimedBitMap is a free data retrieval call binding the contract method 0xee25560b.
//
// Solidity: function claimedBitMap(uint256 ) view returns(uint256)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) ClaimedBitMap(arg0 *big.Int) (*big.Int, error) {
	return _Polygonzkevmbridgel2.Contract.ClaimedBitMap(&_Polygonzkevmbridgel2.CallOpts, arg0)
}

// ClaimedBitMap is a free data retrieval call binding the contract method 0xee25560b.
//
// Solidity: function claimedBitMap(uint256 ) view returns(uint256)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerSession) ClaimedBitMap(arg0 *big.Int) (*big.Int, error) {
	return _Polygonzkevmbridgel2.Contract.ClaimedBitMap(&_Polygonzkevmbridgel2.CallOpts, arg0)
}

// DepositCount is a free data retrieval call binding the contract method 0x2dfdf0b5.
//
// Solidity: function depositCount() view returns(uint256)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Caller) DepositCount(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Polygonzkevmbridgel2.contract.Call(opts, &out, "depositCount")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// DepositCount is a free data retrieval call binding the contract method 0x2dfdf0b5.
//
// Solidity: function depositCount() view returns(uint256)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) DepositCount() (*big.Int, error) {
	return _Polygonzkevmbridgel2.Contract.DepositCount(&_Polygonzkevmbridgel2.CallOpts)
}

// DepositCount is a free data retrieval call binding the contract method 0x2dfdf0b5.
//
// Solidity: function depositCount() view returns(uint256)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerSession) DepositCount() (*big.Int, error) {
	return _Polygonzkevmbridgel2.Contract.DepositCount(&_Polygonzkevmbridgel2.CallOpts)
}

// GasTokenAddress is a free data retrieval call binding the contract method 0x3c351e10.
//
// Solidity: function gasTokenAddress() view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Caller) GasTokenAddress(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Polygonzkevmbridgel2.contract.Call(opts, &out, "gasTokenAddress")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GasTokenAddress is a free data retrieval call binding the contract method 0x3c351e10.
//
// Solidity: function gasTokenAddress() view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) GasTokenAddress() (common.Address, error) {
	return _Polygonzkevmbridgel2.Contract.GasTokenAddress(&_Polygonzkevmbridgel2.CallOpts)
}

// GasTokenAddress is a free data retrieval call binding the contract method 0x3c351e10.
//
// Solidity: function gasTokenAddress() view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerSession) GasTokenAddress() (common.Address, error) {
	return _Polygonzkevmbridgel2.Contract.GasTokenAddress(&_Polygonzkevmbridgel2.CallOpts)
}

// GasTokenNetwork is a free data retrieval call binding the contract method 0x3cbc795b.
//
// Solidity: function gasTokenNetwork() view returns(uint32)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Caller) GasTokenNetwork(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _Polygonzkevmbridgel2.contract.Call(opts, &out, "gasTokenNetwork")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// GasTokenNetwork is a free data retrieval call binding the contract method 0x3cbc795b.
//
// Solidity: function gasTokenNetwork() view returns(uint32)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) GasTokenNetwork() (uint32, error) {
	return _Polygonzkevmbridgel2.Contract.GasTokenNetwork(&_Polygonzkevmbridgel2.CallOpts)
}

// GasTokenNetwork is a free data retrieval call binding the contract method 0x3cbc795b.
//
// Solidity: function gasTokenNetwork() view returns(uint32)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerSession) GasTokenNetwork() (uint32, error) {
	return _Polygonzkevmbridgel2.Contract.GasTokenNetwork(&_Polygonzkevmbridgel2.CallOpts)
}

// GetDepositRoot is a free data retrieval call binding the contract method 0x3ae05047.
//
// Solidity: function getDepositRoot() view returns(bytes32)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Caller) GetDepositRoot(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Polygonzkevmbridgel2.contract.Call(opts, &out, "getDepositRoot")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetDepositRoot is a free data retrieval call binding the contract method 0x3ae05047.
//
// Solidity: function getDepositRoot() view returns(bytes32)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) GetDepositRoot() ([32]byte, error) {
	return _Polygonzkevmbridgel2.Contract.GetDepositRoot(&_Polygonzkevmbridgel2.CallOpts)
}

// GetDepositRoot is a free data retrieval call binding the contract method 0x3ae05047.
//
// Solidity: function getDepositRoot() view returns(bytes32)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerSession) GetDepositRoot() ([32]byte, error) {
	return _Polygonzkevmbridgel2.Contract.GetDepositRoot(&_Polygonzkevmbridgel2.CallOpts)
}

// GetLeafValue is a free data retrieval call binding the contract method 0x3e197043.
//
// Solidity: function getLeafValue(uint8 leafType, uint32 originNetwork, address originAddress, uint32 destinationNetwork, address destinationAddress, uint256 amount, bytes32 metadataHash) pure returns(bytes32)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Caller) GetLeafValue(opts *bind.CallOpts, leafType uint8, originNetwork uint32, originAddress common.Address, destinationNetwork uint32, destinationAddress common.Address, amount *big.Int, metadataHash [32]byte) ([32]byte, error) {
	var out []interface{}
	err := _Polygonzkevmbridgel2.contract.Call(opts, &out, "getLeafValue", leafType, originNetwork, originAddress, destinationNetwork, destinationAddress, amount, metadataHash)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetLeafValue is a free data retrieval call binding the contract method 0x3e197043.
//
// Solidity: function getLeafValue(uint8 leafType, uint32 originNetwork, address originAddress, uint32 destinationNetwork, address destinationAddress, uint256 amount, bytes32 metadataHash) pure returns(bytes32)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) GetLeafValue(leafType uint8, originNetwork uint32, originAddress common.Address, destinationNetwork uint32, destinationAddress common.Address, amount *big.Int, metadataHash [32]byte) ([32]byte, error) {
	return _Polygonzkevmbridgel2.Contract.GetLeafValue(&_Polygonzkevmbridgel2.CallOpts, leafType, originNetwork, originAddress, destinationNetwork, destinationAddress, amount, metadataHash)
}

// GetLeafValue is a free data retrieval call binding the contract method 0x3e197043.
//
// Solidity: function getLeafValue(uint8 leafType, uint32 originNetwork, address originAddress, uint32 destinationNetwork, address destinationAddress, uint256 amount, bytes32 metadataHash) pure returns(bytes32)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerSession) GetLeafValue(leafType uint8, originNetwork uint32, originAddress common.Address, destinationNetwork uint32, destinationAddress common.Address, amount *big.Int, metadataHash [32]byte) ([32]byte, error) {
	return _Polygonzkevmbridgel2.Contract.GetLeafValue(&_Polygonzkevmbridgel2.CallOpts, leafType, originNetwork, originAddress, destinationNetwork, destinationAddress, amount, metadataHash)
}

// GetTokenWrappedAddress is a free data retrieval call binding the contract method 0x22e95f2c.
//
// Solidity: function getTokenWrappedAddress(uint32 originNetwork, address originTokenAddress) view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Caller) GetTokenWrappedAddress(opts *bind.CallOpts, originNetwork uint32, originTokenAddress common.Address) (common.Address, error) {
	var out []interface{}
	err := _Polygonzkevmbridgel2.contract.Call(opts, &out, "getTokenWrappedAddress", originNetwork, originTokenAddress)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetTokenWrappedAddress is a free data retrieval call binding the contract method 0x22e95f2c.
//
// Solidity: function getTokenWrappedAddress(uint32 originNetwork, address originTokenAddress) view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) GetTokenWrappedAddress(originNetwork uint32, originTokenAddress common.Address) (common.Address, error) {
	return _Polygonzkevmbridgel2.Contract.GetTokenWrappedAddress(&_Polygonzkevmbridgel2.CallOpts, originNetwork, originTokenAddress)
}

// GetTokenWrappedAddress is a free data retrieval call binding the contract method 0x22e95f2c.
//
// Solidity: function getTokenWrappedAddress(uint32 originNetwork, address originTokenAddress) view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerSession) GetTokenWrappedAddress(originNetwork uint32, originTokenAddress common.Address) (common.Address, error) {
	return _Polygonzkevmbridgel2.Contract.GetTokenWrappedAddress(&_Polygonzkevmbridgel2.CallOpts, originNetwork, originTokenAddress)
}

// GlobalExitRootManager is a free data retrieval call binding the contract method 0xd02103ca.
//
// Solidity: function globalExitRootManager() view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Caller) GlobalExitRootManager(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Polygonzkevmbridgel2.contract.Call(opts, &out, "globalExitRootManager")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GlobalExitRootManager is a free data retrieval call binding the contract method 0xd02103ca.
//
// Solidity: function globalExitRootManager() view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) GlobalExitRootManager() (common.Address, error) {
	return _Polygonzkevmbridgel2.Contract.GlobalExitRootManager(&_Polygonzkevmbridgel2.CallOpts)
}

// GlobalExitRootManager is a free data retrieval call binding the contract method 0xd02103ca.
//
// Solidity: function globalExitRootManager() view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerSession) GlobalExitRootManager() (common.Address, error) {
	return _Polygonzkevmbridgel2.Contract.GlobalExitRootManager(&_Polygonzkevmbridgel2.CallOpts)
}

// IsAllL2TokensAllowed is a free data retrieval call binding the contract method 0x0ac1be43.
//
// Solidity: function isAllL2TokensAllowed() view returns(bool)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Caller) IsAllL2TokensAllowed(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _Polygonzkevmbridgel2.contract.Call(opts, &out, "isAllL2TokensAllowed")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsAllL2TokensAllowed is a free data retrieval call binding the contract method 0x0ac1be43.
//
// Solidity: function isAllL2TokensAllowed() view returns(bool)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) IsAllL2TokensAllowed() (bool, error) {
	return _Polygonzkevmbridgel2.Contract.IsAllL2TokensAllowed(&_Polygonzkevmbridgel2.CallOpts)
}

// IsAllL2TokensAllowed is a free data retrieval call binding the contract method 0x0ac1be43.
//
// Solidity: function isAllL2TokensAllowed() view returns(bool)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerSession) IsAllL2TokensAllowed() (bool, error) {
	return _Polygonzkevmbridgel2.Contract.IsAllL2TokensAllowed(&_Polygonzkevmbridgel2.CallOpts)
}

// IsClaimed is a free data retrieval call binding the contract method 0x9e34070f.
//
// Solidity: function isClaimed(uint256 index) view returns(bool)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Caller) IsClaimed(opts *bind.CallOpts, index *big.Int) (bool, error) {
	var out []interface{}
	err := _Polygonzkevmbridgel2.contract.Call(opts, &out, "isClaimed", index)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsClaimed is a free data retrieval call binding the contract method 0x9e34070f.
//
// Solidity: function isClaimed(uint256 index) view returns(bool)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) IsClaimed(index *big.Int) (bool, error) {
	return _Polygonzkevmbridgel2.Contract.IsClaimed(&_Polygonzkevmbridgel2.CallOpts, index)
}

// IsClaimed is a free data retrieval call binding the contract method 0x9e34070f.
//
// Solidity: function isClaimed(uint256 index) view returns(bool)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerSession) IsClaimed(index *big.Int) (bool, error) {
	return _Polygonzkevmbridgel2.Contract.IsClaimed(&_Polygonzkevmbridgel2.CallOpts, index)
}

// IsEmergencyState is a free data retrieval call binding the contract method 0x15064c96.
//
// Solidity: function isEmergencyState() view returns(bool)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Caller) IsEmergencyState(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _Polygonzkevmbridgel2.contract.Call(opts, &out, "isEmergencyState")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsEmergencyState is a free data retrieval call binding the contract method 0x15064c96.
//
// Solidity: function isEmergencyState() view returns(bool)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) IsEmergencyState() (bool, error) {
	return _Polygonzkevmbridgel2.Contract.IsEmergencyState(&_Polygonzkevmbridgel2.CallOpts)
}

// IsEmergencyState is a free data retrieval call binding the contract method 0x15064c96.
//
// Solidity: function isEmergencyState() view returns(bool)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerSession) IsEmergencyState() (bool, error) {
	return _Polygonzkevmbridgel2.Contract.IsEmergencyState(&_Polygonzkevmbridgel2.CallOpts)
}

// IsTokenAllowed is a free data retrieval call binding the contract method 0xf9eaee0d.
//
// Solidity: function isTokenAllowed(address ) view returns(bool)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Caller) IsTokenAllowed(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var out []interface{}
	err := _Polygonzkevmbridgel2.contract.Call(opts, &out, "isTokenAllowed", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsTokenAllowed is a free data retrieval call binding the contract method 0xf9eaee0d.
//
// Solidity: function isTokenAllowed(address ) view returns(bool)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) IsTokenAllowed(arg0 common.Address) (bool, error) {
	return _Polygonzkevmbridgel2.Contract.IsTokenAllowed(&_Polygonzkevmbridgel2.CallOpts, arg0)
}

// IsTokenAllowed is a free data retrieval call binding the contract method 0xf9eaee0d.
//
// Solidity: function isTokenAllowed(address ) view returns(bool)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerSession) IsTokenAllowed(arg0 common.Address) (bool, error) {
	return _Polygonzkevmbridgel2.Contract.IsTokenAllowed(&_Polygonzkevmbridgel2.CallOpts, arg0)
}

// LastUpdatedDepositCount is a free data retrieval call binding the contract method 0xbe5831c7.
//
// Solidity: function lastUpdatedDepositCount() view returns(uint32)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Caller) LastUpdatedDepositCount(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _Polygonzkevmbridgel2.contract.Call(opts, &out, "lastUpdatedDepositCount")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// LastUpdatedDepositCount is a free data retrieval call binding the contract method 0xbe5831c7.
//
// Solidity: function lastUpdatedDepositCount() view returns(uint32)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) LastUpdatedDepositCount() (uint32, error) {
	return _Polygonzkevmbridgel2.Contract.LastUpdatedDepositCount(&_Polygonzkevmbridgel2.CallOpts)
}

// LastUpdatedDepositCount is a free data retrieval call binding the contract method 0xbe5831c7.
//
// Solidity: function lastUpdatedDepositCount() view returns(uint32)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerSession) LastUpdatedDepositCount() (uint32, error) {
	return _Polygonzkevmbridgel2.Contract.LastUpdatedDepositCount(&_Polygonzkevmbridgel2.CallOpts)
}

// NetworkID is a free data retrieval call binding the contract method 0xbab161bf.
//
// Solidity: function networkID() view returns(uint32)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Caller) NetworkID(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _Polygonzkevmbridgel2.contract.Call(opts, &out, "networkID")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// NetworkID is a free data retrieval call binding the contract method 0xbab161bf.
//
// Solidity: function networkID() view returns(uint32)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) NetworkID() (uint32, error) {
	return _Polygonzkevmbridgel2.Contract.NetworkID(&_Polygonzkevmbridgel2.CallOpts)
}

// NetworkID is a free data retrieval call binding the contract method 0xbab161bf.
//
// Solidity: function networkID() view returns(uint32)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerSession) NetworkID() (uint32, error) {
	return _Polygonzkevmbridgel2.Contract.NetworkID(&_Polygonzkevmbridgel2.CallOpts)
}

// PolygonZkEVMaddress is a free data retrieval call binding the contract method 0x34ac9cf2.
//
// Solidity: function polygonZkEVMaddress() view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Caller) PolygonZkEVMaddress(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Polygonzkevmbridgel2.contract.Call(opts, &out, "polygonZkEVMaddress")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PolygonZkEVMaddress is a free data retrieval call binding the contract method 0x34ac9cf2.
//
// Solidity: function polygonZkEVMaddress() view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) PolygonZkEVMaddress() (common.Address, error) {
	return _Polygonzkevmbridgel2.Contract.PolygonZkEVMaddress(&_Polygonzkevmbridgel2.CallOpts)
}

// PolygonZkEVMaddress is a free data retrieval call binding the contract method 0x34ac9cf2.
//
// Solidity: function polygonZkEVMaddress() view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerSession) PolygonZkEVMaddress() (common.Address, error) {
	return _Polygonzkevmbridgel2.Contract.PolygonZkEVMaddress(&_Polygonzkevmbridgel2.CallOpts)
}

// PrecalculatedWrapperAddress is a free data retrieval call binding the contract method 0xaaa13cc2.
//
// Solidity: function precalculatedWrapperAddress(uint32 originNetwork, address originTokenAddress, string name, string symbol, uint8 decimals) view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Caller) PrecalculatedWrapperAddress(opts *bind.CallOpts, originNetwork uint32, originTokenAddress common.Address, name string, symbol string, decimals uint8) (common.Address, error) {
	var out []interface{}
	err := _Polygonzkevmbridgel2.contract.Call(opts, &out, "precalculatedWrapperAddress", originNetwork, originTokenAddress, name, symbol, decimals)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PrecalculatedWrapperAddress is a free data retrieval call binding the contract method 0xaaa13cc2.
//
// Solidity: function precalculatedWrapperAddress(uint32 originNetwork, address originTokenAddress, string name, string symbol, uint8 decimals) view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) PrecalculatedWrapperAddress(originNetwork uint32, originTokenAddress common.Address, name string, symbol string, decimals uint8) (common.Address, error) {
	return _Polygonzkevmbridgel2.Contract.PrecalculatedWrapperAddress(&_Polygonzkevmbridgel2.CallOpts, originNetwork, originTokenAddress, name, symbol, decimals)
}

// PrecalculatedWrapperAddress is a free data retrieval call binding the contract method 0xaaa13cc2.
//
// Solidity: function precalculatedWrapperAddress(uint32 originNetwork, address originTokenAddress, string name, string symbol, uint8 decimals) view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerSession) PrecalculatedWrapperAddress(originNetwork uint32, originTokenAddress common.Address, name string, symbol string, decimals uint8) (common.Address, error) {
	return _Polygonzkevmbridgel2.Contract.PrecalculatedWrapperAddress(&_Polygonzkevmbridgel2.CallOpts, originNetwork, originTokenAddress, name, symbol, decimals)
}

// TokenInfoToWrappedToken is a free data retrieval call binding the contract method 0x81b1c174.
//
// Solidity: function tokenInfoToWrappedToken(bytes32 ) view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Caller) TokenInfoToWrappedToken(opts *bind.CallOpts, arg0 [32]byte) (common.Address, error) {
	var out []interface{}
	err := _Polygonzkevmbridgel2.contract.Call(opts, &out, "tokenInfoToWrappedToken", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TokenInfoToWrappedToken is a free data retrieval call binding the contract method 0x81b1c174.
//
// Solidity: function tokenInfoToWrappedToken(bytes32 ) view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) TokenInfoToWrappedToken(arg0 [32]byte) (common.Address, error) {
	return _Polygonzkevmbridgel2.Contract.TokenInfoToWrappedToken(&_Polygonzkevmbridgel2.CallOpts, arg0)
}

// TokenInfoToWrappedToken is a free data retrieval call binding the contract method 0x81b1c174.
//
// Solidity: function tokenInfoToWrappedToken(bytes32 ) view returns(address)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerSession) TokenInfoToWrappedToken(arg0 [32]byte) (common.Address, error) {
	return _Polygonzkevmbridgel2.Contract.TokenInfoToWrappedToken(&_Polygonzkevmbridgel2.CallOpts, arg0)
}

// VerifyMerkleProof is a free data retrieval call binding the contract method 0xfb570834.
//
// Solidity: function verifyMerkleProof(bytes32 leafHash, bytes32[32] smtProof, uint32 index, bytes32 root) pure returns(bool)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Caller) VerifyMerkleProof(opts *bind.CallOpts, leafHash [32]byte, smtProof [32][32]byte, index uint32, root [32]byte) (bool, error) {
	var out []interface{}
	err := _Polygonzkevmbridgel2.contract.Call(opts, &out, "verifyMerkleProof", leafHash, smtProof, index, root)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// VerifyMerkleProof is a free data retrieval call binding the contract method 0xfb570834.
//
// Solidity: function verifyMerkleProof(bytes32 leafHash, bytes32[32] smtProof, uint32 index, bytes32 root) pure returns(bool)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) VerifyMerkleProof(leafHash [32]byte, smtProof [32][32]byte, index uint32, root [32]byte) (bool, error) {
	return _Polygonzkevmbridgel2.Contract.VerifyMerkleProof(&_Polygonzkevmbridgel2.CallOpts, leafHash, smtProof, index, root)
}

// VerifyMerkleProof is a free data retrieval call binding the contract method 0xfb570834.
//
// Solidity: function verifyMerkleProof(bytes32 leafHash, bytes32[32] smtProof, uint32 index, bytes32 root) pure returns(bool)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerSession) VerifyMerkleProof(leafHash [32]byte, smtProof [32][32]byte, index uint32, root [32]byte) (bool, error) {
	return _Polygonzkevmbridgel2.Contract.VerifyMerkleProof(&_Polygonzkevmbridgel2.CallOpts, leafHash, smtProof, index, root)
}

// WrappedTokenToTokenInfo is a free data retrieval call binding the contract method 0x318aee3d.
//
// Solidity: function wrappedTokenToTokenInfo(address ) view returns(uint32 originNetwork, address originTokenAddress)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Caller) WrappedTokenToTokenInfo(opts *bind.CallOpts, arg0 common.Address) (struct {
	OriginNetwork      uint32
	OriginTokenAddress common.Address
}, error) {
	var out []interface{}
	err := _Polygonzkevmbridgel2.contract.Call(opts, &out, "wrappedTokenToTokenInfo", arg0)

	outstruct := new(struct {
		OriginNetwork      uint32
		OriginTokenAddress common.Address
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.OriginNetwork = *abi.ConvertType(out[0], new(uint32)).(*uint32)
	outstruct.OriginTokenAddress = *abi.ConvertType(out[1], new(common.Address)).(*common.Address)

	return *outstruct, err

}

// WrappedTokenToTokenInfo is a free data retrieval call binding the contract method 0x318aee3d.
//
// Solidity: function wrappedTokenToTokenInfo(address ) view returns(uint32 originNetwork, address originTokenAddress)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) WrappedTokenToTokenInfo(arg0 common.Address) (struct {
	OriginNetwork      uint32
	OriginTokenAddress common.Address
}, error) {
	return _Polygonzkevmbridgel2.Contract.WrappedTokenToTokenInfo(&_Polygonzkevmbridgel2.CallOpts, arg0)
}

// WrappedTokenToTokenInfo is a free data retrieval call binding the contract method 0x318aee3d.
//
// Solidity: function wrappedTokenToTokenInfo(address ) view returns(uint32 originNetwork, address originTokenAddress)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2CallerSession) WrappedTokenToTokenInfo(arg0 common.Address) (struct {
	OriginNetwork      uint32
	OriginTokenAddress common.Address
}, error) {
	return _Polygonzkevmbridgel2.Contract.WrappedTokenToTokenInfo(&_Polygonzkevmbridgel2.CallOpts, arg0)
}

// ActivateEmergencyState is a paid mutator transaction binding the contract method 0x2072f6c5.
//
// Solidity: function activateEmergencyState() returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Transactor) ActivateEmergencyState(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.contract.Transact(opts, "activateEmergencyState")
}

// ActivateEmergencyState is a paid mutator transaction binding the contract method 0x2072f6c5.
//
// Solidity: function activateEmergencyState() returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) ActivateEmergencyState() (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.ActivateEmergencyState(&_Polygonzkevmbridgel2.TransactOpts)
}

// ActivateEmergencyState is a paid mutator transaction binding the contract method 0x2072f6c5.
//
// Solidity: function activateEmergencyState() returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2TransactorSession) ActivateEmergencyState() (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.ActivateEmergencyState(&_Polygonzkevmbridgel2.TransactOpts)
}

// BridgeAsset is a paid mutator transaction binding the contract method 0xcd586579.
//
// Solidity: function bridgeAsset(uint32 destinationNetwork, address destinationAddress, uint256 amount, address token, bool forceUpdateGlobalExitRoot, bytes permitData) payable returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Transactor) BridgeAsset(opts *bind.TransactOpts, destinationNetwork uint32, destinationAddress common.Address, amount *big.Int, token common.Address, forceUpdateGlobalExitRoot bool, permitData []byte) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.contract.Transact(opts, "bridgeAsset", destinationNetwork, destinationAddress, amount, token, forceUpdateGlobalExitRoot, permitData)
}

// BridgeAsset is a paid mutator transaction binding the contract method 0xcd586579.
//
// Solidity: function bridgeAsset(uint32 destinationNetwork, address destinationAddress, uint256 amount, address token, bool forceUpdateGlobalExitRoot, bytes permitData) payable returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) BridgeAsset(destinationNetwork uint32, destinationAddress common.Address, amount *big.Int, token common.Address, forceUpdateGlobalExitRoot bool, permitData []byte) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.BridgeAsset(&_Polygonzkevmbridgel2.TransactOpts, destinationNetwork, destinationAddress, amount, token, forceUpdateGlobalExitRoot, permitData)
}

// BridgeAsset is a paid mutator transaction binding the contract method 0xcd586579.
//
// Solidity: function bridgeAsset(uint32 destinationNetwork, address destinationAddress, uint256 amount, address token, bool forceUpdateGlobalExitRoot, bytes permitData) payable returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2TransactorSession) BridgeAsset(destinationNetwork uint32, destinationAddress common.Address, amount *big.Int, token common.Address, forceUpdateGlobalExitRoot bool, permitData []byte) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.BridgeAsset(&_Polygonzkevmbridgel2.TransactOpts, destinationNetwork, destinationAddress, amount, token, forceUpdateGlobalExitRoot, permitData)
}

// BridgeMessage is a paid mutator transaction binding the contract method 0xb2169f2c.
//
// Solidity: function bridgeMessage(uint32 destinationNetwork, address destinationAddress, uint256 amountWETH, bool forceUpdateGlobalExitRoot, bytes metadata) payable returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Transactor) BridgeMessage(opts *bind.TransactOpts, destinationNetwork uint32, destinationAddress common.Address, amountWETH *big.Int, forceUpdateGlobalExitRoot bool, metadata []byte) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.contract.Transact(opts, "bridgeMessage", destinationNetwork, destinationAddress, amountWETH, forceUpdateGlobalExitRoot, metadata)
}

// BridgeMessage is a paid mutator transaction binding the contract method 0xb2169f2c.
//
// Solidity: function bridgeMessage(uint32 destinationNetwork, address destinationAddress, uint256 amountWETH, bool forceUpdateGlobalExitRoot, bytes metadata) payable returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) BridgeMessage(destinationNetwork uint32, destinationAddress common.Address, amountWETH *big.Int, forceUpdateGlobalExitRoot bool, metadata []byte) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.BridgeMessage(&_Polygonzkevmbridgel2.TransactOpts, destinationNetwork, destinationAddress, amountWETH, forceUpdateGlobalExitRoot, metadata)
}

// BridgeMessage is a paid mutator transaction binding the contract method 0xb2169f2c.
//
// Solidity: function bridgeMessage(uint32 destinationNetwork, address destinationAddress, uint256 amountWETH, bool forceUpdateGlobalExitRoot, bytes metadata) payable returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2TransactorSession) BridgeMessage(destinationNetwork uint32, destinationAddress common.Address, amountWETH *big.Int, forceUpdateGlobalExitRoot bool, metadata []byte) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.BridgeMessage(&_Polygonzkevmbridgel2.TransactOpts, destinationNetwork, destinationAddress, amountWETH, forceUpdateGlobalExitRoot, metadata)
}

// ClaimAsset is a paid mutator transaction binding the contract method 0x2cffd02e.
//
// Solidity: function claimAsset(bytes32[32] smtProof, uint32 index, bytes32 mainnetExitRoot, bytes32 rollupExitRoot, uint32 originNetwork, address originTokenAddress, uint32 destinationNetwork, address destinationAddress, uint256 amount, bytes metadata) returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Transactor) ClaimAsset(opts *bind.TransactOpts, smtProof [32][32]byte, index uint32, mainnetExitRoot [32]byte, rollupExitRoot [32]byte, originNetwork uint32, originTokenAddress common.Address, destinationNetwork uint32, destinationAddress common.Address, amount *big.Int, metadata []byte) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.contract.Transact(opts, "claimAsset", smtProof, index, mainnetExitRoot, rollupExitRoot, originNetwork, originTokenAddress, destinationNetwork, destinationAddress, amount, metadata)
}

// ClaimAsset is a paid mutator transaction binding the contract method 0x2cffd02e.
//
// Solidity: function claimAsset(bytes32[32] smtProof, uint32 index, bytes32 mainnetExitRoot, bytes32 rollupExitRoot, uint32 originNetwork, address originTokenAddress, uint32 destinationNetwork, address destinationAddress, uint256 amount, bytes metadata) returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) ClaimAsset(smtProof [32][32]byte, index uint32, mainnetExitRoot [32]byte, rollupExitRoot [32]byte, originNetwork uint32, originTokenAddress common.Address, destinationNetwork uint32, destinationAddress common.Address, amount *big.Int, metadata []byte) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.ClaimAsset(&_Polygonzkevmbridgel2.TransactOpts, smtProof, index, mainnetExitRoot, rollupExitRoot, originNetwork, originTokenAddress, destinationNetwork, destinationAddress, amount, metadata)
}

// ClaimAsset is a paid mutator transaction binding the contract method 0x2cffd02e.
//
// Solidity: function claimAsset(bytes32[32] smtProof, uint32 index, bytes32 mainnetExitRoot, bytes32 rollupExitRoot, uint32 originNetwork, address originTokenAddress, uint32 destinationNetwork, address destinationAddress, uint256 amount, bytes metadata) returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2TransactorSession) ClaimAsset(smtProof [32][32]byte, index uint32, mainnetExitRoot [32]byte, rollupExitRoot [32]byte, originNetwork uint32, originTokenAddress common.Address, destinationNetwork uint32, destinationAddress common.Address, amount *big.Int, metadata []byte) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.ClaimAsset(&_Polygonzkevmbridgel2.TransactOpts, smtProof, index, mainnetExitRoot, rollupExitRoot, originNetwork, originTokenAddress, destinationNetwork, destinationAddress, amount, metadata)
}

// ClaimMessage is a paid mutator transaction binding the contract method 0x2d2c9d94.
//
// Solidity: function claimMessage(bytes32[32] smtProof, uint32 index, bytes32 mainnetExitRoot, bytes32 rollupExitRoot, uint32 originNetwork, address originAddress, uint32 destinationNetwork, address destinationAddress, uint256 amount, bytes metadata) returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Transactor) ClaimMessage(opts *bind.TransactOpts, smtProof [32][32]byte, index uint32, mainnetExitRoot [32]byte, rollupExitRoot [32]byte, originNetwork uint32, originAddress common.Address, destinationNetwork uint32, destinationAddress common.Address, amount *big.Int, metadata []byte) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.contract.Transact(opts, "claimMessage", smtProof, index, mainnetExitRoot, rollupExitRoot, originNetwork, originAddress, destinationNetwork, destinationAddress, amount, metadata)
}

// ClaimMessage is a paid mutator transaction binding the contract method 0x2d2c9d94.
//
// Solidity: function claimMessage(bytes32[32] smtProof, uint32 index, bytes32 mainnetExitRoot, bytes32 rollupExitRoot, uint32 originNetwork, address originAddress, uint32 destinationNetwork, address destinationAddress, uint256 amount, bytes metadata) returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) ClaimMessage(smtProof [32][32]byte, index uint32, mainnetExitRoot [32]byte, rollupExitRoot [32]byte, originNetwork uint32, originAddress common.Address, destinationNetwork uint32, destinationAddress common.Address, amount *big.Int, metadata []byte) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.ClaimMessage(&_Polygonzkevmbridgel2.TransactOpts, smtProof, index, mainnetExitRoot, rollupExitRoot, originNetwork, originAddress, destinationNetwork, destinationAddress, amount, metadata)
}

// ClaimMessage is a paid mutator transaction binding the contract method 0x2d2c9d94.
//
// Solidity: function claimMessage(bytes32[32] smtProof, uint32 index, bytes32 mainnetExitRoot, bytes32 rollupExitRoot, uint32 originNetwork, address originAddress, uint32 destinationNetwork, address destinationAddress, uint256 amount, bytes metadata) returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2TransactorSession) ClaimMessage(smtProof [32][32]byte, index uint32, mainnetExitRoot [32]byte, rollupExitRoot [32]byte, originNetwork uint32, originAddress common.Address, destinationNetwork uint32, destinationAddress common.Address, amount *big.Int, metadata []byte) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.ClaimMessage(&_Polygonzkevmbridgel2.TransactOpts, smtProof, index, mainnetExitRoot, rollupExitRoot, originNetwork, originAddress, destinationNetwork, destinationAddress, amount, metadata)
}

// DeactivateEmergencyState is a paid mutator transaction binding the contract method 0xdbc16976.
//
// Solidity: function deactivateEmergencyState() returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Transactor) DeactivateEmergencyState(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.contract.Transact(opts, "deactivateEmergencyState")
}

// DeactivateEmergencyState is a paid mutator transaction binding the contract method 0xdbc16976.
//
// Solidity: function deactivateEmergencyState() returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) DeactivateEmergencyState() (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.DeactivateEmergencyState(&_Polygonzkevmbridgel2.TransactOpts)
}

// DeactivateEmergencyState is a paid mutator transaction binding the contract method 0xdbc16976.
//
// Solidity: function deactivateEmergencyState() returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2TransactorSession) DeactivateEmergencyState() (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.DeactivateEmergencyState(&_Polygonzkevmbridgel2.TransactOpts)
}

// Initialize is a paid mutator transaction binding the contract method 0x2cc9f163.
//
// Solidity: function initialize(uint32 _networkID, address _globalExitRootManager, address _polygonZkEVMaddress, address _gasTokenAddress, uint32 _gasTokenNetwork, address _WETHToken) returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Transactor) Initialize(opts *bind.TransactOpts, _networkID uint32, _globalExitRootManager common.Address, _polygonZkEVMaddress common.Address, _gasTokenAddress common.Address, _gasTokenNetwork uint32, _WETHToken common.Address) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.contract.Transact(opts, "initialize", _networkID, _globalExitRootManager, _polygonZkEVMaddress, _gasTokenAddress, _gasTokenNetwork, _WETHToken)
}

// Initialize is a paid mutator transaction binding the contract method 0x2cc9f163.
//
// Solidity: function initialize(uint32 _networkID, address _globalExitRootManager, address _polygonZkEVMaddress, address _gasTokenAddress, uint32 _gasTokenNetwork, address _WETHToken) returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) Initialize(_networkID uint32, _globalExitRootManager common.Address, _polygonZkEVMaddress common.Address, _gasTokenAddress common.Address, _gasTokenNetwork uint32, _WETHToken common.Address) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.Initialize(&_Polygonzkevmbridgel2.TransactOpts, _networkID, _globalExitRootManager, _polygonZkEVMaddress, _gasTokenAddress, _gasTokenNetwork, _WETHToken)
}

// Initialize is a paid mutator transaction binding the contract method 0x2cc9f163.
//
// Solidity: function initialize(uint32 _networkID, address _globalExitRootManager, address _polygonZkEVMaddress, address _gasTokenAddress, uint32 _gasTokenNetwork, address _WETHToken) returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2TransactorSession) Initialize(_networkID uint32, _globalExitRootManager common.Address, _polygonZkEVMaddress common.Address, _gasTokenAddress common.Address, _gasTokenNetwork uint32, _WETHToken common.Address) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.Initialize(&_Polygonzkevmbridgel2.TransactOpts, _networkID, _globalExitRootManager, _polygonZkEVMaddress, _gasTokenAddress, _gasTokenNetwork, _WETHToken)
}

// SetAllL2TokensAllowed is a paid mutator transaction binding the contract method 0x3797306a.
//
// Solidity: function setAllL2TokensAllowed(bool allowed) returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Transactor) SetAllL2TokensAllowed(opts *bind.TransactOpts, allowed bool) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.contract.Transact(opts, "setAllL2TokensAllowed", allowed)
}

// SetAllL2TokensAllowed is a paid mutator transaction binding the contract method 0x3797306a.
//
// Solidity: function setAllL2TokensAllowed(bool allowed) returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) SetAllL2TokensAllowed(allowed bool) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.SetAllL2TokensAllowed(&_Polygonzkevmbridgel2.TransactOpts, allowed)
}

// SetAllL2TokensAllowed is a paid mutator transaction binding the contract method 0x3797306a.
//
// Solidity: function setAllL2TokensAllowed(bool allowed) returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2TransactorSession) SetAllL2TokensAllowed(allowed bool) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.SetAllL2TokensAllowed(&_Polygonzkevmbridgel2.TransactOpts, allowed)
}

// SetL2TokenBridgePermission is a paid mutator transaction binding the contract method 0xdd51f5c1.
//
// Solidity: function setL2TokenBridgePermission(address token, bool allowed) returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Transactor) SetL2TokenBridgePermission(opts *bind.TransactOpts, token common.Address, allowed bool) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.contract.Transact(opts, "setL2TokenBridgePermission", token, allowed)
}

// SetL2TokenBridgePermission is a paid mutator transaction binding the contract method 0xdd51f5c1.
//
// Solidity: function setL2TokenBridgePermission(address token, bool allowed) returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) SetL2TokenBridgePermission(token common.Address, allowed bool) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.SetL2TokenBridgePermission(&_Polygonzkevmbridgel2.TransactOpts, token, allowed)
}

// SetL2TokenBridgePermission is a paid mutator transaction binding the contract method 0xdd51f5c1.
//
// Solidity: function setL2TokenBridgePermission(address token, bool allowed) returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2TransactorSession) SetL2TokenBridgePermission(token common.Address, allowed bool) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.SetL2TokenBridgePermission(&_Polygonzkevmbridgel2.TransactOpts, token, allowed)
}

// UpdateGlobalExitRoot is a paid mutator transaction binding the contract method 0x79e2cf97.
//
// Solidity: function updateGlobalExitRoot() returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Transactor) UpdateGlobalExitRoot(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.contract.Transact(opts, "updateGlobalExitRoot")
}

// UpdateGlobalExitRoot is a paid mutator transaction binding the contract method 0x79e2cf97.
//
// Solidity: function updateGlobalExitRoot() returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Session) UpdateGlobalExitRoot() (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.UpdateGlobalExitRoot(&_Polygonzkevmbridgel2.TransactOpts)
}

// UpdateGlobalExitRoot is a paid mutator transaction binding the contract method 0x79e2cf97.
//
// Solidity: function updateGlobalExitRoot() returns()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2TransactorSession) UpdateGlobalExitRoot() (*types.Transaction, error) {
	return _Polygonzkevmbridgel2.Contract.UpdateGlobalExitRoot(&_Polygonzkevmbridgel2.TransactOpts)
}

// Polygonzkevmbridgel2AllL2TokensPermissionSetIterator is returned from FilterAllL2TokensPermissionSet and is used to iterate over the raw logs and unpacked data for AllL2TokensPermissionSet events raised by the Polygonzkevmbridgel2 contract.
type Polygonzkevmbridgel2AllL2TokensPermissionSetIterator struct {
	Event *Polygonzkevmbridgel2AllL2TokensPermissionSet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *Polygonzkevmbridgel2AllL2TokensPermissionSetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(Polygonzkevmbridgel2AllL2TokensPermissionSet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(Polygonzkevmbridgel2AllL2TokensPermissionSet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *Polygonzkevmbridgel2AllL2TokensPermissionSetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *Polygonzkevmbridgel2AllL2TokensPermissionSetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// Polygonzkevmbridgel2AllL2TokensPermissionSet represents a AllL2TokensPermissionSet event raised by the Polygonzkevmbridgel2 contract.
type Polygonzkevmbridgel2AllL2TokensPermissionSet struct {
	Allowed bool
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterAllL2TokensPermissionSet is a free log retrieval operation binding the contract event 0x11c1c68b4bf6f68350aa1983fe17ee1d005a7189994475ddbc4b9fc4e4ef02b8.
//
// Solidity: event AllL2TokensPermissionSet(bool allowed)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) FilterAllL2TokensPermissionSet(opts *bind.FilterOpts) (*Polygonzkevmbridgel2AllL2TokensPermissionSetIterator, error) {

	logs, sub, err := _Polygonzkevmbridgel2.contract.FilterLogs(opts, "AllL2TokensPermissionSet")
	if err != nil {
		return nil, err
	}
	return &Polygonzkevmbridgel2AllL2TokensPermissionSetIterator{contract: _Polygonzkevmbridgel2.contract, event: "AllL2TokensPermissionSet", logs: logs, sub: sub}, nil
}

// WatchAllL2TokensPermissionSet is a free log subscription operation binding the contract event 0x11c1c68b4bf6f68350aa1983fe17ee1d005a7189994475ddbc4b9fc4e4ef02b8.
//
// Solidity: event AllL2TokensPermissionSet(bool allowed)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) WatchAllL2TokensPermissionSet(opts *bind.WatchOpts, sink chan<- *Polygonzkevmbridgel2AllL2TokensPermissionSet) (event.Subscription, error) {

	logs, sub, err := _Polygonzkevmbridgel2.contract.WatchLogs(opts, "AllL2TokensPermissionSet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(Polygonzkevmbridgel2AllL2TokensPermissionSet)
				if err := _Polygonzkevmbridgel2.contract.UnpackLog(event, "AllL2TokensPermissionSet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAllL2TokensPermissionSet is a log parse operation binding the contract event 0x11c1c68b4bf6f68350aa1983fe17ee1d005a7189994475ddbc4b9fc4e4ef02b8.
//
// Solidity: event AllL2TokensPermissionSet(bool allowed)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) ParseAllL2TokensPermissionSet(log types.Log) (*Polygonzkevmbridgel2AllL2TokensPermissionSet, error) {
	event := new(Polygonzkevmbridgel2AllL2TokensPermissionSet)
	if err := _Polygonzkevmbridgel2.contract.UnpackLog(event, "AllL2TokensPermissionSet", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// Polygonzkevmbridgel2BridgeEventIterator is returned from FilterBridgeEvent and is used to iterate over the raw logs and unpacked data for BridgeEvent events raised by the Polygonzkevmbridgel2 contract.
type Polygonzkevmbridgel2BridgeEventIterator struct {
	Event *Polygonzkevmbridgel2BridgeEvent // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *Polygonzkevmbridgel2BridgeEventIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(Polygonzkevmbridgel2BridgeEvent)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(Polygonzkevmbridgel2BridgeEvent)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *Polygonzkevmbridgel2BridgeEventIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *Polygonzkevmbridgel2BridgeEventIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// Polygonzkevmbridgel2BridgeEvent represents a BridgeEvent event raised by the Polygonzkevmbridgel2 contract.
type Polygonzkevmbridgel2BridgeEvent struct {
	LeafType           uint8
	OriginNetwork      uint32
	OriginAddress      common.Address
	DestinationNetwork uint32
	DestinationAddress common.Address
	Amount             *big.Int
	Metadata           []byte
	DepositCount       uint32
	Raw                types.Log // Blockchain specific contextual infos
}

// FilterBridgeEvent is a free log retrieval operation binding the contract event 0x501781209a1f8899323b96b4ef08b168df93e0a90c673d1e4cce39366cb62f9b.
//
// Solidity: event BridgeEvent(uint8 leafType, uint32 originNetwork, address originAddress, uint32 destinationNetwork, address destinationAddress, uint256 amount, bytes metadata, uint32 depositCount)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) FilterBridgeEvent(opts *bind.FilterOpts) (*Polygonzkevmbridgel2BridgeEventIterator, error) {

	logs, sub, err := _Polygonzkevmbridgel2.contract.FilterLogs(opts, "BridgeEvent")
	if err != nil {
		return nil, err
	}
	return &Polygonzkevmbridgel2BridgeEventIterator{contract: _Polygonzkevmbridgel2.contract, event: "BridgeEvent", logs: logs, sub: sub}, nil
}

// WatchBridgeEvent is a free log subscription operation binding the contract event 0x501781209a1f8899323b96b4ef08b168df93e0a90c673d1e4cce39366cb62f9b.
//
// Solidity: event BridgeEvent(uint8 leafType, uint32 originNetwork, address originAddress, uint32 destinationNetwork, address destinationAddress, uint256 amount, bytes metadata, uint32 depositCount)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) WatchBridgeEvent(opts *bind.WatchOpts, sink chan<- *Polygonzkevmbridgel2BridgeEvent) (event.Subscription, error) {

	logs, sub, err := _Polygonzkevmbridgel2.contract.WatchLogs(opts, "BridgeEvent")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(Polygonzkevmbridgel2BridgeEvent)
				if err := _Polygonzkevmbridgel2.contract.UnpackLog(event, "BridgeEvent", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBridgeEvent is a log parse operation binding the contract event 0x501781209a1f8899323b96b4ef08b168df93e0a90c673d1e4cce39366cb62f9b.
//
// Solidity: event BridgeEvent(uint8 leafType, uint32 originNetwork, address originAddress, uint32 destinationNetwork, address destinationAddress, uint256 amount, bytes metadata, uint32 depositCount)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) ParseBridgeEvent(log types.Log) (*Polygonzkevmbridgel2BridgeEvent, error) {
	event := new(Polygonzkevmbridgel2BridgeEvent)
	if err := _Polygonzkevmbridgel2.contract.UnpackLog(event, "BridgeEvent", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// Polygonzkevmbridgel2ClaimEventIterator is returned from FilterClaimEvent and is used to iterate over the raw logs and unpacked data for ClaimEvent events raised by the Polygonzkevmbridgel2 contract.
type Polygonzkevmbridgel2ClaimEventIterator struct {
	Event *Polygonzkevmbridgel2ClaimEvent // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *Polygonzkevmbridgel2ClaimEventIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(Polygonzkevmbridgel2ClaimEvent)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(Polygonzkevmbridgel2ClaimEvent)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *Polygonzkevmbridgel2ClaimEventIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *Polygonzkevmbridgel2ClaimEventIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// Polygonzkevmbridgel2ClaimEvent represents a ClaimEvent event raised by the Polygonzkevmbridgel2 contract.
type Polygonzkevmbridgel2ClaimEvent struct {
	Index              uint32
	OriginNetwork      uint32
	OriginAddress      common.Address
	DestinationAddress common.Address
	Amount             *big.Int
	Raw                types.Log // Blockchain specific contextual infos
}

// FilterClaimEvent is a free log retrieval operation binding the contract event 0x25308c93ceeed162da955b3f7ce3e3f93606579e40fb92029faa9efe27545983.
//
// Solidity: event ClaimEvent(uint32 index, uint32 originNetwork, address originAddress, address destinationAddress, uint256 amount)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) FilterClaimEvent(opts *bind.FilterOpts) (*Polygonzkevmbridgel2ClaimEventIterator, error) {

	logs, sub, err := _Polygonzkevmbridgel2.contract.FilterLogs(opts, "ClaimEvent")
	if err != nil {
		return nil, err
	}
	return &Polygonzkevmbridgel2ClaimEventIterator{contract: _Polygonzkevmbridgel2.contract, event: "ClaimEvent", logs: logs, sub: sub}, nil
}

// WatchClaimEvent is a free log subscription operation binding the contract event 0x25308c93ceeed162da955b3f7ce3e3f93606579e40fb92029faa9efe27545983.
//
// Solidity: event ClaimEvent(uint32 index, uint32 originNetwork, address originAddress, address destinationAddress, uint256 amount)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) WatchClaimEvent(opts *bind.WatchOpts, sink chan<- *Polygonzkevmbridgel2ClaimEvent) (event.Subscription, error) {

	logs, sub, err := _Polygonzkevmbridgel2.contract.WatchLogs(opts, "ClaimEvent")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(Polygonzkevmbridgel2ClaimEvent)
				if err := _Polygonzkevmbridgel2.contract.UnpackLog(event, "ClaimEvent", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseClaimEvent is a log parse operation binding the contract event 0x25308c93ceeed162da955b3f7ce3e3f93606579e40fb92029faa9efe27545983.
//
// Solidity: event ClaimEvent(uint32 index, uint32 originNetwork, address originAddress, address destinationAddress, uint256 amount)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) ParseClaimEvent(log types.Log) (*Polygonzkevmbridgel2ClaimEvent, error) {
	event := new(Polygonzkevmbridgel2ClaimEvent)
	if err := _Polygonzkevmbridgel2.contract.UnpackLog(event, "ClaimEvent", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// Polygonzkevmbridgel2EmergencyStateActivatedIterator is returned from FilterEmergencyStateActivated and is used to iterate over the raw logs and unpacked data for EmergencyStateActivated events raised by the Polygonzkevmbridgel2 contract.
type Polygonzkevmbridgel2EmergencyStateActivatedIterator struct {
	Event *Polygonzkevmbridgel2EmergencyStateActivated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *Polygonzkevmbridgel2EmergencyStateActivatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(Polygonzkevmbridgel2EmergencyStateActivated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(Polygonzkevmbridgel2EmergencyStateActivated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *Polygonzkevmbridgel2EmergencyStateActivatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *Polygonzkevmbridgel2EmergencyStateActivatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// Polygonzkevmbridgel2EmergencyStateActivated represents a EmergencyStateActivated event raised by the Polygonzkevmbridgel2 contract.
type Polygonzkevmbridgel2EmergencyStateActivated struct {
	Raw types.Log // Blockchain specific contextual infos
}

// FilterEmergencyStateActivated is a free log retrieval operation binding the contract event 0x2261efe5aef6fedc1fd1550b25facc9181745623049c7901287030b9ad1a5497.
//
// Solidity: event EmergencyStateActivated()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) FilterEmergencyStateActivated(opts *bind.FilterOpts) (*Polygonzkevmbridgel2EmergencyStateActivatedIterator, error) {

	logs, sub, err := _Polygonzkevmbridgel2.contract.FilterLogs(opts, "EmergencyStateActivated")
	if err != nil {
		return nil, err
	}
	return &Polygonzkevmbridgel2EmergencyStateActivatedIterator{contract: _Polygonzkevmbridgel2.contract, event: "EmergencyStateActivated", logs: logs, sub: sub}, nil
}

// WatchEmergencyStateActivated is a free log subscription operation binding the contract event 0x2261efe5aef6fedc1fd1550b25facc9181745623049c7901287030b9ad1a5497.
//
// Solidity: event EmergencyStateActivated()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) WatchEmergencyStateActivated(opts *bind.WatchOpts, sink chan<- *Polygonzkevmbridgel2EmergencyStateActivated) (event.Subscription, error) {

	logs, sub, err := _Polygonzkevmbridgel2.contract.WatchLogs(opts, "EmergencyStateActivated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(Polygonzkevmbridgel2EmergencyStateActivated)
				if err := _Polygonzkevmbridgel2.contract.UnpackLog(event, "EmergencyStateActivated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseEmergencyStateActivated is a log parse operation binding the contract event 0x2261efe5aef6fedc1fd1550b25facc9181745623049c7901287030b9ad1a5497.
//
// Solidity: event EmergencyStateActivated()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) ParseEmergencyStateActivated(log types.Log) (*Polygonzkevmbridgel2EmergencyStateActivated, error) {
	event := new(Polygonzkevmbridgel2EmergencyStateActivated)
	if err := _Polygonzkevmbridgel2.contract.UnpackLog(event, "EmergencyStateActivated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// Polygonzkevmbridgel2EmergencyStateDeactivatedIterator is returned from FilterEmergencyStateDeactivated and is used to iterate over the raw logs and unpacked data for EmergencyStateDeactivated events raised by the Polygonzkevmbridgel2 contract.
type Polygonzkevmbridgel2EmergencyStateDeactivatedIterator struct {
	Event *Polygonzkevmbridgel2EmergencyStateDeactivated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *Polygonzkevmbridgel2EmergencyStateDeactivatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(Polygonzkevmbridgel2EmergencyStateDeactivated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(Polygonzkevmbridgel2EmergencyStateDeactivated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *Polygonzkevmbridgel2EmergencyStateDeactivatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *Polygonzkevmbridgel2EmergencyStateDeactivatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// Polygonzkevmbridgel2EmergencyStateDeactivated represents a EmergencyStateDeactivated event raised by the Polygonzkevmbridgel2 contract.
type Polygonzkevmbridgel2EmergencyStateDeactivated struct {
	Raw types.Log // Blockchain specific contextual infos
}

// FilterEmergencyStateDeactivated is a free log retrieval operation binding the contract event 0x1e5e34eea33501aecf2ebec9fe0e884a40804275ea7fe10b2ba084c8374308b3.
//
// Solidity: event EmergencyStateDeactivated()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) FilterEmergencyStateDeactivated(opts *bind.FilterOpts) (*Polygonzkevmbridgel2EmergencyStateDeactivatedIterator, error) {

	logs, sub, err := _Polygonzkevmbridgel2.contract.FilterLogs(opts, "EmergencyStateDeactivated")
	if err != nil {
		return nil, err
	}
	return &Polygonzkevmbridgel2EmergencyStateDeactivatedIterator{contract: _Polygonzkevmbridgel2.contract, event: "EmergencyStateDeactivated", logs: logs, sub: sub}, nil
}

// WatchEmergencyStateDeactivated is a free log subscription operation binding the contract event 0x1e5e34eea33501aecf2ebec9fe0e884a40804275ea7fe10b2ba084c8374308b3.
//
// Solidity: event EmergencyStateDeactivated()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) WatchEmergencyStateDeactivated(opts *bind.WatchOpts, sink chan<- *Polygonzkevmbridgel2EmergencyStateDeactivated) (event.Subscription, error) {

	logs, sub, err := _Polygonzkevmbridgel2.contract.WatchLogs(opts, "EmergencyStateDeactivated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(Polygonzkevmbridgel2EmergencyStateDeactivated)
				if err := _Polygonzkevmbridgel2.contract.UnpackLog(event, "EmergencyStateDeactivated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseEmergencyStateDeactivated is a log parse operation binding the contract event 0x1e5e34eea33501aecf2ebec9fe0e884a40804275ea7fe10b2ba084c8374308b3.
//
// Solidity: event EmergencyStateDeactivated()
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) ParseEmergencyStateDeactivated(log types.Log) (*Polygonzkevmbridgel2EmergencyStateDeactivated, error) {
	event := new(Polygonzkevmbridgel2EmergencyStateDeactivated)
	if err := _Polygonzkevmbridgel2.contract.UnpackLog(event, "EmergencyStateDeactivated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// Polygonzkevmbridgel2InitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the Polygonzkevmbridgel2 contract.
type Polygonzkevmbridgel2InitializedIterator struct {
	Event *Polygonzkevmbridgel2Initialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *Polygonzkevmbridgel2InitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(Polygonzkevmbridgel2Initialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(Polygonzkevmbridgel2Initialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *Polygonzkevmbridgel2InitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *Polygonzkevmbridgel2InitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// Polygonzkevmbridgel2Initialized represents a Initialized event raised by the Polygonzkevmbridgel2 contract.
type Polygonzkevmbridgel2Initialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) FilterInitialized(opts *bind.FilterOpts) (*Polygonzkevmbridgel2InitializedIterator, error) {

	logs, sub, err := _Polygonzkevmbridgel2.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &Polygonzkevmbridgel2InitializedIterator{contract: _Polygonzkevmbridgel2.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *Polygonzkevmbridgel2Initialized) (event.Subscription, error) {

	logs, sub, err := _Polygonzkevmbridgel2.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(Polygonzkevmbridgel2Initialized)
				if err := _Polygonzkevmbridgel2.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) ParseInitialized(log types.Log) (*Polygonzkevmbridgel2Initialized, error) {
	event := new(Polygonzkevmbridgel2Initialized)
	if err := _Polygonzkevmbridgel2.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// Polygonzkevmbridgel2L2TokenPermissionSetIterator is returned from FilterL2TokenPermissionSet and is used to iterate over the raw logs and unpacked data for L2TokenPermissionSet events raised by the Polygonzkevmbridgel2 contract.
type Polygonzkevmbridgel2L2TokenPermissionSetIterator struct {
	Event *Polygonzkevmbridgel2L2TokenPermissionSet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *Polygonzkevmbridgel2L2TokenPermissionSetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(Polygonzkevmbridgel2L2TokenPermissionSet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(Polygonzkevmbridgel2L2TokenPermissionSet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *Polygonzkevmbridgel2L2TokenPermissionSetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *Polygonzkevmbridgel2L2TokenPermissionSetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// Polygonzkevmbridgel2L2TokenPermissionSet represents a L2TokenPermissionSet event raised by the Polygonzkevmbridgel2 contract.
type Polygonzkevmbridgel2L2TokenPermissionSet struct {
	Token   common.Address
	Allowed bool
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterL2TokenPermissionSet is a free log retrieval operation binding the contract event 0x6036bc45ffdc28cb8eb8a5afad20d8d1b999da9512abc39c0a9f52995a74998d.
//
// Solidity: event L2TokenPermissionSet(address token, bool allowed)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) FilterL2TokenPermissionSet(opts *bind.FilterOpts) (*Polygonzkevmbridgel2L2TokenPermissionSetIterator, error) {

	logs, sub, err := _Polygonzkevmbridgel2.contract.FilterLogs(opts, "L2TokenPermissionSet")
	if err != nil {
		return nil, err
	}
	return &Polygonzkevmbridgel2L2TokenPermissionSetIterator{contract: _Polygonzkevmbridgel2.contract, event: "L2TokenPermissionSet", logs: logs, sub: sub}, nil
}

// WatchL2TokenPermissionSet is a free log subscription operation binding the contract event 0x6036bc45ffdc28cb8eb8a5afad20d8d1b999da9512abc39c0a9f52995a74998d.
//
// Solidity: event L2TokenPermissionSet(address token, bool allowed)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) WatchL2TokenPermissionSet(opts *bind.WatchOpts, sink chan<- *Polygonzkevmbridgel2L2TokenPermissionSet) (event.Subscription, error) {

	logs, sub, err := _Polygonzkevmbridgel2.contract.WatchLogs(opts, "L2TokenPermissionSet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(Polygonzkevmbridgel2L2TokenPermissionSet)
				if err := _Polygonzkevmbridgel2.contract.UnpackLog(event, "L2TokenPermissionSet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseL2TokenPermissionSet is a log parse operation binding the contract event 0x6036bc45ffdc28cb8eb8a5afad20d8d1b999da9512abc39c0a9f52995a74998d.
//
// Solidity: event L2TokenPermissionSet(address token, bool allowed)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) ParseL2TokenPermissionSet(log types.Log) (*Polygonzkevmbridgel2L2TokenPermissionSet, error) {
	event := new(Polygonzkevmbridgel2L2TokenPermissionSet)
	if err := _Polygonzkevmbridgel2.contract.UnpackLog(event, "L2TokenPermissionSet", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// Polygonzkevmbridgel2NewWrappedTokenIterator is returned from FilterNewWrappedToken and is used to iterate over the raw logs and unpacked data for NewWrappedToken events raised by the Polygonzkevmbridgel2 contract.
type Polygonzkevmbridgel2NewWrappedTokenIterator struct {
	Event *Polygonzkevmbridgel2NewWrappedToken // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *Polygonzkevmbridgel2NewWrappedTokenIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(Polygonzkevmbridgel2NewWrappedToken)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(Polygonzkevmbridgel2NewWrappedToken)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *Polygonzkevmbridgel2NewWrappedTokenIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *Polygonzkevmbridgel2NewWrappedTokenIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// Polygonzkevmbridgel2NewWrappedToken represents a NewWrappedToken event raised by the Polygonzkevmbridgel2 contract.
type Polygonzkevmbridgel2NewWrappedToken struct {
	OriginNetwork       uint32
	OriginTokenAddress  common.Address
	WrappedTokenAddress common.Address
	Metadata            []byte
	Raw                 types.Log // Blockchain specific contextual infos
}

// FilterNewWrappedToken is a free log retrieval operation binding the contract event 0x490e59a1701b938786ac72570a1efeac994a3dbe96e2e883e19e902ace6e6a39.
//
// Solidity: event NewWrappedToken(uint32 originNetwork, address originTokenAddress, address wrappedTokenAddress, bytes metadata)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) FilterNewWrappedToken(opts *bind.FilterOpts) (*Polygonzkevmbridgel2NewWrappedTokenIterator, error) {

	logs, sub, err := _Polygonzkevmbridgel2.contract.FilterLogs(opts, "NewWrappedToken")
	if err != nil {
		return nil, err
	}
	return &Polygonzkevmbridgel2NewWrappedTokenIterator{contract: _Polygonzkevmbridgel2.contract, event: "NewWrappedToken", logs: logs, sub: sub}, nil
}

// WatchNewWrappedToken is a free log subscription operation binding the contract event 0x490e59a1701b938786ac72570a1efeac994a3dbe96e2e883e19e902ace6e6a39.
//
// Solidity: event NewWrappedToken(uint32 originNetwork, address originTokenAddress, address wrappedTokenAddress, bytes metadata)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) WatchNewWrappedToken(opts *bind.WatchOpts, sink chan<- *Polygonzkevmbridgel2NewWrappedToken) (event.Subscription, error) {

	logs, sub, err := _Polygonzkevmbridgel2.contract.WatchLogs(opts, "NewWrappedToken")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(Polygonzkevmbridgel2NewWrappedToken)
				if err := _Polygonzkevmbridgel2.contract.UnpackLog(event, "NewWrappedToken", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseNewWrappedToken is a log parse operation binding the contract event 0x490e59a1701b938786ac72570a1efeac994a3dbe96e2e883e19e902ace6e6a39.
//
// Solidity: event NewWrappedToken(uint32 originNetwork, address originTokenAddress, address wrappedTokenAddress, bytes metadata)
func (_Polygonzkevmbridgel2 *Polygonzkevmbridgel2Filterer) ParseNewWrappedToken(log types.Log) (*Polygonzkevmbridgel2NewWrappedToken, error) {
	event := new(Polygonzkevmbridgel2NewWrappedToken)
	if err := _Polygonzkevmbridgel2.contract.UnpackLog(event, "NewWrappedToken", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
