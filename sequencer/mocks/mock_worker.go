// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	big "math/big"

	common "github.com/ethereum/go-ethereum/common"
	mock "github.com/stretchr/testify/mock"

	sequencer "github.com/0xPolygonHermez/zkevm-node/sequencer"

	state "github.com/0xPolygonHermez/zkevm-node/state"
)

// WorkerMock is an autogenerated mock type for the workerInterface type
type WorkerMock struct {
	mock.Mock
}

// AddTx provides a mock function with given fields: tx
func (_m *WorkerMock) AddTx(tx sequencer.TxTracker) {
	_m.Called(tx)
}

// DeleteTx provides a mock function with given fields: txHash, from, actualFromNonce, actualFromBalance
func (_m *WorkerMock) DeleteTx(txHash common.Hash, from common.Address, actualFromNonce *uint64, actualFromBalance *big.Int) {
	_m.Called(txHash, from, actualFromNonce, actualFromBalance)
}

// GetBestFittingTx provides a mock function with given fields: resources
func (_m *WorkerMock) GetBestFittingTx(resources sequencer.BatchResources) *sequencer.TxTracker {
	ret := _m.Called(resources)

	var r0 *sequencer.TxTracker
	if rf, ok := ret.Get(0).(func(sequencer.BatchResources) *sequencer.TxTracker); ok {
		r0 = rf(resources)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*sequencer.TxTracker)
		}
	}

	return r0
}

// HandleL2Reorg provides a mock function with given fields: txHashes
func (_m *WorkerMock) HandleL2Reorg(txHashes []common.Hash) {
	_m.Called(txHashes)
}

// MoveTxToNotReady provides a mock function with given fields: txHash, from, actualNonce, actualBalance
func (_m *WorkerMock) MoveTxToNotReady(txHash common.Hash, from common.Address, actualNonce *uint64, actualBalance *big.Int) {
	_m.Called(txHash, from, actualNonce, actualBalance)
}

// UpdateAfterSingleSuccessfulTxExecution provides a mock function with given fields: from, touchedAddresses
func (_m *WorkerMock) UpdateAfterSingleSuccessfulTxExecution(from common.Address, touchedAddresses map[common.Address]*state.TouchedAddress) {
	_m.Called(from, touchedAddresses)
}

// UpdateTx provides a mock function with given fields: txHash, from, ZKCounters
func (_m *WorkerMock) UpdateTx(txHash common.Hash, from common.Address, ZKCounters state.ZKCounters) {
	_m.Called(txHash, from, ZKCounters)
}

type mockConstructorTestingTNewWorkerMock interface {
	mock.TestingT
	Cleanup(func())
}

// NewWorkerMock creates a new instance of WorkerMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewWorkerMock(t mockConstructorTestingTNewWorkerMock) *WorkerMock {
	mock := &WorkerMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
